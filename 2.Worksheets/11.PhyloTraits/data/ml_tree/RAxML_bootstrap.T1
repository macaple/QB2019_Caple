((((LL1,(LLX12A,((WG42,(LL43F,(LL9,(LL46,LLX17)))),(WG26,LLX3)))),((((LL13,LL37),(((LL41B,(LL8,LL12)),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),((LL14,WG36),(WG14,WG27)))),((LL41A,(LL24,(WG58A,(LL5,WG23A)))),(WG56,(WG16,LL4)))),WG28)),((WG21,WG22),((LL18,(WG74,WG481)),WG43))),Methanosarcina);
(((((LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3)))),(LL9,(LL46,LLX17))),((((((LL8,LL12),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),(((LL14,WG36),(WG14,WG27)),(LL13,LL37))),((LL41A,(LL24,((WG23A,LL5),WG58A))),(WG56,(WG16,LL4)))),WG28)),(WG43,((WG21,WG22),(LL18,(WG74,WG481))))),Methanosarcina);
((WG28,(((((WG43,LL18),WG481),(WG74,(WG21,WG22))),((LL1,((LLX12A,(WG42,(WG26,LLX3))),LL43F)),((LLX17,LL46),LL9))),(((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),(((LL14,WG36),(WG14,WG27)),(LL13,LL37))),((LL24,((LL5,(WG58A,WG23A)),LL41A)),(WG56,(WG16,LL4)))))),Methanosarcina);
(((((LL24,LL5),(WG58A,WG23A)),LL41A),((WG56,(WG16,LL4)),(((WG22,((((WG43,LL18),WG481),WG74),WG21)),(WG28,(LLX12A,((((WG42,((LL46,LLX17),LL9)),LL43F),(WG26,LLX3)),LL1)))),(((WG49,WG59),(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B))))),(LL14,(WG36,(WG14,((LL13,LL37),WG27)))))))),Methanosarcina);
(((WG22,(((LL18,(WG481,WG74)),WG43),WG21)),((WG28,(((LL46,LLX17),LL9),((LLX12A,(LL43F,((WG26,LLX3),WG42))),LL1))),((((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),((WG27,WG14),(LL14,WG36))),(LL13,LL37)),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4)))))),Methanosarcina);
((WG28,((((LL46,LLX17),LL9),((((WG26,LLX3),WG42),(LLX12A,LL43F)),LL1)),((((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37))),((LL41A,(((LL5,WG23A),WG58A),LL24)),(WG56,(WG16,LL4)))),(WG22,(((WG481,(WG43,LL18)),WG74),WG21))))),Methanosarcina);
(((WG56,(WG16,LL4)),((((((WG481,WG74),((WG43,LL18),(WG21,WG22))),(((LLX17,LL46),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1))),WG28),((LL13,LL37),((WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B)))))),((WG27,WG14),(LL14,WG36))))),(LL41A,(LL24,(LL5,(WG23A,WG58A)))))),Methanosarcina);
((((WG56,(WG16,LL4)),((((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),(((LLX17,LL46),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1))),WG28),(((LL13,LL37),(((WG27,WG14),WG36),LL14)),(WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B))))))))),(LL41A,(LL24,(WG23A,(WG58A,LL5))))),Methanosarcina);
((((WG56,(WG16,LL4)),(((((WG481,WG74),((WG43,(WG21,WG22)),LL18)),(((LLX17,LL46),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1))),WG28),(((LL13,LL37),(((WG27,WG14),WG36),LL14)),(WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),(LL12,(LL8,LL41B)))))))))),(LL41A,((LL24,LL5),(WG23A,WG58A)))),Methanosarcina);
((((WG56,(WG16,LL4)),(((((WG481,WG74),((WG21,WG22),(LL18,WG43))),(LLX12A,((LL1,(LL43F,((LLX17,LL46),LL9))),((WG26,LLX3),WG42)))),WG28),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),((LL12,(LL8,LL41B)),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))))))),(LL41A,((LL24,LL5),(WG23A,WG58A)))),Methanosarcina);
(((((LL41A,(LL24,((WG23A,WG58A),LL5))),(WG56,(LL4,WG16))),((LL13,LL37),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((LL14,WG36),(WG14,WG27))))),((((WG481,(WG43,LL18)),(WG74,(WG21,WG22))),(LL1,((LL43F,((LLX17,LL46),LL9)),(((LLX3,WG26),WG42),LLX12A)))),WG28)),Methanosarcina);
(((LL41A,((WG23A,WG58A),(LL5,LL24))),((WG56,(LL4,WG16)),(((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL14,WG36),(WG14,WG27)))),(((((WG481,LL18),(WG74,(WG21,WG22))),WG43),(LLX12A,((LL1,((LLX17,LL46),LL9)),((LLX3,WG26),(LL43F,WG42))))),WG28)))),Methanosarcina);
((((((LL18,((WG74,(WG21,WG22)),WG481)),WG43),((LLX12A,((LLX3,WG26),(WG42,(LL43F,((LL46,LLX17),LL9))))),LL1)),WG28),(((LL41A,((WG23A,WG58A),(LL5,LL24))),(WG56,(LL4,WG16))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))))),Methanosarcina);
((WG28,((((LL41A,((WG58A,(LL5,WG23A)),LL24)),(WG56,(LL4,WG16))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((WG14,WG27),(LL14,WG36))))),(((LL18,((WG74,(WG21,WG22)),WG481)),WG43),(((LL43F,((LLX17,LL46),LL9)),((WG42,(LLX3,WG26)),LLX12A)),LL1)))),Methanosarcina);
((((((LL18,((WG21,WG22),(WG481,WG74))),WG43),(((LLX17,LL46),LL9),((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1))),WG28),(((LL41A,((WG23A,(WG58A,LL5)),LL24)),(WG56,(LL4,WG16))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG49,(WG59,WG44))))),((WG14,WG27),(LL14,WG36)))))),Methanosarcina);
((((LL41A,((WG23A,(WG58A,LL5)),LL24)),(WG56,(LL4,WG16))),(((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),(((WG74,(((LL18,(WG21,WG22)),WG43),WG481)),(((LLX17,LL46),LL9),((((WG42,(LLX3,WG26)),LLX12A),LL43F),LL1))),WG28))),Methanosarcina);
((((WG56,(LL4,WG16)),(((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,(WG49,WG40)),(WG34B,(WG44,WG59)))),((WG14,WG27),(LL14,WG36)))),((((LL18,((WG74,(WG21,WG22)),WG481)),WG43),(LL1,(((LL46,LLX17),LL9),((LLX3,(WG26,WG42)),(LLX12A,LL43F))))),WG28))),(LL41A,(WG58A,((WG23A,LL24),LL5)))),Methanosarcina);
((LLX12A,((LL43F,((((WG28,(((LL41A,((WG23A,(LL5,WG58A)),LL24)),(WG56,(LL4,WG16))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG49,(WG34B,(WG44,WG59))))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))))),(WG74,(((WG43,LL18),(WG21,WG22)),WG481))),LL1),((LLX17,LL46),LL9))),((LLX3,WG26),WG42))),Methanosarcina);
((LLX12A,(((WG28,(((LL24,(LL41A,(LL5,(WG58A,WG23A)))),(WG56,(LL4,WG16))),((WG74,((LL18,((WG21,WG22),WG43)),WG481)),((((LL12,LL8),LL41B),(WG34B,((WG44,WG59),((WG58B,WG40),WG49)))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37)))))),LL1),((LLX3,WG26),((((LLX17,LL46),LL9),LL43F),WG42)))),Methanosarcina);
(((LL41A,((LL24,LL5),(WG58A,WG23A))),((WG56,(LL4,WG16)),(((((LL1,(((LLX3,WG26),(LL43F,WG42)),LLX12A)),((LL46,LLX17),LL9)),WG28),(WG43,(((WG481,WG74),LL18),(WG21,WG22)))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG49,(WG34B,(WG44,WG59))))),((WG14,WG27),(LL14,WG36))))))),Methanosarcina);
(((((LL9,(LLX17,LL46)),(((WG42,(WG26,LLX3)),(LLX12A,LL43F)),LL1)),WG28),(((WG22,(WG21,(((WG43,LL18),WG481),WG74))),(((LL12,(LL41B,LL8)),(((WG34B,(WG44,WG59)),WG49),(WG40,WG58B))),((LL13,LL37),(LL14,((WG14,WG27),WG36))))),((LL41A,((WG58A,(LL5,WG23A)),LL24)),((LL4,WG16),WG56)))),Methanosarcina);
((((LL41A,(LL24,(LL5,(WG23A,WG58A)))),((LL4,WG16),WG56)),((((LLX12A,(((LL43F,((LLX17,LL46),LL9)),WG42),(WG26,(LL1,LLX3)))),WG28),(WG481,((WG74,(WG22,WG21)),(WG43,LL18)))),(((LL12,(LL41B,LL8)),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B))),((LL13,LL37),(LL14,((WG14,WG27),WG36)))))),Methanosarcina);
((LLX12A,((LL1,((WG26,LLX3),((LL43F,((LLX17,LL46),LL9)),WG42))),(((((WG49,(WG59,((((WG40,WG58B),((LL41B,LL8),LL12)),WG34B),WG44))),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),((LL41A,(LL24,(WG23A,(WG58A,LL5)))),((LL4,WG16),WG56))),WG28),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))))),Methanosarcina);
((((((WG49,(WG59,((((WG40,WG58B),((LL41B,LL8),LL12)),WG34B),WG44))),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),((LL41A,(LL24,(LL5,(WG23A,WG58A)))),((LL4,WG16),WG56))),WG28),((WG481,(WG74,((WG43,(WG22,WG21)),LL18))),(LLX12A,((((LLX17,LL46),LL9),LL1),((WG42,LL43F),(WG26,LLX3)))))),Methanosarcina);
(((WG43,((WG22,WG21),(LL18,(WG481,WG74)))),((((LL13,LL37),(((WG14,WG27),(WG36,LL14)),((LL41B,(LL8,LL12)),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B))))),((LL41A,(LL24,(WG58A,(LL5,WG23A)))),((LL4,WG16),WG56))),(WG28,((LL43F,((LL46,LLX17),LL9)),((LL1,(WG42,(WG26,LLX3))),LLX12A))))),Methanosarcina);
((WG28,((LL1,(LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),(WG26,LLX3)))),(((WG43,((WG481,WG74),((WG22,WG21),LL18))),((((LL12,LL8),LL41B),(((WG44,(WG59,WG34B)),WG49),(WG40,WG58B))),((LL14,((WG14,WG27),WG36)),(LL13,LL37)))),((LL41A,((LL24,LL5),(WG23A,WG58A))),((LL4,WG16),WG56))))),Methanosarcina);
(((LL41A,((WG23A,(LL5,WG58A)),LL24)),(((LL4,WG16),WG56),((WG28,(((WG481,WG74),((WG43,(WG22,WG21)),LL18)),(((LLX17,LL46),LL9),((LL43F,(LLX12A,(WG42,(WG26,LLX3)))),LL1)))),((LL13,LL37),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B))),((WG14,WG27),(WG36,LL14))))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((LL4,WG16),WG56),((WG28,(((WG22,WG21),((LL18,WG43),(WG481,WG74))),(LLX12A,(((LL43F,WG42),(WG26,LLX3)),(LL1,((LLX17,LL46),LL9)))))),((LL13,LL37),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B))),((WG14,WG27),(WG36,LL14))))))),Methanosarcina);
((((WG28,((WG481,(WG74,((WG22,WG21),(LL18,WG43)))),(((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(WG26,LLX3))),LL1)))),((WG49,(WG59,(WG34B,(((WG40,WG58B),((LL12,LL8),LL41B)),WG44)))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))),((LL24,(LL41A,(LL5,(WG58A,WG23A)))),((LL4,WG16),WG56))),Methanosarcina);
(((((LL13,LL37),((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),(LL14,((WG14,WG27),WG36)))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),((LL4,WG16),WG56))),(WG28,((WG43,(((WG481,WG74),(WG22,WG21)),LL18)),(LLX12A,(((LL43F,WG42),(WG26,LLX3)),(LL1,((LLX17,LL46),LL9))))))),Methanosarcina);
((((((WG58A,WG23A),LL5),LL41A),LL24),((((WG74,WG481),((WG22,WG21),(WG43,LL18))),((WG16,LL4),WG56)),((WG28,(LL1,(((WG42,(WG26,LLX3)),LLX12A),(LL43F,((LLX17,LL46),LL9))))),((LL37,LL13),(((LL41B,(LL12,LL8)),((WG58B,WG40),((WG49,(WG44,WG59)),WG34B))),((WG14,WG27),(WG36,LL14))))))),Methanosarcina);
((((LL43F,((LL46,LLX17),LL9)),((WG42,(WG26,(LL1,LLX3))),LLX12A)),((((WG74,(WG481,((WG22,WG21),(WG43,LL18)))),((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),(((LL37,LL13),(WG14,WG27)),(WG36,LL14)))),((((LL5,(WG58A,WG23A)),LL24),LL41A),((WG16,LL4),WG56))),WG28)),Methanosarcina);
((((WG58A,((WG23A,LL5),LL24)),LL41A),(((WG16,LL4),WG56),(((WG28,(((LLX17,LL46),LL9),(((WG42,(WG26,LLX3)),(LL43F,LLX12A)),LL1))),((LL18,(WG481,(WG74,(WG22,WG21)))),WG43)),((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((LL37,LL13),((WG14,WG27),(WG36,LL14))))))),Methanosarcina);
((((WG28,((((LLX17,LL46),LL9),((LL43F,(LLX12A,(WG42,(WG26,LLX3)))),LL1)),((WG481,WG74),((WG43,LL18),(WG22,WG21))))),((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B)))))),((LL41A,(((WG23A,LL5),WG58A),LL24)),((WG16,LL4),WG56))),Methanosarcina);
(((((WG16,LL4),WG56),((WG28,(((LLX12A,(((((LL46,LLX17),LL9),LL43F),WG42),(WG26,LLX3))),LL1),(WG481,((WG43,LL18),(WG74,(WG22,WG21)))))),((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((WG58B,WG40),((WG49,(WG59,WG44)),WG34B))))))),(LL41A,(((WG23A,LL5),WG58A),LL24))),Methanosarcina);
(((((WG16,LL4),WG56),((((WG481,(LL18,(WG74,(WG22,WG21)))),WG43),(WG28,((LLX12A,(((((LLX17,LL46),LL9),LL43F),WG42),(WG26,LLX3))),LL1))),((LL37,LL13),((LL14,((WG14,WG27),WG36)),(WG49,((WG34B,(((LL41B,(LL12,LL8)),(WG58B,WG40)),WG44)),WG59)))))),(LL41A,(((WG23A,LL5),WG58A),LL24))),Methanosarcina);
((((WG28,((((LL46,LLX17),LL9),((LL43F,((WG26,LLX3),(LLX12A,WG42))),LL1)),(WG43,((WG22,WG21),(LL18,(WG481,WG74)))))),((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(WG49,(WG40,((((LL12,LL8),LL41B),((WG59,WG44),WG34B)),WG58B)))))),((LL41A,((LL24,LL5),(WG58A,WG23A))),((WG16,LL4),WG56))),Methanosarcina);
((LLX12A,((LL1,((((((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))))),((LL41A,((WG58A,(LL5,WG23A)),LL24)),((WG16,LL4),WG56))),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))),WG28),((LLX17,LL46),LL9))),((WG26,LLX3),(WG42,LL43F)))),Methanosarcina);
((WG28,((((((WG26,LLX3),WG42),LLX12A),(LL43F,((LLX17,LL46),LL9))),LL1),((((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),((LL41A,(((WG23A,LL5),WG58A),LL24)),((WG16,LL4),WG56))),((WG481,WG74),((WG22,WG21),(WG43,LL18)))))),Methanosarcina);
((((WG43,(LL18,((WG481,WG74),(WG22,WG21)))),((((LL43F,(WG42,((LLX17,LL46),LL9))),(WG26,LLX3)),LLX12A),LL1)),((((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG16,LL4),WG56))),WG28)),Methanosarcina);
((WG42,(((((((LL46,LLX17),LL9),(WG28,((WG43,(LL18,((WG22,WG21),(WG74,WG481)))),(((LL41A,(((WG58A,WG23A),LL5),LL24)),(WG56,(LL4,WG16))),(((LL41B,(LL8,LL12)),((WG40,WG58B),(WG34B,(WG49,(WG44,WG59))))),(((WG36,LL14),(WG14,WG27)),(LL13,LL37))))))),LL1),LLX12A),(WG26,LLX3)),LL43F)),Methanosarcina);
(((LL41A,(LL24,(WG23A,(WG58A,LL5)))),((WG56,(LL4,WG16)),(((LL13,LL37),((WG49,((((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44),WG59)),(LL14,((WG14,WG27),WG36)))),(((LL1,((LLX12A,((WG26,LLX3),(LL43F,WG42))),((LL46,LLX17),LL9))),WG28),((WG74,WG481),((WG43,LL18),(WG22,WG21))))))),Methanosarcina);
((((WG481,(((WG22,WG21),WG74),LL18)),WG43),((((((((WG58A,LL5),WG23A),LL24),LL41A),(WG56,(LL4,WG16))),((LL13,LL37),((WG49,((((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44),WG59)),((WG14,WG27),(WG36,LL14))))),WG28),((LL1,(((WG42,WG26),LLX3),(LLX12A,LL43F))),((LLX17,LL46),LL9)))),Methanosarcina);
((((((WG58A,LL5),WG23A),(LL24,LL41A)),(WG56,(LL4,WG16))),(((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((WG14,WG27),(WG36,LL14)))),(((((WG22,WG21),((WG481,WG74),LL18)),WG43),WG28),((LL1,(LLX12A,((WG42,LL43F),(WG26,LLX3)))),((LLX17,LL46),LL9))))),Methanosarcina);
(((((WG42,(WG26,LLX3)),(LL43F,LLX12A)),LL1),(((LL46,LLX17),LL9),((WG43,((((WG22,WG21),WG74),WG481),LL18)),(((((LL24,(LL5,(WG23A,WG58A))),LL41A),(WG56,(LL4,WG16))),((LL13,LL37),((WG44,((WG59,WG49),((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B))),((WG14,WG27),(WG36,LL14))))),WG28)))),Methanosarcina);
((LLX12A,((WG42,(WG26,LLX3)),(LL43F,((LL1,((WG481,(((LL18,WG43),(WG22,WG21)),WG74)),((((((LL5,WG23A),WG58A),(LL41A,LL24)),(WG56,(LL4,WG16))),((LL13,LL37),((WG44,((WG59,WG49),((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B))),(LL14,((WG14,WG27),WG36))))),WG28))),((LL46,LLX17),LL9))))),Methanosarcina);
(((WG481,((LL18,(WG43,(WG22,WG21))),WG74)),((((((LL24,LL5),(WG23A,WG58A)),LL41A),(WG56,(LL4,WG16))),((LL13,LL37),((((LL12,LL8),LL41B),(((WG40,WG58B),((WG49,WG59),WG44)),WG34B)),((WG14,WG27),(WG36,LL14))))),((((((LL46,LLX17),LL9),LL43F),(LLX12A,(WG42,(WG26,LLX3)))),LL1),WG28))),Methanosarcina);
(((LLX12A,((WG42,(WG26,LLX3)),((LL1,((LLX17,LL46),LL9)),LL43F))),((WG43,(LL18,(WG481,((WG22,WG21),WG74)))),(((((LL24,(LL5,(WG23A,WG58A))),LL41A),(WG56,(LL4,WG16))),((WG49,(WG59,(WG44,(WG34B,(((LL12,LL8),LL41B),(WG40,WG58B)))))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))),WG28))),Methanosarcina);
((((LL24,(WG58A,(LL5,WG23A))),LL41A),((WG56,(LL4,WG16)),(((LL13,LL37),((((LL12,LL8),LL41B),(((WG49,WG40),WG58B),((WG59,WG44),WG34B))),((WG14,WG27),(WG36,LL14)))),(WG28,((((LLX17,LL46),LL9),((LL43F,(LLX12A,(WG42,(WG26,LLX3)))),LL1)),(WG74,(WG481,(LL18,((WG22,WG21),WG43))))))))),Methanosarcina);
((((LL24,((WG23A,LL5),WG58A)),LL41A),((WG56,(LL4,WG16)),(((LL13,LL37),((((LL12,LL8),LL41B),(((WG49,WG40),WG58B),((WG59,WG44),WG34B))),((WG14,WG27),(WG36,LL14)))),(WG28,((LLX12A,(((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)),LL1)),(WG481,(((WG22,WG21),(WG43,LL18)),WG74))))))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL24,(LL41A,(LL5,(WG23A,WG58A))))),(((((WG34B,(WG44,WG59)),(WG58B,(WG49,WG40))),((LL41B,LL8),LL12)),((LL37,LL13),(LL14,((WG27,WG14),WG36)))),((((LL1,(LLX12A,((WG26,LLX3),(LL43F,WG42)))),(LLX17,(LL46,LL9))),(WG43,((WG21,WG22),((WG481,WG74),LL18)))),WG28))),Methanosarcina);
((((((LL1,(LLX12A,((WG26,LLX3),(LL43F,WG42)))),(LL9,(LLX17,LL46))),(WG43,((WG21,WG22),((WG481,WG74),LL18)))),WG28),(((WG56,(WG16,LL4)),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40)),((LL41B,LL8),LL12)),((LL37,LL13),((WG27,WG14),(WG36,LL14)))))),Methanosarcina);
((((WG74,WG481),((WG43,LL18),(WG22,WG21))),((WG28,(((WG56,(WG16,LL4)),((LL41A,(LL5,(WG23A,WG58A))),LL24)),((WG49,(WG59,((((WG58B,WG40),((LL41B,LL8),LL12)),WG34B),WG44))),((LL37,LL13),(WG27,(WG14,(WG36,LL14))))))),(LL1,(LLX3,((((((LLX17,LL46),LL9),LL43F),WG42),LLX12A),WG26))))),Methanosarcina);
(((WG28,((WG43,(LL18,(((WG22,WG21),WG74),WG481))),(((WG56,(WG16,LL4)),((LL41A,(WG23A,(WG58A,LL5))),LL24)),((WG49,((((LL41B,LL8),LL12),WG34B),((WG58B,WG40),(WG44,WG59)))),((LL37,LL13),((WG36,LL14),(WG27,WG14))))))),(((LLX17,LL46),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1))),Methanosarcina);
(((((LL46,LLX17),LL9),(((LLX3,LL1),(WG26,(WG42,LLX12A))),LL43F)),(((WG56,(WG16,LL4)),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((WG28,((LL37,LL13),((LL14,((WG27,WG14),WG36)),(WG49,(((LL41B,LL8),LL12),((WG58B,WG40),(WG34B,(WG44,WG59)))))))),(WG74,(WG481,((WG43,LL18),(WG22,WG21))))))),Methanosarcina);
(((((LLX17,LL46),LL9),((LLX12A,(WG42,((LLX3,LL1),WG26))),LL43F)),(((WG22,(WG21,((WG74,WG481),(WG43,LL18)))),(((WG56,(WG16,LL4)),(LL41A,((WG23A,(LL5,WG58A)),LL24))),((((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40)),((LL41B,LL8),LL12)),((LL37,LL13),((WG14,(WG36,LL14)),WG27))))),WG28)),Methanosarcina);
(((((WG56,(WG16,LL4)),(LL41A,((LL24,LL5),(WG58A,WG23A)))),((((WG34B,(WG44,WG59)),(WG58B,(WG49,WG40))),((LL41B,LL8),LL12)),((LL37,LL13),((WG36,LL14),(WG27,WG14))))),(WG28,((((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1)),(WG43,(((WG22,WG21),LL18),(WG74,WG481)))))),Methanosarcina);
((((LL41A,(WG23A,(LL5,WG58A))),LL24),((((LL37,LL13),(((WG36,LL14),(WG27,WG14)),(((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40)),(LL41B,(LL8,LL12))))),(WG28,((LLX12A,((WG42,(LLX3,WG26)),((((LLX17,LL46),LL9),LL43F),LL1))),(WG43,(((WG22,WG21),LL18),(WG74,WG481)))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),((LL37,LL13),((WG36,LL14),(WG27,WG14)))),(WG28,((LLX12A,((WG42,WG26),((((LL46,LLX17),LL9),LL43F),(LLX3,LL1)))),(WG43,(LL18,(WG481,(WG74,(WG22,WG21)))))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL1,(LLX12A,((WG42,(((LL46,LLX17),LL9),LL43F)),(LLX3,WG26)))),(((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),(((WG56,(WG16,LL4)),(((LL5,(WG58A,WG23A)),LL24),LL41A)),((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),((LL37,LL13),((WG36,(WG27,WG14)),LL14))))),WG28)),Methanosarcina);
(((((((WG27,WG14),(LL14,WG36)),(WG49,(WG59,((WG34B,(((LL8,LL12),LL41B),(WG58B,WG40))),WG44)))),(LL37,LL13)),((WG56,(LL4,WG16)),(LL41A,(LL24,(WG23A,(LL5,WG58A)))))),(((WG74,((WG21,WG22),(WG481,(LL18,WG43)))),(LL1,((LL43F,((LL46,LLX17),LL9)),(((WG26,LLX3),WG42),LLX12A)))),WG28)),Methanosarcina);
((LLX12A,(((((WG28,(((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),((WG56,(LL4,WG16)),(LL41A,(LL24,(WG23A,(LL5,WG58A))))))),((WG21,WG22),((LL18,WG43),(WG481,WG74)))),LL1),((LLX17,LL46),LL9)),(LL43F,((WG26,LLX3),WG42)))),Methanosarcina);
((((((WG28,(((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),WG44))))),((WG56,(LL4,WG16)),(LL41A,(LL24,(WG58A,(WG23A,LL5))))))),((LL18,(WG481,(WG74,(WG21,WG22)))),WG43)),LL1),((WG26,LLX3),LLX12A)),(WG42,(LL43F,((LLX17,LL46),LL9)))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(((((WG22,((((WG43,LL18),WG481),WG74),WG21)),(LLX12A,((LL1,(LL43F,(((LLX17,LL46),LL9),WG42))),(WG26,LLX3)))),WG28),((LL37,LL13),((WG27,(WG14,(LL14,WG36))),(((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B)))))),(WG56,(LL4,WG16)))),Methanosarcina);
((WG28,(((((WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),WG44))),((LL37,LL13),((LL14,WG36),(WG27,WG14)))),((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A)))))),(WG481,(WG74,(LL18,((WG21,WG22),WG43))))),(LLX12A,((WG42,WG26),((LL1,LLX3),(LL43F,((LLX17,LL46),LL9))))))),Methanosarcina);
(((WG28,(((((((LL12,LL8),LL41B),(WG58B,WG40)),(((WG44,WG59),WG49),WG34B)),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),((WG56,(LL4,WG16)),(LL41A,(LL24,(WG58A,(WG23A,LL5)))))),(WG43,(WG481,(LL18,(WG74,(WG21,WG22))))))),(LLX12A,((WG42,(LLX3,WG26)),(LL1,(LL43F,((LLX17,LL46),LL9)))))),Methanosarcina);
((((((LL1,(((WG42,(LLX3,WG26)),LLX12A),(LL43F,((LLX17,LL46),LL9)))),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))),WG28),((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A)))))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),((WG49,(WG34B,(WG44,WG59))),(((LL12,LL8),LL41B),(WG58B,WG40)))))),Methanosarcina);
(((WG481,(WG74,(WG43,(LL18,(WG21,WG22))))),((WG28,(LLX12A,((((LLX3,(WG26,WG42)),LL43F),((LL46,LLX17),LL9)),LL1))),(((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),((((LL12,LL8),LL41B),((WG58B,(WG49,WG40)),(WG34B,(WG44,WG59)))),((LL37,LL13),(LL14,(WG36,(WG27,WG14)))))))),Methanosarcina);
((((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),((WG28,(((LL18,(((WG21,WG22),WG74),WG481)),WG43),(((LL46,LLX17),LL9),(LL1,((LLX12A,((LLX3,WG26),WG42)),LL43F))))),((WG56,(LL4,WG16)),(((LL5,(WG58A,WG23A)),LL24),LL41A)))),Methanosarcina);
((((((WG21,WG22),WG74),WG481),(WG43,LL18)),((LL1,(((LLX3,WG26),((((LL46,LLX17),LL9),LL43F),WG42)),LLX12A)),((((WG56,(LL4,WG16)),((WG23A,(LL5,WG58A)),(LL24,LL41A))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))))))),WG28))),Methanosarcina);
(((((((WG23A,LL5),WG58A),LL41A),LL24),((WG16,LL4),WG56)),((WG28,(((LL9,(LL46,LLX17)),(((WG42,(LLX3,WG26)),(LLX12A,LL43F)),LL1)),(WG43,((WG21,WG22),(WG74,(LL18,WG481)))))),((LL37,LL13),(((WG59,(WG44,(((LL41B,(LL8,LL12)),(WG40,WG58B)),WG34B))),WG49),((WG36,LL14),(WG14,WG27)))))),Methanosarcina);
((((LL24,(WG58A,(WG23A,LL5))),LL41A),(((WG16,LL4),WG56),((WG28,((((LL46,LLX17),LL9),((LL43F,((WG42,(LLX3,WG26)),LLX12A)),LL1)),((WG74,WG481),(LL18,(WG43,(WG21,WG22)))))),(((((LL12,LL8),LL41B),(WG40,WG58B)),(WG34B,((WG49,WG59),WG44))),(((WG36,LL14),(WG14,WG27)),(LL37,LL13)))))),Methanosarcina);
((((LL37,LL13),(LL14,(((WG14,WG27),(WG49,(WG59,(WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B))))),WG36))),((((LL24,(LL5,(WG58A,WG23A))),LL41A),((WG16,LL4),WG56)),(WG28,((LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),(WG42,(LLX3,WG26)))),((WG21,WG22),((LL18,WG43),(WG74,WG481))))))),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),(((WG16,LL4),WG56),((WG28,((LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),(WG42,(LLX3,WG26)))),(((WG21,WG22),(LL18,(WG74,WG481))),WG43))),((LL37,LL13),(LL14,(((WG14,WG27),((((LL12,LL8),LL41B),(WG40,WG58B)),(WG34B,((WG49,WG59),WG44)))),WG36)))))),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),(((WG16,LL4),WG56),((WG28,((LLX12A,(((LL1,LLX3),WG26),((((LLX17,LL46),LL9),LL43F),WG42))),((LL18,(WG481,(WG74,(WG21,WG22)))),WG43))),(((LL14,(WG36,(WG14,WG27))),(LL37,LL13)),(WG49,((((LL12,LL8),LL41B),WG34B),((WG40,WG58B),(WG59,WG44)))))))),Methanosarcina);
((((WG28,((((LL46,LLX17),LL9),(LL43F,((LLX12A,WG42),((LL1,LLX3),WG26)))),((WG481,WG74),((WG21,WG22),(WG43,LL18))))),(((WG27,((LL14,WG36),WG14)),(LL37,LL13)),(((LL8,LL41B),LL12),(((WG49,WG40),WG58B),(WG34B,(WG59,WG44)))))),((((WG58A,WG23A),(LL24,LL5)),LL41A),((WG16,LL4),WG56))),Methanosarcina);
(((((WG16,LL4),WG56),(((WG28,(((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1))),((LL37,LL13),((((LL41B,LL8),LL12),(WG34B,((WG59,WG44),((WG49,WG40),WG58B)))),(LL14,(WG36,(WG14,WG27)))))),((WG58A,((LL5,LL24),WG23A)),LL41A))),((WG481,WG74),((WG21,WG22),(WG43,LL18)))),Methanosarcina);
(((((LLX17,LL46),LL9),(((LLX12A,(WG42,(LLX3,WG26))),LL43F),LL1)),(((((((LL41B,LL8),LL12),((((WG59,WG49),WG44),WG34B),(WG40,WG58B))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),((LL41A,((LL5,(WG23A,WG58A)),LL24)),((WG16,LL4),WG56))),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))),WG28)),Methanosarcina);
(((LL41A,((WG23A,WG58A),(LL24,LL5))),(((WG16,LL4),WG56),((((LLX12A,((WG42,(LLX3,WG26)),(LL43F,(LL1,((LL46,LLX17),LL9))))),(WG74,(((WG43,LL18),(WG21,WG22)),WG481))),WG28),((WG49,((WG44,(WG34B,(WG40,((LL41B,(LL8,LL12)),WG58B)))),WG59)),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))))),Methanosarcina);
(((LL41A,(((WG23A,WG58A),LL5),LL24)),(((WG16,LL4),WG56),((((LLX12A,((LL1,(LLX3,WG26)),(WG42,(LL43F,((LLX17,LL46),LL9))))),(WG43,(LL18,((WG21,WG22),(WG481,WG74))))),WG28),((LL14,(WG49,((WG44,(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40)))),WG59))),((WG14,((LL37,LL13),WG27)),WG36))))),Methanosarcina);
((WG28,(((WG74,((((WG21,WG22),LL18),WG43),WG481)),(((LL24,(LL41A,((WG23A,WG58A),LL5))),(WG56,(WG16,LL4))),((WG44,((WG59,WG34B),(WG49,((WG40,WG58B),((LL12,LL8),LL41B))))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))))),(LL1,((LL9,(LLX17,LL46)),(((LLX3,WG26),(LLX12A,WG42)),LL43F))))),Methanosarcina);
((((WG21,WG22),(((WG481,WG74),LL18),WG43)),((((LL41A,(((WG23A,WG58A),LL5),LL24)),(WG56,(WG16,LL4))),((LL13,LL37),((WG49,(WG59,((WG34B,((WG40,WG58B),((LL12,LL8),LL41B))),WG44))),((WG14,WG27),(LL14,WG36))))),((LL1,((LLX12A,LL43F),((WG42,((LLX17,LL46),LL9)),(LLX3,WG26)))),WG28))),Methanosarcina);
(((LL41A,(WG58A,(LL5,(WG23A,LL24)))),((WG56,(WG16,LL4)),(((LL13,LL37),((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG40,WG58B))),((WG36,(WG14,WG27)),LL14))),(((LL1,(LLX12A,((LL43F,(WG42,((LL46,LLX17),LL9))),(LLX3,WG26)))),WG28),(WG43,(((WG74,(WG21,WG22)),WG481),LL18)))))),Methanosarcina);
(((LL1,(LLX12A,((WG42,(((LL46,LLX17),LL9),LL43F)),(LLX3,WG26)))),(WG28,((((WG74,(WG21,WG22)),WG481),(LL18,WG43)),(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG40,WG58B))),(((WG14,(LL14,WG36)),WG27),(LL13,LL37))))))),Methanosarcina);
(((WG43,((WG21,WG22),((WG481,WG74),LL18))),((((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),(((WG49,(WG59,WG44)),WG34B),(WG40,WG58B))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37)))),((LL1,((((LLX17,LL46),LL9),LL43F),(((LLX3,WG26),WG42),LLX12A))),WG28))),Methanosarcina);
((((WG28,(((LL41A,(((WG23A,WG58A),LL5),LL24)),(WG56,(WG16,LL4))),((WG49,(WG59,((WG34B,((WG40,WG58B),((LL12,LL8),LL41B))),WG44))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))))),(WG43,(LL18,((WG21,WG22),(WG481,WG74))))),(((LLX17,LL46),LL9),(LL1,(((LLX3,WG26),(LL43F,WG42)),LLX12A)))),Methanosarcina);
(((LL41A,((WG23A,(WG58A,LL5)),LL24)),((WG56,(WG16,LL4)),(((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG40,WG58B))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37))),(((WG22,((((WG481,WG74),LL18),WG43),WG21)),(LLX12A,(((LL43F,(((LLX17,LL46),LL9),LL1)),(LLX3,WG26)),WG42))),WG28)))),Methanosarcina);
(((WG22,(((WG481,WG74),(LL18,WG43)),WG21)),((WG56,(WG16,LL4)),((((LL13,LL37),((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG40,WG58B))),((WG27,WG14),(LL14,WG36)))),(((((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42))),LLX12A),LL1),WG28)),(LL41A,((LL24,LL5),(WG23A,WG58A)))))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((WG56,(WG16,LL4)),(((((LL12,LL8),LL41B),((WG58B,(WG49,WG40)),((WG44,WG59),WG34B))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))),(((WG74,(((LL18,WG43),(WG21,WG22)),WG481)),(LLX12A,((LL43F,(((LL46,LLX17),LL9),LL1)),((LLX3,WG26),WG42)))),WG28)))),Methanosarcina);
((LLX12A,(LL43F,((((WG28,((((LL41A,((WG23A,WG58A),(LL24,LL5))),(WG56,(WG16,LL4))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG49,((WG44,WG59),WG34B)))),((WG27,WG14),(LL14,WG36))))),(WG43,((WG21,WG22),((WG481,WG74),LL18))))),((LLX17,LL46),LL9)),LL1),((WG26,WG42),LLX3)))),Methanosarcina);
(((LL1,(LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),(WG26,LLX3)))),(WG28,(((WG22,WG21),((WG481,WG74),(WG43,LL18))),(((WG56,(LL4,WG16)),((WG58A,(WG23A,LL5)),(LL41A,LL24))),((((LL14,WG36),(WG27,WG14)),(WG49,((((LL12,LL8),LL41B),(WG58B,WG40)),(WG34B,(WG44,WG59))))),(LL13,LL37)))))),Methanosarcina);
(((LL41A,(LL24,(WG23A,(LL5,WG58A)))),(((((LL1,(LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)))),(WG22,(WG21,((WG481,WG74),(WG43,LL18))))),WG28),((((LL14,WG36),(WG27,WG14)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))))),(LL13,LL37))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG43,((((WG22,WG21),WG74),WG481),LL18)),((WG28,((LL43F,((LLX17,LL46),LL9)),(((WG42,(WG26,LLX3)),LLX12A),LL1))),(((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL13,LL37),(LL14,(WG36,(WG27,WG14))))),((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A)))))))),Methanosarcina);
((LLX12A,((((((((LL13,LL37),(((WG27,WG14),(LL14,WG36)),((WG58B,WG40),((WG34B,(WG44,(WG49,WG59))),((LL12,LL8),LL41B))))),((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A)))))),WG28),(WG43,((((WG22,WG21),WG74),WG481),LL18))),LL1),((LLX17,LL46),LL9)),(LL43F,((WG42,WG26),LLX3)))),Methanosarcina);
(((LL41A,(WG58A,((LL5,LL24),WG23A))),(((WG28,((WG43,((WG22,WG21),((WG74,WG481),LL18))),(LL1,(LLX12A,(WG42,((((LLX17,LL46),LL9),(WG26,LLX3)),LL43F)))))),((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG28,((WG43,((WG22,WG21),((WG74,WG481),LL18))),(LL1,((LLX12A,((WG26,LLX3),(LL43F,WG42))),((LLX17,LL46),LL9))))),(((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(WG44,((WG49,WG59),((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B))))),((WG56,(LL4,WG16)),((LL24,(LL5,(WG23A,WG58A))),LL41A)))),Methanosarcina);
((((WG28,((WG43,((LL18,WG481),(WG74,(WG22,WG21)))),(LLX12A,(((WG26,LLX3),WG42),((LL43F,((LLX17,LL46),LL9)),LL1))))),((WG56,(LL4,WG16)),((LL24,((WG23A,LL5),WG58A)),LL41A))),(((WG40,(((WG34B,(WG44,WG59)),((LL12,LL8),LL41B)),WG58B)),WG49),((LL13,LL37),((WG27,WG14),(LL14,WG36))))),Methanosarcina);
(((((((WG56,(LL4,WG16)),((LL5,(WG58A,WG23A)),(LL41A,LL24))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL13,LL37),(LL14,(WG36,(WG27,WG14)))))),WG28),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))),(((LLX12A,(WG26,LLX3)),(LL43F,(WG42,((LLX17,LL46),LL9)))),LL1)),Methanosarcina);
((LLX12A,((WG42,(LLX3,WG26)),(LL43F,((LL1,(WG28,((WG74,(((WG22,WG21),(WG43,LL18)),WG481)),(((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((LL13,LL37),(LL14,(WG36,(WG27,WG14))))))))),((LL46,LLX17),LL9))))),Methanosarcina);
((((WG56,(LL4,WG16)),(((LL5,(WG58A,WG23A)),LL24),LL41A)),(((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL13,LL37),((WG27,WG14),(LL14,WG36)))),((((LL43F,((LLX17,LL46),LL9)),(LL1,(LLX12A,(WG42,(LLX3,WG26))))),WG28),(WG43,(((WG481,WG74),LL18),(WG22,WG21)))))),Methanosarcina);
((((((((LL12,LL8),LL41B),((WG40,WG58B),(((WG49,WG59),WG44),WG34B))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG58A,WG23A)))))),((LL1,((LL43F,(LL9,(LLX17,LL46))),(((LLX3,WG26),WG42),LLX12A))),WG28)),((((WG22,WG21),(WG43,LL18)),WG481),WG74)),Methanosarcina);
((LLX12A,(((((WG28,(((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),((WG40,WG58B),(((WG49,WG59),WG44),WG34B))))),((WG56,(WG16,LL4)),(LL41A,((WG58A,WG23A),(LL24,LL5)))))),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))),LL1),(LL43F,((LL46,LLX17),LL9))),((LLX3,WG26),WG42))),Methanosarcina);
(((LL41A,((WG58A,(WG23A,LL5)),LL24)),(((((WG74,((((WG22,WG21),LL18),WG43),WG481)),((LL1,((LL43F,LLX12A),(LLX3,(WG26,WG42)))),((LLX17,LL46),LL9))),WG28),((WG44,((WG34B,(((LL12,LL8),LL41B),(WG40,WG58B))),(WG49,WG59))),((LL13,LL37),((LL14,WG36),(WG27,WG14))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((((WG43,((WG481,((WG22,WG21),WG74)),LL18)),(LLX12A,(WG42,(((((LLX17,LL46),LL9),LL1),LL43F),(LLX3,WG26))))),WG28),((WG49,(WG59,(WG44,(WG34B,(((LL12,LL8),LL41B),(WG40,WG58B)))))),((LL13,LL37),((LL14,WG36),(WG27,WG14))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,((WG58A,(WG23A,LL5)),LL24)),(((((WG43,((WG481,((WG22,WG21),WG74)),LL18)),(((LLX17,LL46),LL9),(LL1,(((LLX3,WG26),(LL43F,WG42)),LLX12A)))),WG28),(((((LL12,LL8),LL41B),(WG40,WG58B)),(((WG49,WG59),WG44),WG34B)),((LL13,LL37),((LL14,WG36),(WG27,WG14))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((((WG43,(((WG22,WG21),(WG74,WG481)),LL18)),(((LLX17,LL46),LL9),(LLX12A,((LLX3,LL1),(WG26,(LL43F,WG42)))))),WG28),(((((LL12,LL8),LL41B),((WG40,WG58B),(((WG49,WG59),WG44),WG34B))),((LL13,LL37),((LL14,WG36),(WG27,WG14)))),((WG56,(WG16,LL4)),(LL41A,((WG23A,(LL5,WG58A)),LL24))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((((WG43,((WG74,WG481),(LL18,(WG22,WG21)))),(((LLX12A,(WG42,((LLX3,LL1),WG26))),(LL43F,((LL46,LLX17),LL9))),WG28)),(((((WG49,WG59),WG44),WG34B),((LL12,(LL8,LL41B)),(WG40,WG58B))),((LL13,LL37),(LL14,(WG36,(WG27,WG14)))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,(((LL5,LL24),WG23A),WG58A)),(((WG28,((WG43,((WG74,WG481),(LL18,(WG22,WG21)))),(LLX12A,(((LL43F,WG42),(LLX3,WG26)),(LL1,((LLX17,LL46),LL9)))))),((WG49,(WG59,((((LL41B,(LL12,LL8)),(WG40,WG58B)),WG44),WG34B))),((LL13,LL37),(LL14,(WG36,(WG27,WG14)))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG28,((((((LL12,LL8),LL41B),((WG40,WG58B),(((WG49,WG59),WG44),WG34B))),((LL13,LL37),((WG27,WG14),(LL14,WG36)))),((WG56,(WG16,LL4)),(LL41A,(((LL5,LL24),WG23A),WG58A)))),(WG22,(WG21,((WG481,(WG43,LL18)),WG74))))),((((LLX17,LL46),LL9),((LLX12A,((LLX3,WG26),WG42)),LL43F)),LL1)),Methanosarcina);
(((WG28,((((((LL12,LL8),LL41B),((WG40,WG58B),(((WG49,WG59),WG44),WG34B))),((LL13,LL37),(LL14,(WG36,(WG27,WG14))))),((WG56,(WG16,LL4)),(((LL5,(WG23A,WG58A)),LL24),LL41A))),(WG22,(WG21,((WG481,(WG43,LL18)),WG74))))),(LLX12A,(((LL1,LLX3),WG26),(LL43F,(((LLX17,LL46),LL9),WG42))))),Methanosarcina);
(((WG56,(LL4,WG16)),((((LL37,LL13),(((LL41B,(LL8,LL12)),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((WG36,LL14),(WG14,WG27)))),(WG28,(((WG481,(LL18,WG43)),((WG22,WG21),WG74)),((LLX12A,(LL1,((LLX3,WG26),(WG42,LL43F)))),(LL9,(LLX17,LL46)))))),(LL41A,((WG23A,(LL5,LL24)),WG58A)))),Methanosarcina);
((((WG56,(LL4,WG16)),(((WG22,(WG21,((LL18,(WG481,WG74)),WG43))),((LLX12A,((LLX3,WG26),(WG42,LL43F))),(LL1,((LL46,LLX17),LL9)))),(((LL37,LL13),((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),((WG36,LL14),(WG14,WG27)))),WG28))),(LL41A,((LL5,(WG58A,WG23A)),LL24))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG56,(LL4,WG16)),((WG28,((LLX12A,(((LLX3,WG26),((((LLX17,LL46),LL9),WG42),LL43F)),LL1)),(WG43,((WG481,WG74),((WG22,WG21),LL18))))),((LL37,LL13),((WG44,((WG49,WG59),(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B))),((WG36,LL14),(WG14,WG27))))))),Methanosarcina);
((((LL41A,(((WG58A,WG23A),LL5),LL24)),(WG56,(LL4,WG16))),((WG28,((LLX12A,((WG42,WG26),((((LLX17,LL46),LL9),LL43F),(LL1,LLX3)))),((WG22,WG21),((WG43,LL18),(WG481,WG74))))),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((WG27,((WG36,LL14),WG14)),(LL37,LL13))))),Methanosarcina);
(((LL41A,((WG23A,(LL5,WG58A)),LL24)),((WG56,(LL4,WG16)),((WG28,((((LL46,LLX17),LL9),((((LL43F,WG42),LLX12A),(LLX3,WG26)),LL1)),(WG43,(((WG481,WG74),LL18),(WG22,WG21))))),((LL37,LL13),((WG49,(((WG58B,WG40),((LL12,LL8),LL41B)),(WG34B,(WG44,WG59)))),(LL14,((WG14,WG27),WG36))))))),Methanosarcina);
((((WG56,(LL4,WG16)),((WG28,((LL1,(((LL43F,(((LL46,LLX17),LL9),WG42)),(LLX3,WG26)),LLX12A)),(WG43,(((WG481,WG74),LL18),(WG22,WG21))))),((((WG58B,WG40),((LL12,LL8),LL41B)),((WG34B,(WG44,WG59)),WG49)),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))))),(LL41A,((WG23A,(LL5,LL24)),WG58A))),Methanosarcina);
(((WG56,(LL4,WG16)),(((WG28,((((LL43F,(((LL46,LLX17),LL9),WG42)),((LL1,LLX3),WG26)),LLX12A),(WG22,(WG21,(WG43,((WG481,WG74),LL18)))))),((((LL8,LL12),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13)))),(LL41A,((WG23A,(LL5,LL24)),WG58A)))),Methanosarcina);
(((WG28,((LL1,(LLX3,((LLX12A,(WG42,WG26)),(LL43F,((LL46,LLX17),LL9))))),((((WG481,WG74),LL18),(WG22,WG21)),WG43))),(((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((WG14,WG27),(WG36,LL14)))),((LL41A,((LL5,LL24),(WG58A,WG23A))),(WG56,(LL4,WG16))))),Methanosarcina);
((LLX12A,(((WG42,(LLX3,WG26)),(LL43F,(LL1,((LLX17,LL46),LL9)))),((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),((((LL37,LL13),(((WG58B,WG40),(((LL12,LL8),LL41B),(WG34B,(WG44,(WG49,WG59))))),(LL14,((WG14,WG27),WG36)))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(LL4,WG16)))),WG28)))),Methanosarcina);
(((LL41A,((WG58A,WG23A),(LL24,LL5))),((WG56,(LL4,WG16)),((WG28,((LL1,(((LLX17,LL46),LL9),((LLX12A,(WG42,(LLX3,WG26))),LL43F))),(WG43,(LL18,(((WG22,WG21),WG74),WG481))))),((LL37,LL13),(((WG34B,(WG44,(WG49,WG59))),((WG58B,WG40),((LL12,LL8),LL41B))),((WG14,WG27),(WG36,LL14))))))),Methanosarcina);
(((LL41A,((WG23A,WG58A),(LL24,LL5))),((WG56,(WG16,LL4)),(((LL13,LL37),(((WG36,LL14),(WG14,WG27)),(((WG40,WG58B),(WG34B,(WG44,(WG59,WG49)))),(LL41B,(LL8,LL12))))),(((((WG74,WG481),(WG43,LL18)),(WG22,WG21)),(LL1,((LL9,(LL46,LLX17)),((WG42,(LLX3,WG26)),(LLX12A,LL43F))))),WG28)))),Methanosarcina);
((((LL13,LL37),(((WG36,LL14),(WG14,WG27)),((((WG49,WG40),WG58B),((WG44,WG59),WG34B)),((LL12,LL8),LL41B)))),(((((LL18,((WG74,(WG22,WG21)),WG481)),WG43),(LL1,((LL43F,((LL46,LLX17),LL9)),((WG42,(LLX3,WG26)),LLX12A)))),WG28),((LL41A,(((WG23A,WG58A),LL5),LL24)),(WG56,(WG16,LL4))))),Methanosarcina);
(((((LL41A,(((WG23A,WG58A),LL5),LL24)),(WG56,(WG16,LL4))),((LL13,LL37),(((WG36,LL14),(WG14,WG27)),((((WG49,WG40),WG58B),((WG44,WG59),WG34B)),((LL12,LL8),LL41B))))),((((WG74,(WG22,WG21)),(WG481,(WG43,LL18))),((LL43F,((LL46,LLX17),LL9)),(LL1,(LLX12A,(WG42,(LLX3,WG26)))))),WG28)),Methanosarcina);
((((LL41A,(((WG23A,WG58A),LL5),LL24)),((WG56,(WG16,LL4)),((WG49,(WG59,((WG34B,(WG40,(WG58B,((LL12,LL8),LL41B)))),WG44))),((LL13,LL37),((WG36,LL14),(WG14,WG27)))))),(((WG74,((WG22,WG21),(WG481,(WG43,LL18)))),(LLX12A,((WG42,(LLX3,WG26)),((LL43F,((LLX17,LL46),LL9)),LL1)))),WG28)),Methanosarcina);
((((((WG43,(LL18,((WG74,(WG22,WG21)),WG481))),(LLX12A,(((LL43F,WG42),(LLX3,WG26)),(((LLX17,LL46),LL9),LL1)))),WG28),((WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG40,WG58B))),WG44))),((LL13,LL37),(LL14,((WG14,WG27),WG36))))),((LL41A,((WG23A,(LL5,LL24)),WG58A)),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG56,(WG16,LL4)),(((((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),(((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1))),WG28),((WG49,((WG34B,(((LL12,LL8),LL41B),(WG40,WG58B))),(WG44,WG59))),((LL13,LL37),(LL14,((WG14,WG27),WG36))))),((LL24,(LL5,(WG58A,WG23A))),LL41A))),Methanosarcina);
(((WG22,(WG21,(((WG481,WG74),LL18),WG43))),((((LL46,LLX17),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1)),(WG28,(((((LL12,LL8),LL41B),((WG40,WG58B),((WG44,(WG49,WG59)),WG34B))),(((LL13,LL37),(WG14,WG27)),(WG36,LL14))),(((LL24,(LL5,(WG58A,WG23A))),LL41A),(WG56,(WG16,LL4))))))),Methanosarcina);
(((((WG49,(WG59,((WG34B,((LL12,(LL8,LL41B)),(WG40,WG58B))),WG44))),((LL13,LL37),(LL14,((WG14,WG27),WG36)))),(((LL24,((LL5,WG23A),WG58A)),LL41A),(WG56,(WG16,LL4)))),(((WG43,((WG22,WG21),((WG481,WG74),LL18))),(((LLX17,LL46),LL9),(LL1,((LLX12A,(WG42,(LLX3,WG26))),LL43F)))),WG28)),Methanosarcina);
(((WG481,(WG74,(LL18,(WG43,(WG22,WG21))))),((((LLX17,LL46),LL9),(LL1,(LLX12A,(LLX3,(WG26,(LL43F,WG42)))))),(WG28,((((LL12,(LL8,LL41B)),((WG40,WG58B),(((WG44,WG59),WG49),WG34B))),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),((((LL24,LL5),(WG23A,WG58A)),LL41A),(WG56,(WG16,LL4))))))),Methanosarcina);
((((WG22,WG21),((WG481,WG74),(WG43,LL18))),((((WG44,((((LL12,(LL8,LL41B)),(WG40,WG58B)),WG34B),(WG59,WG49))),((WG36,LL14),((LL13,LL37),(WG14,WG27)))),((((LL24,LL5),(WG23A,WG58A)),LL41A),(WG56,(WG16,LL4)))),((LL1,(((LLX3,WG26),((((LL46,LLX17),LL9),WG42),LL43F)),LLX12A)),WG28))),Methanosarcina);
(((WG43,((WG22,WG21),((WG74,WG481),LL18))),(((((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),(((WG44,WG59),WG34B),(WG58B,(WG49,WG40)))))),((((WG23A,(LL5,WG58A)),LL24),LL41A),((WG16,LL4),WG56))),WG28),(LL1,(((LLX17,LL46),LL9),(LL43F,((WG42,(WG26,LLX3)),LLX12A)))))),Methanosarcina);
(((((((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)),((LL12,LL8),LL41B)),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),(((((LL5,(WG58A,WG23A)),LL24),LL41A),((WG16,LL4),WG56)),(WG28,((((LLX17,LL46),LL9),(LL1,(LL43F,(LLX12A,(WG42,(WG26,LLX3)))))),(WG43,((((WG22,WG21),WG74),WG481),LL18)))))),Methanosarcina);
((((WG74,WG481),((LL18,WG43),(WG22,WG21))),((((((((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)),((LL12,LL8),LL41B)),((LL37,LL13),(WG27,(WG14,(LL14,WG36))))),((((WG23A,(LL5,LL24)),WG58A),LL41A),((WG16,LL4),WG56))),WG28),(((LL46,LLX17),LL9),(LL1,(LL43F,(LLX12A,(WG42,(WG26,LLX3)))))))),Methanosarcina);
((((((WG58A,WG23A),LL5),LL24),LL41A),(((WG16,LL4),WG56),((WG28,((((WG42,(WG26,LLX3)),(LL43F,LLX12A)),(((LLX17,LL46),LL9),LL1)),(WG43,((WG22,WG21),((WG74,WG481),LL18))))),((((((WG44,WG59),WG34B),WG49),(WG58B,WG40)),((LL12,LL8),LL41B)),((LL37,LL13),(LL14,(WG36,(WG27,WG14)))))))),Methanosarcina);
(((((LL43F,WG42),(WG26,LLX3)),LLX12A),((((LLX17,LL46),LL9),((WG74,(((WG43,LL18),(WG22,WG21)),WG481)),((((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),((((WG58A,(WG23A,LL5)),LL24),LL41A),((WG16,LL4),WG56))),WG28))),LL1)),Methanosarcina);
(((((LL5,(WG58A,WG23A)),LL24),LL41A),(((WG16,LL4),WG56),((WG28,(((LL1,(LL43F,((WG26,LLX3),(WG42,LLX12A)))),((LLX17,LL46),LL9)),(WG74,(((WG43,LL18),(WG22,WG21)),WG481)))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((WG58B,WG40),((LL12,LL8),LL41B)),(WG34B,(WG44,(WG49,WG59))))))))),Methanosarcina);
((WG28,(((LLX12A,(((LL43F,((LLX17,LL46),LL9)),WG42),(WG26,(LL1,LLX3)))),(WG43,(LL18,((WG22,WG21),(WG481,WG74))))),(((LL37,LL13),((WG27,(WG14,(LL14,WG36))),(((LL12,LL8),LL41B),((WG34B,(WG49,(WG59,WG44))),(WG58B,WG40))))),(((((WG58A,WG23A),LL5),LL24),LL41A),((WG16,LL4),WG56))))),Methanosarcina);
((((((WG58A,WG23A),LL5),LL24),LL41A),(((WG16,LL4),WG56),(((WG28,((LL43F,((LL46,LLX17),LL9)),((WG42,(WG26,(LL1,LLX3))),LLX12A))),(WG22,(WG21,((WG481,WG74),(WG43,LL18))))),((LL37,LL13),(((LL14,WG36),(WG27,WG14)),((WG34B,(WG44,(WG49,WG59))),((WG58B,WG40),((LL12,LL8),LL41B)))))))),Methanosarcina);
(((WG43,((LL18,(WG481,WG74)),(WG22,WG21))),((((WG49,(((WG58B,WG40),((LL12,LL8),LL41B)),(WG34B,(WG44,WG59)))),((LL37,LL13),((LL14,WG36),(WG27,WG14)))),(((((WG58A,WG23A),LL5),LL24),LL41A),((WG16,LL4),WG56))),(WG28,(LLX12A,((LL1,((LLX17,LL46),LL9)),((LL43F,WG42),(WG26,LLX3))))))),Methanosarcina);
(((((((WG58A,WG23A),LL5),LL24),LL41A),((WG16,LL4),WG56)),((WG28,((((LLX17,LL46),LL9),(LL1,((WG42,(WG26,LLX3)),(LL43F,LLX12A)))),(WG43,((LL18,(WG481,WG74)),(WG22,WG21))))),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((LL37,LL13),((LL14,WG36),(WG27,WG14)))))),Methanosarcina);
((((WG49,((WG44,WG59),(((LL41B,(LL8,LL12)),(WG58B,WG40)),WG34B))),(((LL14,WG36),(WG14,WG27)),(LL37,LL13))),(((LL41A,(LL24,(WG58A,(LL5,WG23A)))),(WG56,(WG16,LL4))),(((LL1,((LL9,(LLX17,LL46)),((WG42,(WG26,LLX3)),(LL43F,LLX12A)))),(WG43,((((WG21,WG22),WG74),WG481),LL18))),WG28))),Methanosarcina);
(((((WG42,(WG26,LLX3)),LLX12A),LL43F),(((WG28,((((LL37,LL13),(((LL41B,(LL8,LL12)),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL14,WG36),(WG14,WG27)))),((LL41A,((LL24,LL5),(WG23A,WG58A))),(WG56,(WG16,LL4)))),((WG74,WG481),((LL18,WG43),(WG21,WG22))))),LL1),((LL46,LLX17),LL9))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((WG56,(WG16,LL4)),(((((((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)),LLX12A),LL1),(WG43,((LL18,(WG74,WG481)),(WG21,WG22)))),WG28),(((WG34B,(WG44,(WG49,WG59))),(((LL12,LL8),LL41B),(WG58B,WG40))),(((LL14,WG36),(WG14,WG27)),(LL37,LL13)))))),Methanosarcina);
((LLX12A,(LL43F,((((WG43,(LL18,((WG74,WG481),(WG21,WG22)))),(WG28,(((LL14,(WG49,(WG59,((((LL12,LL8),LL41B),(WG34B,(WG58B,WG40))),WG44)))),((WG14,WG27),((LL37,LL13),WG36))),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4)))))),((LL46,LLX17),LL9)),((WG26,(LL1,LLX3)),WG42)))),Methanosarcina);
((((WG23A,(WG58A,LL5)),(LL24,LL41A)),((WG56,(WG16,LL4)),((((LLX12A,((LL1,(((LLX17,LL46),LL9),LL43F)),((WG26,LLX3),WG42))),(WG43,(LL18,(WG481,((WG21,WG22),WG74))))),WG28),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))))),Methanosarcina);
(((((LL1,((((LLX17,LL46),LL9),LL43F),(((WG26,LLX3),WG42),LLX12A))),(WG43,(LL18,(WG481,((WG21,WG22),WG74))))),WG28),((((((WG49,WG59),(WG44,WG34B)),(WG58B,WG40)),((LL12,LL8),LL41B)),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4))))),Methanosarcina);
((((((((WG49,(WG59,(WG44,(((WG58B,WG40),((LL8,LL12),LL41B)),WG34B)))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),((LL41A,(((LL5,WG23A),WG58A),LL24)),(WG56,(WG16,LL4)))),(WG43,(LL18,((WG21,WG22),(WG74,WG481))))),WG28),((LLX17,LL46),LL9)),(LL43F,(((WG26,(LL1,LLX3)),WG42),LLX12A))),Methanosarcina);
((((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4))),((((((LLX17,LL46),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1)),(WG43,((WG21,WG22),((WG74,WG481),LL18)))),WG28),((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,((WG59,WG44),WG49)),(WG58B,WG40))),((WG14,WG27),(LL14,WG36)))))),Methanosarcina);
(((((LLX17,LL46),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1)),((WG43,((WG21,WG22),((WG74,WG481),LL18))),(WG28,(((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((LL14,(WG36,(WG14,WG27))),(LL37,LL13))),((LL41A,(((WG23A,WG58A),LL5),LL24)),(WG56,(WG16,LL4))))))),Methanosarcina);
(((LL41A,((WG58A,(LL5,WG23A)),LL24)),((WG56,(WG16,LL4)),((((((LL46,LLX17),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1)),(WG22,(((WG74,WG481),(WG43,LL18)),WG21))),WG28),((LL37,LL13),((((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40)),((LL12,LL8),LL41B)),((WG14,WG27),(LL14,WG36))))))),Methanosarcina);
((((LL1,(((WG26,LLX3),(LL43F,((LLX17,(LL46,LL9)),WG42))),LLX12A)),(WG28,(((LL41A,(((WG23A,WG58A),LL5),LL24)),(WG56,(LL4,WG16))),(((((WG49,WG59),WG44),WG34B),((WG40,WG58B),((LL41B,LL8),LL12))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13)))))),((LL18,((WG481,WG74),(WG22,WG21))),WG43)),Methanosarcina);
((LLX12A,(((WG28,((WG22,(WG21,(LL18,(WG43,(WG481,WG74))))),(((((LL41B,LL8),LL12),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),((((WG14,WG27),WG36),LL14),(LL37,LL13))),((((WG23A,WG58A),LL5),(LL24,LL41A)),(WG56,(LL4,WG16)))))),((LL9,(LLX17,LL46)),LL1)),((WG26,LLX3),(LL43F,WG42)))),Methanosarcina);
(((WG28,((WG74,(((LL18,WG43),(WG22,WG21)),WG481)),(((LL37,LL13),((((LL41B,LL8),LL12),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),(((WG14,WG27),WG36),LL14))),(((WG58A,(LL5,WG23A)),(LL24,LL41A)),(WG56,(LL4,WG16)))))),(LL1,(((LLX17,LL46),LL9),(((WG26,LLX3),WG42),(LL43F,LLX12A))))),Methanosarcina);
(((((((LL41B,LL8),LL12),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),(((LL24,(WG58A,(WG23A,LL5))),LL41A),(WG56,(LL4,WG16)))),(WG28,((LLX12A,((WG26,((((LLX17,LL46),LL9),LL43F),(LL1,LLX3))),WG42)),(WG481,(WG74,((LL18,WG43),(WG22,WG21))))))),Methanosarcina);
(((((WG59,(WG44,(WG34B,((WG40,WG58B),((LL41B,LL8),LL12))))),WG49),((LL14,((WG14,WG27),WG36)),(LL37,LL13))),((((((LL24,LL5),WG23A),WG58A),LL41A),(WG56,(LL4,WG16))),((WG43,((WG22,WG21),((WG481,WG74),LL18))),(WG28,(LLX12A,((((LL1,((LLX17,LL46),LL9)),LL43F),(LLX3,WG26)),WG42)))))),Methanosarcina);
(((WG22,(WG21,((WG481,WG74),(WG43,LL18)))),((WG56,(LL4,WG16)),(((WG28,((((LLX3,WG26),LLX12A),(LL43F,(((LLX17,LL46),LL9),WG42))),LL1)),((LL37,LL13),((((LL41B,LL8),LL12),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),((WG14,WG27),(WG36,LL14))))),((LL24,((WG23A,LL5),WG58A)),LL41A)))),Methanosarcina);
((((WG28,((WG481,(WG74,((WG43,LL18),(WG22,WG21)))),(((((LL43F,((LL46,LLX17),LL9)),(LLX3,WG26)),LLX12A),WG42),LL1))),((LL37,LL13),((((LL41B,LL8),LL12),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),((WG14,WG27),(WG36,LL14))))),(((LL24,(WG23A,(LL5,WG58A))),LL41A),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG28,((WG481,(WG74,(WG43,(LL18,(WG22,WG21))))),((((LLX17,LL46),LL9),(((WG42,(LLX3,WG26)),LLX12A),LL43F)),LL1))),(((((LL41B,LL8),LL12),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),((((LL24,LL5),(WG58A,WG23A)),LL41A),(WG56,(LL4,WG16))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG56,(LL4,WG16)),(((WG22,(WG21,(WG43,((WG481,WG74),LL18)))),(((LL43F,((LL46,LLX17),LL9)),(LL1,((WG42,(LLX3,WG26)),LLX12A))),WG28)),((((LL41B,LL8),LL12),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13)))))),Methanosarcina);
((LLX12A,((((LL1,((((((WG49,WG59),(WG44,(WG34B,((WG40,WG58B),(LL41B,(LL8,LL12)))))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),((LL41A,((WG58A,WG23A),(LL24,LL5))),(WG56,(LL4,WG16)))),WG28),(WG43,(LL18,((WG74,(WG22,WG21)),WG481))))),((LLX17,LL46),LL9)),(WG42,(LLX3,WG26))),LL43F)),Methanosarcina);
(((((WG58A,WG23A),(LL24,LL5)),LL41A),((((((LL14,WG36),(WG27,WG14)),(WG49,(WG59,(WG44,(WG34B,((WG40,WG58B),(LL41B,(LL8,LL12)))))))),(LL37,LL13)),(((WG481,(((LL18,(WG21,WG22)),WG43),WG74)),((((LL43F,(LL9,(LLX17,LL46))),WG42),((LL1,LLX3),WG26)),LLX12A)),WG28)),((WG16,LL4),WG56))),Methanosarcina);
((((WG16,LL4),WG56),((((WG58A,WG23A),(LL24,LL5)),LL41A),(((((LL14,WG36),(WG27,WG14)),(((WG34B,((WG40,WG58B),((LL12,LL8),LL41B))),(WG49,WG59)),WG44)),(LL37,LL13)),(((WG481,(((WG21,WG22),(WG43,LL18)),WG74)),((((LLX3,WG26),WG42),LLX12A),((LL43F,((LL46,LLX17),LL9)),LL1))),WG28)))),Methanosarcina);
((((WG58A,((LL5,LL24),WG23A)),LL41A),((((((LL14,WG36),(WG27,WG14)),(((LL12,LL8),LL41B),(((WG49,(WG59,WG44)),WG34B),(WG40,WG58B)))),(LL37,LL13)),(((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),(LL1,((((LLX3,WG26),WG42),LLX12A),(LL43F,((LLX17,LL46),LL9))))),WG28)),((WG16,LL4),WG56))),Methanosarcina);
((WG28,(((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),((((WG16,LL4),WG56),((WG58A,((LL5,LL24),WG23A)),LL41A)),((((LL14,WG36),(WG27,WG14)),(((LL12,LL8),LL41B),(WG40,(WG58B,(WG49,((WG34B,WG59),WG44)))))),(LL37,LL13)))),(LL1,(((WG42,(LL43F,((LL46,LLX17),LL9))),(LLX3,WG26)),LLX12A)))),Methanosarcina);
(((LLX12A,(LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)))),(WG28,((WG43,(LL18,((WG21,WG22),(WG481,WG74)))),((((WG16,LL4),WG56),(((LL5,LL24),(WG23A,WG58A)),LL41A)),((((LL12,LL8),LL41B),((WG34B,(WG49,(WG59,WG44))),(WG40,WG58B))),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))))))),Methanosarcina);
(((WG28,((WG43,(LL18,(((WG21,WG22),WG74),WG481))),((((WG16,LL4),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),((WG49,(WG59,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),WG44))),((LL37,LL13),(LL14,(WG36,(WG27,WG14)))))))),((((LLX12A,(WG42,(LLX3,WG26))),LL43F),LL1),((LLX17,LL46),LL9))),Methanosarcina);
((WG28,((((((WG42,(LLX3,WG26)),(LL43F,LLX12A)),LL1),((LL46,LLX17),LL9)),(WG43,(LL18,(((WG21,WG22),WG74),WG481)))),((((WG16,LL4),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B)))))))),Methanosarcina);
(((((WG16,LL4),WG56),((LL5,(WG23A,WG58A)),(LL24,LL41A))),((((WG59,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),WG44)),WG49),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),(WG28,((((WG42,((LL1,LLX3),WG26)),LLX12A),(LL43F,((LLX17,LL46),LL9))),(WG43,(((WG21,WG22),WG74),(WG481,LL18))))))),Methanosarcina);
((((LL5,(WG23A,WG58A)),(LL24,LL41A)),((((LL37,LL13),(((WG27,WG14),(LL14,WG36)),((((WG34B,(WG44,WG59)),(WG40,WG58B)),WG49),((LL12,LL8),LL41B)))),((WG43,(LL18,((WG21,WG22),(WG481,WG74)))),(WG28,((((LL43F,WG42),((LL1,LLX3),WG26)),LLX12A),((LL46,LLX17),LL9))))),((WG16,LL4),WG56))),Methanosarcina);
(((((WG16,LL4),WG56),(((LL24,(LL5,WG58A)),WG23A),LL41A)),((WG49,(WG40,(WG58B,((((LL12,LL8),LL41B),(((WG27,WG14),(LL14,WG36)),(LL37,LL13))),(WG34B,(WG44,WG59)))))),(WG28,((LL1,((LL43F,(WG42,((LL46,LLX17),LL9))),((LLX3,WG26),LLX12A))),((WG481,WG74),(LL18,(WG21,(WG43,WG22)))))))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(((((WG49,WG59),(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B))))),(((LL14,WG36),(WG14,WG27)),(LL37,LL13))),(((((WG21,WG22),((WG481,WG74),LL18)),WG43),(LLX12A,(((LL43F,((LL46,LLX17),LL9)),LL1),(WG42,(WG26,LLX3))))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG58A,WG23A)))),((((WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B)))))),(((LL14,WG36),(WG14,WG27)),(LL37,LL13))),(((((WG21,WG22),((WG481,WG74),LL18)),WG43),(LL1,(LLX12A,((LL43F,(((LL46,LLX17),LL9),WG42)),(WG26,LLX3))))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG28,((((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),((WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B)))))),(((LL14,WG36),(WG14,WG27)),(LL37,LL13)))),(((WG481,WG74),(LL18,(WG21,WG22))),WG43))),(LL1,(LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),(WG26,LLX3))))),Methanosarcina);
(((WG42,((LLX17,LL46),LL9)),(((WG26,LLX3),(LLX12A,((WG28,((((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),((WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B)))))),((LL14,(WG36,(WG14,WG27))),(LL37,LL13)))),(((WG21,WG22),((WG481,WG74),LL18)),WG43))),LL1))),LL43F)),Methanosarcina);
(((((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),(((WG14,WG27),(LL14,WG36)),((LL37,LL13),(WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B))))))))),(((LL1,(((LL43F,(WG42,((LL46,LLX17),LL9))),(WG26,LLX3)),LLX12A)),(WG481,((WG43,LL18),(WG74,(WG21,WG22))))),WG28)),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),(((LL37,LL13),(LL14,(WG36,((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),(WG14,WG27))))),((WG481,(WG74,((WG21,WG22),(WG43,LL18)))),(WG28,(LL1,((LL43F,((LL46,LLX17),LL9)),((WG42,(WG26,LLX3)),LLX12A))))))),Methanosarcina);
((((((LL37,LL13),((WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B)))))),((LL14,WG36),(WG14,WG27)))),(WG28,((((LLX17,LL46),LL9),((((LL43F,WG42),(WG26,LLX3)),LLX12A),LL1)),(WG481,(WG74,((WG21,WG22),(WG43,LL18))))))),(WG56,(WG16,LL4))),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),Methanosarcina);
((((((LL37,LL13),((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),((LL14,WG36),(WG14,WG27)))),(WG28,((((LLX17,LL46),LL9),(((WG42,(WG26,LLX3)),(LL43F,LLX12A)),LL1)),(WG43,(((WG481,WG74),LL18),(WG21,WG22)))))),(WG56,(WG16,LL4))),(LL41A,((WG58A,WG23A),(LL24,LL5)))),Methanosarcina);
((((((LL37,LL13),((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),((LL14,WG36),(WG14,WG27)))),(WG28,((((LL46,LLX17),LL9),((((LL43F,WG42),(WG26,LLX3)),LLX12A),LL1)),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))))),(WG56,(WG16,LL4))),(LL41A,((WG58A,(WG23A,LL5)),LL24))),Methanosarcina);
(((WG28,((((LLX17,LL46),LL9),(((LLX12A,LL43F),(WG42,(WG26,LLX3))),LL1)),(((WG74,(WG21,WG22)),WG481),(WG43,LL18)))),(((WG56,(WG16,LL4)),(LL24,(LL41A,(LL5,(WG58A,WG23A))))),((LL37,LL13),(((WG36,(WG14,WG27)),(((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40)))),LL14)))),Methanosarcina);
(((((WG16,LL4),WG56),(LL41A,(((WG58A,WG23A),LL5),LL24))),(((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),(((WG43,((LL18,(WG481,WG74)),(WG21,WG22))),((LL1,(LLX12A,((WG26,LLX3),(WG42,LL43F)))),(LL9,(LL46,LLX17)))),WG28))),Methanosarcina);
((((((WG16,LL4),WG56),(LL41A,((WG23A,(LL5,WG58A)),LL24))),((LL37,LL13),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),(LL14,(WG36,(WG14,WG27)))))),(((WG43,((LL18,(WG481,WG74)),(WG21,WG22))),((LL1,((LLX12A,((WG26,LLX3),WG42)),LL43F)),((LLX17,LL46),LL9))),WG28)),Methanosarcina);
(((WG74,((((WG21,WG22),WG43),LL18),WG481)),(((LL1,((LLX12A,((WG26,LLX3),WG42)),(LL43F,((LL46,LLX17),LL9)))),WG28),((((WG16,LL4),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24))),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))))),Methanosarcina);
((((((WG16,LL4),WG56),(LL24,(LL41A,(LL5,(WG58A,WG23A))))),((LL37,LL13),(((WG49,WG59),(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44)),((WG14,WG27),(LL14,WG36))))),(((WG481,(WG74,(WG43,((WG21,WG22),LL18)))),(LLX12A,(((WG26,LLX3),(LL43F,WG42)),(LL1,((LLX17,LL46),LL9))))),WG28)),Methanosarcina);
(((WG28,(((((WG16,LL4),WG56),(LL24,(LL41A,(LL5,(WG58A,WG23A))))),((LL37,LL13),((WG49,(WG59,(((WG40,(WG58B,((LL8,LL12),LL41B))),WG34B),WG44))),((WG14,WG27),(LL14,WG36))))),(WG481,((WG21,WG22),(LL18,(WG74,WG43)))))),(LLX12A,(WG42,(((LLX3,LL1),(((LLX17,LL46),LL9),LL43F)),WG26)))),Methanosarcina);
(((((((LL8,LL12),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),((((((LL46,LLX17),LL9),(LLX12A,((LL43F,WG42),(WG26,LLX3)))),LL1),((WG481,(WG43,((WG21,WG22),LL18))),WG74)),WG28)),(((WG16,LL4),WG56),(LL41A,((LL24,LL5),(WG58A,WG23A))))),Methanosarcina);
((((LL37,LL13),((WG49,(WG59,(((((LL8,LL12),LL41B),(WG40,WG58B)),WG34B),WG44))),((WG14,WG27),(LL14,WG36)))),(((((LL43F,((LLX17,LL46),LL9)),(((WG42,(WG26,LLX3)),LLX12A),LL1)),(WG43,(((WG74,WG481),(WG21,WG22)),LL18))),WG28),(((WG16,LL4),WG56),(LL41A,((WG23A,(LL5,WG58A)),LL24))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((((LL12,(LL41B,LL8)),((WG40,WG58B),((WG34B,(WG44,WG59)),WG49))),(((WG36,(WG14,WG27)),LL14),(LL37,LL13))),(((LL1,((((LL46,LLX17),LL9),LL43F),((WG42,(WG26,LLX3)),LLX12A))),(WG481,(((WG21,WG22),(LL18,WG43)),WG74))),WG28)),((WG16,LL4),WG56))),Methanosarcina);
((((LL41A,((WG58A,WG23A),(LL24,LL5))),((((LL12,(LL41B,LL8)),(((WG49,WG40),WG58B),(WG34B,(WG44,WG59)))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),((WG481,((LL18,WG43),(WG74,(WG21,WG22)))),(WG28,(LL1,((((LL46,LLX17),LL9),LL43F),((WG42,(WG26,LLX3)),LLX12A))))))),((WG16,LL4),WG56)),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),(((WG28,(((LL18,((WG74,(WG21,WG22)),WG481)),WG43),(((LL46,LLX17),LL9),((LL43F,((WG42,(WG26,LLX3)),LLX12A)),LL1)))),((WG49,((WG44,WG59),(((LL12,(LL41B,LL8)),(WG40,WG58B)),WG34B))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))),((WG16,LL4),WG56))),Methanosarcina);
(((LL41A,(LL24,((WG58A,WG23A),LL5))),(((((WG481,(((WG21,WG22),WG74),(LL18,WG43))),(LLX12A,((LL1,((LL9,(LLX17,LL46)),LL43F)),(WG42,(WG26,LLX3))))),WG28),((LL37,LL13),((((LL12,LL8),LL41B),(((WG44,WG59),(WG49,WG34B)),(WG58B,WG40))),((WG36,LL14),(WG14,WG27))))),(WG56,(LL4,WG16)))),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,(LL24,((WG58A,WG23A),LL5)))),(((((WG21,WG22),((WG481,WG74),(LL18,WG43))),((LLX12A,((WG26,LLX3),((WG42,((LLX17,LL46),LL9)),LL43F))),LL1)),WG28),((WG49,((((LL12,LL8),LL41B),(WG58B,WG40)),((WG44,WG59),WG34B))),(((WG27,WG14),(WG36,LL14)),(LL37,LL13))))),Methanosarcina);
((LLX12A,(LL43F,((WG42,(WG26,LLX3)),((LL1,(WG28,((((WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),WG44))),((WG27,(WG14,(WG36,LL14))),(LL37,LL13))),((WG56,(LL4,WG16)),(LL41A,(LL24,((WG58A,WG23A),LL5))))),((LL18,((WG74,(WG21,WG22)),WG481)),WG43)))),((LLX17,LL46),LL9))))),Methanosarcina);
(((((WG44,((WG49,WG59),(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))))),(((WG36,LL14),(WG27,WG14)),(LL37,LL13))),((WG56,(LL4,WG16)),(LL41A,(LL24,((WG58A,WG23A),LL5))))),((((((LL46,LLX17),LL9),(LLX12A,((LL43F,WG42),(WG26,LLX3)))),LL1),(WG481,(WG74,((WG43,LL18),(WG21,WG22))))),WG28)),Methanosarcina);
(((WG42,((LL43F,((LL1,(((WG481,(WG43,LL18)),((WG21,WG22),WG74)),(WG28,(((WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),WG44))),((LL14,((WG27,WG14),WG36)),(LL37,LL13))),((WG56,(LL4,WG16)),(LL41A,((LL24,(WG58A,LL5)),WG23A))))))),((LLX17,LL46),LL9))),(WG26,LLX3))),LLX12A),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,(((WG58A,LL5),WG23A),LL24))),((((((LLX17,LL46),LL9),((LLX12A,((WG26,(LL1,LLX3)),WG42)),LL43F)),(WG74,(((WG43,LL18),(WG21,WG22)),WG481))),WG28),((LL37,LL13),((WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),WG44))),((WG27,WG14),(WG36,LL14)))))),Methanosarcina);
(((((LL46,LLX17),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1)),((WG43,(((WG481,WG74),LL18),(WG21,WG22))),(WG28,(((LL37,LL13),(((WG49,(WG34B,(WG44,WG59))),(((LL12,LL8),LL41B),(WG58B,WG40))),((WG27,WG14),(WG36,LL14)))),((WG56,(LL4,WG16)),(LL41A,((LL24,LL5),(WG23A,WG58A)))))))),Methanosarcina);
((WG28,((((LL37,LL13),((WG49,((WG34B,(WG44,WG59)),(((LL12,LL8),LL41B),(WG58B,WG40)))),(LL14,((WG27,WG14),WG36)))),((WG56,(LL4,WG16)),((LL41A,(WG58A,(LL5,WG23A))),LL24))),((((LLX17,LL46),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1)),((WG22,WG21),((WG481,WG74),(WG43,LL18)))))),Methanosarcina);
(((WG56,(LL4,WG16)),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((((((WG26,LLX3),(LL43F,WG42)),LLX12A),(LL1,((LLX17,LL46),LL9))),((WG22,WG21),(WG74,((WG43,LL18),WG481)))),WG28),((WG44,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),(WG59,WG49))),(((WG27,WG14),(WG36,LL14)),(LL37,LL13)))))),Methanosarcina);
(((WG56,(LL4,WG16)),((LL41A,((LL5,(WG23A,WG58A)),LL24)),((((LL1,((LLX12A,((LLX17,LL46),LL9)),((WG26,LLX3),(LL43F,WG42)))),(((WG22,WG21),(WG43,LL18)),(WG481,WG74))),WG28),((LL37,LL13),((((LL12,LL8),LL41B),((WG58B,WG40),(((WG44,WG59),WG34B),WG49))),(WG27,(WG14,(WG36,LL14)))))))),Methanosarcina);
((((LL1,(LLX12A,((LL43F,((LL9,(LLX17,LL46)),WG42)),(WG26,LLX3)))),(WG28,(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37))),((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(WG16,LL4)))))),((WG21,WG22),((LL18,(WG481,WG74)),WG43))),Methanosarcina);
(((WG23A,WG58A),((((WG56,(WG16,LL4)),((((LL1,(LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),(WG26,LLX3)))),WG28),((WG74,(WG21,WG22)),(WG481,(WG43,LL18)))),((WG49,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),(WG44,WG59))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))))),LL41A),(LL24,LL5))),Methanosarcina);
((LLX12A,((LL43F,(((((LL46,LLX17),LL9),((WG28,(WG481,(WG74,((WG21,WG22),(WG43,LL18))))),(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37))),((((WG58A,(LL5,WG23A)),LL24),LL41A),(WG56,(WG16,LL4)))))),LL1),LLX3)),(WG42,WG26))),Methanosarcina);
((((((LL5,(WG23A,WG58A)),LL24),LL41A),(WG56,(WG16,LL4))),((WG28,((LLX12A,((LL43F,(((LL46,LLX17),LL9),WG42)),((LL1,LLX3),WG26))),(WG43,(((WG481,WG74),LL18),(WG21,WG22))))),((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((WG27,WG14),(LL14,WG36)))))),Methanosarcina);
(((((LL5,(WG23A,WG58A)),(LL24,LL41A)),(WG56,(WG16,LL4))),((WG28,((LLX12A,(((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)),LL1)),(WG43,(LL18,((WG21,WG22),(WG481,WG74)))))),(((WG49,WG59),(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44)),((WG14,(LL14,WG36)),(WG27,(LL13,LL37)))))),Methanosarcina);
((((LL5,(WG23A,WG58A)),(LL24,LL41A)),((WG56,(WG16,LL4)),((WG28,((LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),((LL1,LLX3),WG26))),(WG481,(WG74,((WG43,LL18),(WG21,WG22)))))),(((((LL12,LL8),LL41B),(WG40,WG58B)),(WG34B,(WG44,(WG49,WG59)))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37)))))),Methanosarcina);
(((WG28,((((((LLX3,WG26),(WG42,LL43F)),LLX12A),((LL46,LLX17),LL9)),LL1),(WG43,(LL18,((WG21,WG22),(WG481,WG74)))))),(((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4))))),Methanosarcina);
(((LL41A,(WG58A,(WG23A,(LL5,LL24)))),((WG56,(WG16,LL4)),(((WG43,((WG21,WG22),((WG481,WG74),LL18))),(WG28,((LL1,(LLX12A,((LLX3,WG26),(WG42,LL43F)))),((LL46,LLX17),LL9)))),((LL13,LL37),((((LL12,LL8),LL41B),((((WG44,WG59),(WG40,WG58B)),WG34B),WG49)),((WG14,(LL14,WG36)),WG27)))))),Methanosarcina);
(((LL1,((LL43F,LLX12A),((LLX3,WG26),WG42))),(((LL46,LLX17),LL9),((WG28,(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))),((((WG40,WG58B),(WG34B,((WG49,WG59),WG44))),((LL12,LL8),LL41B)),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))))),(WG22,(((WG481,(WG43,LL18)),WG74),WG21))))),Methanosarcina);
((WG28,((((LL41A,(((WG58A,WG23A),LL5),LL24)),(WG56,(WG16,LL4))),((LL13,LL37),((WG49,(WG59,(WG44,((WG40,WG58B),(((LL12,LL8),LL41B),WG34B))))),((LL14,WG36),(WG27,WG14))))),(((WG43,(LL18,(WG481,WG74))),(WG21,WG22)),((LL1,(LLX3,(WG26,(LLX12A,(WG42,LL43F))))),((LL46,LLX17),LL9))))),Methanosarcina);
(((((WG16,LL4),WG56),((LL41A,(LL24,(LL5,(WG58A,WG23A)))),((WG28,(((LL9,(LL46,LLX17)),LL43F),((WG42,(WG26,(LL1,LLX3))),LLX12A))),((LL37,LL13),(LL14,((WG14,(WG27,((LL12,(LL8,LL41B)),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))))),WG36)))))),(((((WG22,WG21),WG43),LL18),WG74),WG481)),Methanosarcina);
(((WG28,((LL43F,(((((LLX17,LL46),LL9),WG42),(WG26,LLX3)),LLX12A)),LL1)),((((WG22,WG21),(((WG43,LL18),WG481),WG74)),((LL37,LL13),(((LL12,(LL8,LL41B)),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),(LL14,((WG14,WG27),WG36))))),(((WG16,LL4),WG56),((WG23A,(LL5,WG58A)),(LL41A,LL24))))),Methanosarcina);
(((WG16,LL4),(WG56,((LL41A,(LL24,(WG58A,(WG23A,LL5)))),((WG28,((((LLX17,LL46),LL9),((LL43F,((WG42,(LLX3,WG26)),LLX12A)),LL1)),((WG22,WG21),((WG74,WG481),(LL18,WG43))))),((LL37,LL13),((((LL8,LL12),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((WG14,WG27),(WG36,LL14)))))))),Methanosarcina);
(((WG28,(LL1,((((LLX17,LL46),LL9),LL43F),((WG42,(LLX3,WG26)),LLX12A)))),((WG22,(WG21,(((WG74,WG481),LL18),WG43))),(((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),(LL14,(((LL37,LL13),(WG14,WG27)),WG36))),(((WG16,LL4),WG56),(LL41A,(LL24,(WG23A,(LL5,WG58A)))))))),Methanosarcina);
((WG28,((((((WG58B,WG40),((LL12,LL8),LL41B)),(WG34B,(WG44,(WG49,WG59)))),((LL14,((WG14,WG27),WG36)),(LL37,LL13))),(((WG16,LL4),WG56),(LL41A,(LL24,(LL5,(WG58A,WG23A)))))),((LL1,((((LLX17,LL46),LL9),LL43F),((WG42,(LLX3,WG26)),LLX12A))),(WG43,(((WG22,WG21),(WG74,WG481)),LL18))))),Methanosarcina);
((WG28,((((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),(((WG16,LL4),WG56),(LL41A,((WG58A,WG23A),(LL24,LL5))))),((((LL46,LLX17),LL9),((LLX3,((WG26,(WG42,LLX12A)),LL43F)),LL1)),(WG43,((WG22,WG21),((WG74,WG481),LL18)))))),Methanosarcina);
((((LL41A,(((WG58A,WG23A),LL5),LL24)),(((WG43,(LL18,((WG22,WG21),(WG74,WG481)))),(WG28,(LLX12A,((((LLX3,LL43F),(LL1,((LL46,LLX17),LL9))),WG26),WG42)))),((((LL12,LL8),LL41B),(((WG34B,(WG44,WG59)),WG49),(WG58B,WG40))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))))),((WG16,LL4),WG56)),Methanosarcina);
(((((WG16,LL4),WG56),(LL41A,((WG58A,(WG23A,LL5)),LL24))),((WG28,((((((LL46,LLX17),LL9),LL43F),(LLX12A,((LLX3,WG26),WG42))),LL1),(WG43,((WG22,WG21),((WG74,WG481),LL18))))),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))))),Methanosarcina);
(((((WG16,LL4),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24))),((WG28,((LLX12A,((((LL1,((LLX17,LL46),LL9)),LL43F),(LLX3,WG26)),WG42)),(WG43,(LL18,((WG22,WG21),(WG74,WG481)))))),((WG49,(WG59,((((((LL12,LL8),LL41B),WG58B),WG40),WG34B),WG44))),((LL37,LL13),(LL14,((WG14,WG27),WG36)))))),Methanosarcina);
(((LL41A,((WG23A,(LL5,WG58A)),LL24)),((((WG43,(LL18,((WG22,WG21),(WG74,WG481)))),(WG28,(((((LL46,LLX17),LL9),LL43F),(((LLX3,WG26),WG42),LLX12A)),LL1))),((LL37,LL13),(LL14,(WG36,((WG44,((WG49,WG59),((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B))),(WG14,WG27)))))),((WG16,LL4),WG56))),Methanosarcina);
((((((LL4,WG16),WG56),(LL41A,(((WG58A,WG23A),LL5),LL24))),((LL37,LL13),((WG49,(WG59,(WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)))),((WG36,LL14),(WG14,WG27))))),((((((WG74,WG481),LL18),(WG22,WG21)),WG43),(LL1,((LL43F,(LLX12A,(WG42,(LLX3,WG26)))),((LLX17,LL46),LL9)))),WG28)),Methanosarcina);
((LLX12A,(((LL43F,WG42),(LLX3,WG26)),(((WG28,(((((LL4,WG16),WG56),((((WG58A,WG23A),LL5),LL24),LL41A)),((LL37,LL13),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG49,WG59),WG44)))),((WG36,LL14),(WG14,WG27))))),((WG22,WG21),(WG43,((WG74,WG481),LL18))))),((LLX17,LL46),LL9)),LL1))),Methanosarcina);
((((((LL5,WG23A),WG58A),LL24),LL41A),(((((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,((WG49,WG59),WG44)))),((WG27,((WG36,LL14),WG14)),(LL37,LL13))),((WG481,((LL18,WG43),((WG22,WG21),WG74))),((((LLX12A,((((LLX17,LL46),LL9),WG42),(LLX3,WG26))),LL43F),LL1),WG28))),((LL4,WG16),WG56))),Methanosarcina);
(((((((LL43F,((LLX17,LL46),LL9)),WG42),(LLX3,WG26)),LLX12A),LL1),(WG28,(((((LL4,WG16),WG56),((((WG23A,LL5),WG58A),LL24),LL41A)),(((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,((WG49,WG59),WG44)))),(((WG36,LL14),(WG14,WG27)),(LL37,LL13)))),(((WG22,WG21),WG74),(WG481,(LL18,WG43)))))),Methanosarcina);
((((LL4,WG16),WG56),((((LL5,(WG58A,WG23A)),LL24),LL41A),(((LL37,LL13),(((LL12,(LL8,LL41B)),((WG40,WG58B),((WG34B,(WG59,WG44)),WG49))),((WG36,LL14),(WG14,WG27)))),(((WG22,WG21),(((WG481,WG74),LL18),WG43)),(((((WG42,(LLX3,WG26)),(LLX12A,LL43F)),((LLX17,LL46),LL9)),LL1),WG28))))),Methanosarcina);
(((((LL5,(WG58A,WG23A)),LL24),LL41A),(((((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,((WG49,WG59),WG44)))),(((WG36,LL14),(WG14,WG27)),(LL37,LL13))),((((WG481,(WG43,LL18)),(WG74,(WG22,WG21))),(((LLX17,LL46),LL9),(LL1,(((LL43F,WG42),(LLX3,WG26)),LLX12A)))),WG28)),((LL4,WG16),WG56))),Methanosarcina);
(((((WG481,(WG74,((WG22,WG21),(WG43,LL18)))),(LL1,(((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)),LLX12A))),WG28),((((LL4,WG16),WG56),(((LL5,(WG58A,WG23A)),LL24),LL41A)),(((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,((WG49,WG59),WG44)))),(((WG36,LL14),(WG14,WG27)),(LL37,LL13))))),Methanosarcina);
((LLX12A,(((WG28,(((((LL4,WG16),WG56),((LL5,(WG58A,WG23A)),(LL24,LL41A))),((LL37,LL13),(((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,((WG49,WG59),WG44)))),(LL14,((WG14,WG27),WG36))))),((WG481,(WG43,LL18)),(WG74,(WG22,WG21))))),LL1),((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((((WG34B,(WG49,(WG59,WG44))),((LL12,(LL8,LL41B)),(WG40,WG58B))),((LL14,((WG14,WG27),WG36)),(LL37,LL13))),(((LL1,(((LL43F,(((LL46,LLX17),LL9),WG42)),(LLX3,WG26)),LLX12A)),(WG481,((WG43,LL18),(WG74,(WG22,WG21))))),WG28)),((LL4,WG16),WG56))),Methanosarcina);
((((((LL12,(LL8,LL41B)),(((WG49,WG40),WG58B),(WG34B,(WG59,WG44)))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),((((LL1,((LLX3,WG26),(LL43F,(((LL46,LLX17),LL9),WG42)))),LLX12A),(WG43,((LL18,(WG481,WG74)),(WG22,WG21)))),WG28)),(((LL4,WG16),WG56),(LL41A,(WG58A,((WG23A,LL5),LL24))))),Methanosarcina);
(((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),(((LLX12A,((LLX3,WG26),(WG42,(LL43F,((LL46,LLX17),LL9))))),LL1),((((LL41A,((WG58A,(WG23A,LL5)),LL24)),(WG56,(WG16,LL4))),((LL13,LL37),(((WG59,WG49),(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44)),(((WG14,WG27),WG36),LL14)))),WG28))),Methanosarcina);
((LLX12A,((LL43F,((LL1,(((((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))),((WG49,((((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44),WG59)),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))),WG28),((WG22,WG21),((WG43,LL18),(WG481,WG74))))),((LLX17,LL46),LL9))),((LLX3,WG26),WG42))),Methanosarcina);
((((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))),(((((LL12,LL8),LL41B),((WG40,WG58B),((WG34B,(WG44,WG59)),WG49))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(WG28,((WG74,(WG481,((WG22,WG21),(WG43,LL18)))),((LL43F,((LLX17,LL46),LL9)),(LL1,(((LLX3,WG26),WG42),LLX12A))))))),Methanosarcina);
(((((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(WG16,LL4))),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))),(WG28,((WG43,(LL18,((WG74,WG481),(WG22,WG21)))),(((LLX17,LL46),LL9),(((WG26,WG42),LLX12A),(LL43F,(LLX3,LL1))))))),Methanosarcina);
(((((LL46,LLX17),LL9),((((LLX3,WG26),(LL43F,WG42)),LLX12A),LL1)),(WG28,((((LL24,(WG58A,(WG23A,LL5))),LL41A),((WG481,(((WG22,WG21),(WG43,LL18)),WG74)),(WG56,(WG16,LL4)))),((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG44,WG59),WG49)))),(LL14,((WG14,WG27),WG36))))))),Methanosarcina);
((LLX12A,((LL1,((WG28,((((LL24,(WG23A,(LL5,WG58A))),LL41A),((WG22,(WG21,((WG43,LL18),(WG74,WG481)))),(WG56,(WG16,LL4)))),(((WG14,WG27),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG44,WG59),WG49))))),((WG36,LL14),(LL13,LL37))))),((LLX17,LL46),LL9))),(LLX3,(WG26,(LL43F,WG42))))),Methanosarcina);
(((LLX12A,(((LL1,LLX3),(WG26,WG42)),(((LLX17,LL46),LL9),LL43F))),(WG28,(((WG56,(WG16,LL4)),((LL24,(WG23A,(LL5,WG58A))),LL41A)),(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG44,WG59),WG49)))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(WG481,(((WG22,WG21),(WG43,LL18)),WG74)))))),Methanosarcina);
((((LL5,(WG58A,WG23A)),(LL41A,LL24)),((((WG49,((WG34B,(WG44,WG59)),(((LL12,LL8),LL41B),(WG40,WG58B)))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(WG28,((LLX12A,(((LL1,LLX3),WG26),((WG42,((LL46,LLX17),LL9)),LL43F))),((WG43,(LL18,(WG22,WG21))),(WG74,WG481))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(WG28,((((LLX17,LL46),LL9),((LL43F,(LLX12A,(WG42,(LLX3,WG26)))),LL1)),(WG22,(WG21,((WG43,LL18),(WG74,WG481))))))),((WG56,(WG16,LL4)),((LL24,(LL5,(WG58A,WG23A))),LL41A))),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),((((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((WG14,WG27),(WG36,LL14)))),(WG28,((((LL46,LLX17),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1)),(WG43,(((WG22,WG21),LL18),(WG74,WG481)))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((((((LL9,(LLX17,LL46)),((LL43F,(LLX12A,((WG26,LLX3),WG42))),LL1)),WG28),((((WG481,WG74),LL18),(WG22,WG21)),WG43)),((LL13,LL37),((((WG58B,(WG49,WG40)),(WG34B,(WG59,WG44))),(LL41B,(LL8,LL12))),(LL14,(WG36,(WG14,WG27)))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG481,(WG74,((WG43,LL18),(WG22,WG21)))),((WG56,(WG16,LL4)),((LL41A,((LL5,(WG23A,WG58A)),LL24)),((WG28,(((LLX17,LL46),LL9),((LL43F,(LLX12A,((WG26,LLX3),WG42))),LL1))),((WG49,(WG59,(WG44,(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40)))))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))))))),Methanosarcina);
(((WG481,(WG74,((WG43,LL18),(WG22,WG21)))),((((LL46,LLX17),LL9),((LLX12A,((WG26,LLX3),(LL43F,WG42))),LL1)),((((LL13,LL37),((WG49,(((LL12,LL8),LL41B),(WG58B,(((WG59,WG44),WG34B),WG40)))),(WG27,((LL14,WG36),WG14)))),((WG56,(WG16,LL4)),(LL41A,((LL5,(WG23A,WG58A)),LL24)))),WG28))),Methanosarcina);
(((((WG43,(((WG481,WG74),LL18),(WG22,WG21))),(((LL13,LL37),((WG49,(WG59,(WG44,(WG34B,((WG40,WG58B),((LL12,LL8),LL41B)))))),((LL14,WG36),(WG14,WG27)))),((WG56,(WG16,LL4)),(LL41A,((WG58A,(LL5,WG23A)),LL24))))),WG28),(((LL46,LLX17),LL9),(((LL43F,LLX12A),((WG26,LLX3),WG42)),LL1))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((WG28,((((LLX17,LL46),LL9),(((LL43F,LLX12A),((WG26,LLX3),WG42)),LL1)),(WG43,(LL18,((WG22,WG21),(WG481,WG74)))))),((LL13,LL37),((WG49,(WG40,(WG58B,(((LL12,LL8),LL41B),((WG59,WG44),WG34B))))),((LL14,WG36),(WG14,WG27)))))),Methanosarcina);
(((WG28,((((LLX17,LL46),LL9),(((LL43F,LLX12A),((WG26,LLX3),WG42)),LL1)),((WG481,WG74),((WG22,WG21),(LL18,WG43))))),(((LL13,LL37),((WG49,(((WG59,WG44),WG34B),((WG40,WG58B),((LL12,LL8),LL41B)))),((LL14,WG36),(WG14,WG27)))),((WG56,(WG16,LL4)),(LL41A,((LL24,LL5),(WG23A,WG58A)))))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((WG28,((LLX12A,((((LLX17,LL46),LL9),LL43F),(WG42,(WG26,(LL1,LLX3))))),(WG43,((LL18,(WG481,WG74)),(WG22,WG21))))),((LL13,LL37),((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),((LL14,WG36),(WG14,WG27))))),(WG56,(WG16,LL4)))),Methanosarcina);
((((WG43,(LL18,((WG481,WG74),(WG22,WG21)))),(WG28,(((LL13,LL37),(LL14,(WG36,((WG14,WG27),(((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))))))),((WG56,(WG16,LL4)),(LL41A,((WG23A,(WG58A,LL5)),LL24)))))),(((LLX17,LL46),LL9),((LL43F,((WG42,(WG26,LLX3)),LLX12A)),LL1))),Methanosarcina);
((LLX12A,((LL1,((WG28,((((((LL12,LL8),LL41B),((((WG59,WG44),WG34B),WG49),(WG40,WG58B))),((((LL14,WG36),WG14),WG27),(LL13,LL37))),((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG23A,WG58A)))))),(((WG22,WG21),(LL18,(WG481,WG74))),WG43))),((LLX17,LL46),LL9))),((LL43F,WG42),(WG26,LLX3)))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(((((WG74,((WG22,WG21),((WG43,LL18),WG481))),((((LL46,LLX17),LL9),((WG42,(WG26,LLX3)),(LL43F,LLX12A))),LL1)),((LL13,LL37),((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),((LL14,WG36),(WG14,WG27))))),WG28),(WG56,(WG16,LL4)))),Methanosarcina);
(((((LL9,(LL46,LLX17)),(LL1,((LL43F,LLX12A),((LLX3,WG26),WG42)))),(WG28,(((WG56,(LL4,WG16)),(LL41A,(LL24,(WG58A,(WG23A,LL5))))),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG40,WG58B))),((LL13,LL37),(LL14,(WG36,(WG27,WG14)))))))),(((WG21,WG22),((WG481,WG74),LL18)),WG43)),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),(((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG40,WG58B))))),((((WG21,WG22),((WG481,WG74),(WG43,LL18))),(((LLX17,LL46),LL9),(LL1,((LL43F,LLX12A),((LLX3,WG26),WG42))))),WG28))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG58A,WG23A)))),((((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG40,WG58B))))),((((LL18,((WG21,WG22),(WG481,WG74))),WG43),((((LLX3,WG26),WG42),(LL43F,(((LL46,LLX17),LL9),LL1))),LLX12A)),WG28)),(WG56,(LL4,WG16)))),Methanosarcina);
((((((LL43F,((LL46,LLX17),LL9)),WG42),((LLX3,WG26),LLX12A)),LL1),((((WG56,(LL4,WG16)),(LL41A,(LL24,((WG23A,LL5),WG58A)))),((((WG34B,(WG44,(WG59,WG49))),((WG40,WG58B),((LL12,LL8),LL41B))),((LL13,LL37),(WG27,(WG14,(LL14,WG36))))),(WG74,(((WG43,LL18),(WG21,WG22)),WG481)))),WG28)),Methanosarcina);
((((((WG21,WG22),((WG481,WG74),(WG43,LL18))),(((WG56,(LL4,WG16)),(((LL5,(WG58A,WG23A)),LL24),LL41A)),((LL13,LL37),((LL14,(WG36,(WG27,WG14))),(((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG40,WG58B))))))),WG28),(((LL43F,((LLX17,LL46),LL9)),((WG42,(LLX3,WG26)),LLX12A)),LL1)),Methanosarcina);
(((((WG56,(LL4,WG16)),(((WG23A,(LL5,WG58A)),LL24),LL41A)),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG40,WG58B))),((LL13,LL37),(LL14,(WG36,(WG27,WG14)))))),(WG28,((LLX12A,(LL1,((LLX3,WG26),(WG42,(LL43F,((LLX17,LL46),LL9)))))),(WG22,((WG43,(LL18,(WG481,WG74))),WG21))))),Methanosarcina);
((((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),(((WG34B,(WG44,WG59)),WG49),(WG40,WG58B))))),((WG28,((LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),(LL1,(LLX3,WG26)))),(((WG43,LL18),(WG481,WG74)),(WG21,WG22)))),((WG56,(LL4,WG16)),(((WG23A,(LL5,WG58A)),LL24),LL41A)))),Methanosarcina);
((((WG56,(LL4,WG16)),(((WG23A,(LL5,WG58A)),LL24),LL41A)),(((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG49,(WG44,(WG34B,WG59))),(WG40,WG58B))))),(WG28,((((((LLX3,WG26),WG42),LLX12A),(LL43F,((LLX17,LL46),LL9))),LL1),(((WG481,WG74),((WG21,WG22),LL18)),WG43))))),Methanosarcina);
(((((WG23A,(LL5,WG58A)),LL24),LL41A),((((WG49,(WG59,(WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B)))),((LL13,LL37),((WG27,WG14),(LL14,WG36)))),(WG28,((LLX12A,((LL43F,(WG42,((LLX17,LL46),LL9))),((LL1,LLX3),WG26))),(WG481,(((WG21,WG22),(WG43,LL18)),WG74))))),(WG56,(LL4,WG16)))),Methanosarcina);
((((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((((WG40,WG58B),((LL12,LL8),LL41B)),(WG34B,((WG59,WG44),WG49))),((LL13,LL37),((WG27,WG14),(LL14,WG36)))),(WG28,((LL1,(LLX3,(WG26,((LLX12A,(LL43F,((LLX17,LL46),LL9))),WG42)))),(WG481,(((WG21,WG22),(WG43,LL18)),WG74)))))),(WG56,(LL4,WG16))),Methanosarcina);
(((LL1,(((LL43F,((LL9,(LL46,LLX17)),WG42)),(WG26,LLX3)),LLX12A)),(WG28,(((LL18,(WG481,(WG74,(WG22,WG21)))),WG43),(((LL41A,((WG23A,(LL5,LL24)),WG58A)),((LL4,WG16),WG56)),((WG34B,(((LL41B,LL8),LL12),(WG40,((WG44,(WG49,WG59)),WG58B)))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13))))))),Methanosarcina);
(((WG28,((LL1,(((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)),LLX12A)),(((WG74,(WG22,WG21)),(LL18,WG481)),WG43))),(((LL41A,((WG23A,(LL5,WG58A)),LL24)),((LL4,WG16),WG56)),(((LL41B,(LL8,LL12)),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((WG27,(WG14,(LL14,WG36))),(LL37,LL13))))),Methanosarcina);
(((((LL41A,((WG58A,(WG23A,LL5)),LL24)),((LL4,WG16),WG56)),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((((WG27,WG14),WG36),LL14),(LL37,LL13)))),(WG28,((LLX12A,((WG42,WG26),((LLX3,LL1),(((LLX17,LL46),LL9),LL43F)))),(WG481,((WG74,(WG22,WG21)),(WG43,LL18)))))),Methanosarcina);
((LLX12A,(((((LL1,((LLX17,LL46),LL9)),LL43F),(WG26,LLX3)),WG42),((WG74,((LL18,((WG22,WG21),WG43)),WG481)),((((LL41A,(((WG23A,LL5),WG58A),LL24)),((LL4,WG16),WG56)),(((WG34B,(WG49,(WG59,WG44))),((WG58B,WG40),((LL12,LL8),LL41B))),((WG27,(WG14,(WG36,LL14))),(LL37,LL13)))),WG28)))),Methanosarcina);
((WG28,(((((WG74,((WG22,WG21),(WG43,LL18))),WG481),(((((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),WG44),WG59),WG49),(((WG36,LL14),(WG27,WG14)),(LL37,LL13)))),(((LL4,WG16),WG56),(LL41A,((LL24,LL5),(WG58A,WG23A))))),(((((LLX17,LL46),LL9),LL43F),(((WG26,LLX3),WG42),LLX12A)),LL1))),Methanosarcina);
((WG28,((((LL37,LL13),((((LL12,LL8),LL41B),(((WG44,(WG59,WG49)),WG34B),(WG58B,WG40))),((WG36,LL14),(WG27,WG14)))),(((LL4,WG16),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24)))),(((LL1,((LLX12A,((WG26,LLX3),WG42)),LL43F)),((LL46,LLX17),LL9)),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))))),Methanosarcina);
(((LLX12A,(((WG26,LLX3),WG42),((LL43F,((LLX17,LL46),LL9)),LL1))),((WG43,(LL18,(WG481,(WG74,(WG22,WG21))))),(WG28,(((((LL12,LL8),LL41B),(((WG44,(WG59,WG49)),WG34B),(WG58B,WG40))),(((WG36,LL14),(WG27,WG14)),(LL37,LL13))),(((LL4,WG16),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24))))))),Methanosarcina);
(((((LL4,WG16),WG56),(LL41A,(WG58A,(WG23A,(LL5,LL24))))),((((LLX12A,(((WG26,LLX3),WG42),(LL43F,(((LL46,LLX17),LL9),LL1)))),(WG481,(WG74,((WG43,LL18),(WG22,WG21))))),WG28),((WG49,(((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),WG44),WG59)),(((WG36,LL14),(WG27,WG14)),(LL37,LL13))))),Methanosarcina);
((((WG481,(WG43,LL18)),((WG22,WG21),WG74)),((WG28,(((LL46,LLX17),LL9),(LL1,(LL43F,(LLX12A,((WG26,LLX3),WG42)))))),(((LL37,LL13),((WG49,(((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),WG44),WG59)),((WG36,(WG27,WG14)),LL14))),(((LL4,WG16),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24)))))),Methanosarcina);
(((((((((LL12,LL8),LL41B),(((WG44,(WG59,WG49)),WG34B),(WG58B,WG40))),(((WG27,WG14),(LL14,WG36)),(LL37,LL13))),(((LL4,WG16),WG56),(LL41A,(((WG23A,LL5),WG58A),LL24)))),WG28),(WG43,((WG22,WG21),(LL18,(WG481,WG74))))),(LLX12A,(((WG26,LLX3),(LL43F,WG42)),(((LLX17,LL46),LL9),LL1)))),Methanosarcina);
(((((WG16,LL4),WG56),(LL41A,(((WG58A,WG23A),LL5),LL24))),(((((WG34B,(WG44,WG59)),(WG49,(WG58B,WG40))),(LL41B,(LL12,LL8))),((LL13,LL37),((LL14,WG36),(WG27,WG14)))),((((LL18,((WG21,WG22),(WG74,WG481))),WG43),(LL1,(LLX12A,((WG42,(LL43F,(LL9,(LLX17,LL46)))),(LLX3,WG26))))),WG28))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),((((WG49,((WG44,WG59),(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B))),((LL13,LL37),((LL14,WG36),(WG27,WG14)))),(((((WG21,WG22),((WG74,WG481),LL18)),WG43),(((LLX17,LL46),LL9),((((LL1,LLX3),WG26),WG42),(LL43F,LLX12A)))),WG28)),((WG16,LL4),WG56))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),((((LL13,LL37),(((LL14,WG36),(WG27,WG14)),(WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))))),(((WG481,((WG43,LL18),((WG21,WG22),WG74))),((LL43F,((LLX17,LL46),LL9)),((LLX3,(WG42,WG26)),(LLX12A,LL1)))),WG28)),((WG16,LL4),WG56))),Methanosarcina);
((LLX12A,((LL1,(WG28,((LL41A,(WG58A,(WG23A,(LL5,LL24)))),((((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((LL13,LL37),(LL14,(WG36,(WG27,WG14))))),(WG74,(((LL18,WG43),(WG21,WG22)),WG481))),((WG16,LL4),WG56))))),((LLX3,WG26),(WG42,(((LL46,LLX17),LL9),LL43F))))),Methanosarcina);
(((WG28,((WG74,(((LL18,WG43),(WG21,WG22)),WG481)),((((WG16,LL4),WG56),(((WG23A,LL5),WG58A),(LL24,LL41A))),((WG49,(WG59,(WG34B,(((WG58B,WG40),((LL12,LL8),LL41B)),WG44)))),((LL13,LL37),((WG27,WG14),(LL14,WG36))))))),((((((LLX3,WG26),WG42),LLX12A),LL43F),LL1),((LL46,LLX17),LL9))),Methanosarcina);
((((LL5,(WG58A,WG23A)),(LL24,LL41A)),((((LL13,LL37),((WG27,(WG14,(LL14,WG36))),(WG49,(WG59,(WG34B,(((WG58B,WG40),((LL12,LL8),LL41B)),WG44)))))),(WG28,((LLX12A,(((LL43F,(LL1,((LLX17,LL46),LL9))),(LLX3,WG26)),WG42)),(WG43,(((WG74,(WG21,WG22)),WG481),LL18))))),((WG16,LL4),WG56))),Methanosarcina);
(((((LL24,LL5),(WG58A,WG23A)),LL41A),((((((WG27,WG14),WG36),LL14),((WG49,(WG59,((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),WG44))),(LL13,LL37))),(WG28,((LLX12A,((LL1,((LLX17,LL46),LL9)),((LLX3,WG26),(LL43F,WG42)))),(WG481,(WG74,((LL18,WG43),(WG21,WG22))))))),((WG16,LL4),WG56))),Methanosarcina);
(((((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(((WG58B,WG40),((LL12,LL8),LL41B)),(((WG44,WG59),WG34B),WG49)))),((WG481,(WG74,(WG43,((WG21,WG22),LL18)))),(WG28,(LL1,(LLX12A,((LLX3,WG26),((((LLX17,LL46),LL9),LL43F),WG42))))))),(((WG16,LL4),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24)))),Methanosarcina);
((((((WG16,LL4),WG56),(LL41A,((WG23A,(LL5,WG58A)),LL24))),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)))))),(WG28,((LLX12A,((((LL1,LLX3),WG26),WG42),(((LL46,LLX17),LL9),LL43F))),(((WG21,WG22),(LL18,WG43)),(WG481,WG74))))),Methanosarcina);
((LLX12A,(((LLX3,WG26),WG42),(((((LL46,LLX17),LL9),((((WG481,(WG74,(WG21,WG22))),LL18),WG43),((((WG16,LL4),WG56),(LL41A,(((LL24,LL5),WG58A),WG23A))),(((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(WG49,(WG59,((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),WG44))))),WG28)))),LL1),LL43F))),Methanosarcina);
(((WG56,(LL4,WG16)),((LL41A,(LL24,(WG58A,(WG23A,LL5)))),((((LL1,(LLX12A,((WG26,LLX3),(((LL9,(LLX17,LL46)),WG42),LL43F)))),((WG74,WG481),(LL18,(WG43,(WG21,WG22))))),WG28),(((((WG44,(WG49,WG59)),WG34B),(WG40,WG58B)),(LL41B,(LL8,LL12))),((LL14,((WG27,WG14),WG36)),(LL37,LL13)))))),Methanosarcina);
((WG28,(((((((WG44,(WG49,WG59)),WG34B),(WG40,WG58B)),((LL8,LL12),LL41B)),(((WG27,WG14),(WG36,LL14)),(LL37,LL13))),((WG56,(LL4,WG16)),(LL41A,(LL24,(WG23A,(LL5,WG58A)))))),((((WG21,WG22),((WG74,WG481),LL18)),WG43),((LL1,(LLX12A,((WG26,LLX3),(WG42,LL43F)))),(LL9,(LLX17,LL46)))))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(((((WG74,WG481),(LL18,(WG43,(WG21,WG22)))),((LL1,((LLX12A,((WG26,LLX3),WG42)),((LL9,(LLX17,LL46)),LL43F))),WG28)),((LL37,LL13),(((((WG44,(WG49,WG59)),WG34B),(WG40,WG58B)),((LL12,LL8),LL41B)),((WG27,WG14),(WG36,LL14))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG43,((WG21,WG22),((WG74,WG481),LL18))),(((LL1,((LLX12A,((WG26,LLX3),WG42)),(((LLX17,LL46),LL9),LL43F))),WG28),((((((WG44,(WG49,WG59)),WG34B),(WG40,WG58B)),((LL12,LL8),LL41B)),(((WG27,WG14),(WG36,LL14)),(LL37,LL13))),((WG56,(LL4,WG16)),(LL41A,(LL24,(WG23A,(LL5,WG58A)))))))),Methanosarcina);
(((WG28,((((WG44,((WG49,WG59),(WG34B,((WG40,WG58B),((LL12,LL8),LL41B))))),((LL14,((WG27,WG14),WG36)),(LL37,LL13))),((WG56,(LL4,WG16)),(LL41A,(LL24,(WG23A,(LL5,WG58A)))))),((WG481,(WG43,LL18)),(WG74,(WG21,WG22))))),(((LL46,LLX17),LL9),(LL1,(((WG26,LLX3),(LL43F,WG42)),LLX12A)))),Methanosarcina);
(((((LL46,LLX17),LL9),(LL1,(((WG26,LLX3),(LL43F,WG42)),LLX12A))),((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),(WG28,(((WG49,(WG59,(WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B)))),((WG27,(WG14,(WG36,LL14))),(LL37,LL13))),((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))))))),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,((WG58A,WG23A),(LL24,LL5)))),((((((LL46,LLX17),LL9),(LL1,(((WG26,LLX3),(LL43F,WG42)),LLX12A))),((WG481,WG74),((WG43,LL18),(WG21,WG22)))),WG28),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),(((WG36,LL14),(WG27,WG14)),(LL37,LL13))))),Methanosarcina);
((((LL24,LL41A),(WG23A,(LL5,WG58A))),(((((((LL46,LLX17),LL9),(LL1,((((WG26,LLX3),WG42),LLX12A),LL43F))),(WG481,(WG74,((WG43,LL18),(WG21,WG22))))),WG28),((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((WG36,LL14),(WG27,WG14))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((((LL37,LL13),((WG49,(WG59,(WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B)))),(WG27,(WG14,(WG36,LL14))))),((WG56,(LL4,WG16)),(LL41A,((WG23A,WG58A),(LL5,LL24))))),(((WG481,(WG74,((WG43,LL18),(WG21,WG22)))),((LLX12A,((WG26,LLX3),((LL43F,((LLX17,LL46),LL9)),WG42))),LL1)),WG28)),Methanosarcina);
(((WG43,((WG22,WG21),((WG481,WG74),LL18))),(((LLX12A,((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42)))),LL1),(WG28,(((LL37,LL13),((((LL12,LL8),LL41B),(((WG34B,(WG59,WG44)),WG49),(WG40,WG58B))),((WG36,LL14),(WG27,WG14)))),((WG56,(LL4,WG16)),(LL41A,((WG23A,WG58A),(LL5,LL24)))))))),Methanosarcina);
(((((LL41A,((WG23A,(WG58A,LL5)),LL24)),(WG56,(LL4,WG16))),((((WG40,WG58B),(WG34B,(WG44,(WG59,WG49)))),(LL41B,(LL8,LL12))),((LL37,LL13),((WG14,WG27),(LL14,WG36))))),(((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),(LL1,((LL9,(LLX17,LL46)),(((LLX3,WG26),(LL43F,WG42)),LLX12A)))),WG28)),Methanosarcina);
((LLX12A,((LL43F,(((WG28,(((LL41A,((LL24,LL5),(WG23A,WG58A))),((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),(WG56,(LL4,WG16)))),((LL37,LL13),(((WG14,WG27),(LL14,WG36)),(((WG40,WG58B),(WG34B,(WG44,(WG59,WG49)))),((LL12,LL8),LL41B)))))),LL1),((LL46,LLX17),LL9))),(WG42,(LLX3,WG26)))),Methanosarcina);
(((WG43,(LL18,(((WG22,WG21),WG74),WG481))),((((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1),((LL46,LLX17),LL9)),(WG28,(((WG56,(LL4,WG16)),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((((WG34B,(WG44,WG59)),((WG49,WG40),WG58B)),((LL12,LL8),LL41B)),((LL37,LL13),((WG14,WG27),(LL14,WG36)))))))),Methanosarcina);
((((WG56,(LL4,WG16)),((LL24,LL41A),(LL5,(WG23A,WG58A)))),(((LL37,LL13),((LL14,(WG36,(WG14,WG27))),(((WG49,(WG34B,(WG44,WG59))),(WG40,WG58B)),((LL12,LL8),LL41B)))),(((WG43,(LL18,((WG22,WG21),(WG74,WG481)))),(((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1),((LL46,LLX17),LL9))),WG28))),Methanosarcina);
(((WG22,(WG21,(WG74,(WG481,(WG43,LL18))))),((((WG56,(LL4,WG16)),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((LL37,LL13),((LL14,(WG36,(WG14,WG27))),(((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B)),((LL12,LL8),LL41B))))),((((((WG42,(LLX3,WG26)),LLX12A),LL43F),LL1),((LL46,LLX17),LL9)),WG28))),Methanosarcina);
(((WG74,(WG481,(LL18,((WG22,WG21),WG43)))),((((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24))),(((WG58B,((WG34B,(WG44,(WG49,WG59))),WG40)),((LL12,LL8),LL41B)),((LL37,LL13),((WG14,WG27),(LL14,WG36))))),((((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1),((LL46,LLX17),LL9)),WG28))),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,((WG58A,(LL5,WG23A)),LL24))),(((WG49,(WG40,(((LL12,LL8),LL41B),(WG58B,(WG34B,(WG44,WG59)))))),((LL37,LL13),(LL14,(WG36,(WG14,WG27))))),(((WG74,(WG481,((WG22,WG21),(WG43,LL18)))),(((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1),((LLX17,LL46),LL9))),WG28))),Methanosarcina);
(((WG74,(WG481,((WG22,WG21),(WG43,LL18)))),((WG56,(LL4,WG16)),((LL41A,((LL24,LL5),(WG23A,WG58A))),(((LL37,LL13),(((WG14,WG27),(LL14,WG36)),(((WG58B,WG40),((LL12,LL8),LL41B)),(WG49,(WG34B,(WG44,WG59)))))),((LL1,((LL43F,((LL46,LLX17),LL9)),((WG42,(LLX3,WG26)),LLX12A))),WG28))))),Methanosarcina);
(((LL41A,((LL24,LL5),(WG23A,WG58A))),((((WG49,((WG58B,WG40),(((LL12,LL8),LL41B),(WG44,(WG59,WG34B))))),((LL37,LL13),((WG14,WG27),(LL14,WG36)))),(((WG22,(WG21,((WG43,LL18),(WG74,WG481)))),(LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),(WG42,(LLX3,WG26))))),WG28)),(WG56,(LL4,WG16)))),Methanosarcina);
((((((WG43,(LL18,(WG74,WG481))),(WG22,WG21)),((LL1,(((LL43F,WG42),(LLX3,WG26)),LLX12A)),((LL46,LLX17),LL9))),WG28),(((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24))),(((WG34B,(WG44,(WG49,WG59))),((WG58B,WG40),((LL12,LL8),LL41B))),((LL37,LL13),((WG14,WG27),(LL14,WG36)))))),Methanosarcina);
(((LL41A,(WG58A,(WG23A,(LL24,LL5)))),(((((WG43,((WG74,WG481),((WG22,WG21),LL18))),((((LL1,LLX3),WG26),(WG42,(LL43F,((LLX17,LL46),LL9)))),LLX12A)),WG28),((WG49,((WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B)),WG59)),((LL14,(WG36,(WG27,WG14))),(LL13,LL37)))),((LL4,WG16),WG56))),Methanosarcina);
((LLX12A,(((LLX3,WG26),WG42),((LL1,(((WG28,(((LL14,(WG36,(WG27,WG14))),((LL13,LL37),(((LL12,LL8),LL41B),((WG34B,((WG59,WG49),WG44)),(WG40,WG58B))))),(((LL4,WG16),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24))))),(WG22,(WG21,((WG43,LL18),(WG74,WG481))))),((LLX17,LL46),LL9))),LL43F))),Methanosarcina);
((WG28,(((((((LL12,LL8),LL41B),((WG34B,((WG59,WG49),WG44)),(WG40,WG58B))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))),(((LL4,WG16),WG56),(LL41A,(((WG58A,LL5),WG23A),LL24)))),(WG43,((LL18,(WG74,WG481)),(WG22,WG21)))),((((LLX3,WG26),LLX12A),(WG42,(LL43F,((LLX17,LL46),LL9)))),LL1))),Methanosarcina);
(((((LLX17,LL46),LL9),(LL1,((LL43F,(WG42,(LLX3,WG26))),LLX12A))),((WG28,(((((WG49,WG40),WG58B),(((LL12,LL8),LL41B),(WG34B,(WG59,WG44)))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37))),(((LL4,WG16),WG56),((((WG58A,LL5),WG23A),LL24),LL41A)))),(((WG43,LL18),(WG74,WG481)),(WG22,WG21)))),Methanosarcina);
((((LL4,WG16),WG56),((((LL5,(WG23A,WG58A)),LL24),LL41A),((((WG74,(WG481,(((WG22,WG21),WG43),LL18))),(LLX12A,(WG42,((LLX3,WG26),((LL43F,((LL46,LLX17),LL9)),LL1))))),WG28),(((LL12,(LL8,LL41B)),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37)))))),Methanosarcina);
((((((WG481,((WG22,WG21),WG74)),(WG43,LL18)),(((LLX17,LL46),LL9),(LL1,((LLX12A,LL43F),((LLX3,WG26),WG42))))),WG28),((((LL12,(LL8,LL41B)),((WG34B,(WG59,WG44)),((WG49,WG40),WG58B))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))),(((LL4,WG16),WG56),(((WG23A,(WG58A,LL5)),LL24),LL41A)))),Methanosarcina);
(((LLX12A,(((LLX3,WG26),(LL43F,WG42)),(((LLX17,LL46),LL9),LL1))),((WG28,(((((LL41B,LL8),LL12),((WG34B,(WG49,(WG59,WG44))),(WG40,WG58B))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37))),(((LL4,WG16),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))))),((WG74,WG481),((WG43,LL18),(WG22,WG21))))),Methanosarcina);
(((((LL13,LL37),((((LL41B,LL8),LL12),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((WG27,WG14),(LL14,WG36)))),(((LL4,WG16),WG56),(LL41A,(((LL5,LL24),WG23A),WG58A)))),((((LL18,((WG74,(WG22,WG21)),WG481)),WG43),(LL1,((LLX12A,((((LLX17,LL46),LL9),WG42),LL43F)),(LLX3,WG26)))),WG28)),Methanosarcina);
(((LL1,(LLX12A,(((((LLX17,LL46),LL9),WG42),LL43F),(LLX3,WG26)))),(WG28,((((LL4,WG16),WG56),(LL41A,(LL24,((WG23A,WG58A),LL5)))),(((WG22,WG21),((WG481,(WG43,LL18)),WG74)),((LL13,LL37),((((LL41B,LL8),LL12),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((WG27,WG14),(LL14,WG36)))))))),Methanosarcina);
(((LL41A,((WG23A,WG58A),(LL5,LL24))),(((((WG481,(((WG22,WG21),(WG43,LL18)),WG74)),(LL1,(((LLX17,LL46),LL9),((LLX12A,LL43F),(WG42,(LLX3,WG26)))))),WG28),(((LL41B,(LL8,LL12)),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((WG27,(WG14,(LL14,WG36))),(LL13,LL37)))),((LL4,WG16),WG56))),Methanosarcina);
(((LL41A,(LL24,(WG23A,(LL5,WG58A)))),(((WG16,LL4),WG56),((((WG43,((WG481,((WG21,WG22),WG74)),LL18)),(LLX12A,((WG26,(LL1,LLX3)),(WG42,(LL43F,(LL9,(LL46,LLX17))))))),WG28),((((WG34B,((WG49,WG59),WG44)),(WG58B,WG40)),((LL8,LL12),LL41B)),(((LL14,WG36),(WG14,WG27)),(LL13,LL37)))))),Methanosarcina);
(((((LLX12A,(WG26,LLX3)),(LL43F,(((LL46,LLX17),LL9),WG42))),LL1),(WG28,((((LL13,LL37),((((WG34B,((WG49,WG59),WG44)),(WG58B,WG40)),((LL12,LL8),LL41B)),((LL14,WG36),(WG14,WG27)))),((LL41A,(LL24,(LL5,(WG58A,WG23A)))),((WG16,LL4),WG56))),(WG43,(((WG21,WG22),(WG74,WG481)),LL18))))),Methanosarcina);
(((((((LLX17,LL46),LL9),LL43F),(LLX12A,(WG42,(WG26,LLX3)))),LL1),(WG28,((((LL13,LL37),((WG49,(WG59,(WG44,(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B)))),((LL14,WG36),(WG14,WG27)))),((LL41A,((WG58A,WG23A),(LL24,LL5))),((WG16,LL4),WG56))),(WG43,(LL18,(((WG21,WG22),WG74),WG481)))))),Methanosarcina);
((((LL41A,(((WG58A,WG23A),LL5),LL24)),((WG16,LL4),WG56)),(((((((LL46,LLX17),LL9),LL43F),(LLX12A,(WG42,(WG26,LLX3)))),LL1),(WG481,(((LL18,(WG21,WG22)),WG43),WG74))),(((LL13,LL37),(((LL12,(LL8,LL41B)),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((LL14,WG36),(WG14,WG27)))),WG28))),Methanosarcina);
((((((WG23A,(LL5,WG58A)),(LL24,LL41A)),((WG16,LL4),WG56)),((LL13,LL37),(((LL12,(LL8,LL41B)),((((WG58B,WG40),WG49),(WG59,WG44)),WG34B)),((LL14,WG36),(WG14,WG27))))),(((((((LLX17,LL46),LL9),LL43F),(LLX12A,(WG42,(WG26,LLX3)))),LL1),(WG43,(LL18,(WG481,(WG74,(WG21,WG22)))))),WG28)),Methanosarcina);
(((((((LLX17,LL46),LL9),LL43F),(LLX12A,(WG42,(WG26,LLX3)))),LL1),((((WG481,(WG74,(WG21,WG22))),(WG43,LL18)),(((((LL24,LL5),(WG58A,WG23A)),LL41A),((WG16,LL4),WG56)),((LL13,LL37),((WG49,(WG59,(WG44,(WG34B,((LL12,(LL8,LL41B)),(WG58B,WG40)))))),(LL14,(WG36,(WG14,WG27))))))),WG28)),Methanosarcina);
(((((((LLX17,LL46),LL9),LL43F),(LLX12A,(WG42,(WG26,LLX3)))),LL1),((((((LL24,LL5),(WG58A,WG23A)),LL41A),((WG16,LL4),WG56)),((((((LL12,LL8),LL41B),(WG58B,WG40)),(((WG49,WG59),WG44),WG34B)),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),(WG74,(((WG43,LL18),(WG21,WG22)),WG481)))),WG28)),Methanosarcina);
(((((LL24,LL5),(WG58A,WG23A)),LL41A),(((WG16,LL4),WG56),(((WG49,(WG59,(WG44,(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40)))))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))),((WG28,(((WG26,LLX3),(LLX12A,((((LL46,LLX17),LL9),LL43F),WG42))),LL1)),(((WG21,WG22),(LL18,(WG481,WG74))),WG43))))),Methanosarcina);
((((((WG23A,(LL5,LL24)),WG58A),LL41A),((WG16,LL4),WG56)),(((((LL12,LL8),LL41B),((WG58B,WG40),(((WG49,WG59),WG44),WG34B))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),((WG28,((LLX3,(((((LL46,LLX17),LL9),WG42),(LLX12A,WG26)),LL43F)),LL1)),(((WG21,WG22),(LL18,(WG481,WG74))),WG43)))),Methanosarcina);
(((((LL5,(WG58A,WG23A)),LL24),LL41A),(((WG16,LL4),WG56),(((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(((WG49,WG59),WG44),WG34B))),((WG14,WG27),(LL14,WG36)))),(WG28,(((WG481,WG74),((WG43,(WG21,WG22)),LL18)),(((((WG26,LLX3),(WG42,LL43F)),LLX12A),LL1),((LLX17,LL46),LL9))))))),Methanosarcina);
((WG28,(((((WG49,((((LL12,LL8),LL41B),(WG40,WG58B)),(WG34B,(WG44,WG59)))),(LL14,(WG36,(WG14,WG27)))),(LL37,LL13)),((WG56,(LL4,WG16)),(LL41A,(LL24,((WG23A,LL5),WG58A))))),(((WG74,WG481),(LL18,((WG21,WG22),WG43))),(LL1,(((LL43F,((LL9,(LLX17,LL46)),WG42)),(LLX3,WG26)),LLX12A))))),Methanosarcina);
((((WG21,WG22),((WG74,WG481),(WG43,LL18))),((WG56,(LL4,WG16)),((LL41A,(LL24,((WG58A,LL5),WG23A))),(((LL1,(((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)),LLX12A)),WG28),(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(LL14,(WG36,(WG14,WG27)))),(LL37,LL13)))))),Methanosarcina);
(((LL41A,(LL24,((WG58A,LL5),WG23A))),((((LL1,((LL43F,((LLX17,LL46),LL9)),((WG42,(LLX3,WG26)),LLX12A))),WG28),(((((LL12,LL8),LL41B),(WG58B,((WG34B,(WG44,(WG49,WG59))),WG40))),((WG22,((WG74,(WG481,(WG43,LL18))),WG21)),((WG14,WG27),(LL14,WG36)))),(LL37,LL13))),(WG56,(LL4,WG16)))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(((WG43,((WG74,WG481),(LL18,(WG21,WG22)))),((((((LL1,((LLX17,LL46),LL9)),(LLX12A,LL43F)),(WG42,WG26)),LLX3),WG28),((((WG14,WG27),(LL14,WG36)),((WG34B,(WG44,(WG49,WG59))),(((LL12,LL8),LL41B),(WG40,WG58B)))),(LL37,LL13)))),(WG56,(LL4,WG16)))),Methanosarcina);
(((((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG23A,WG58A))))),(((LL14,(WG36,(WG14,WG27))),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59)))))),(LL37,LL13))),(((WG43,(LL18,((WG21,WG22),(WG74,WG481)))),(((LLX17,LL46),LL9),(((LLX12A,LL43F),((WG26,LLX3),WG42)),LL1))),WG28)),Methanosarcina);
(((((LLX17,LL46),LL9),((LLX12A,((WG26,LLX3),(LL43F,WG42))),LL1)),(((((WG56,(LL4,WG16)),(LL41A,((LL24,(LL5,WG58A)),WG23A))),((((LL12,LL8),LL41B),((WG40,WG58B),((WG34B,(WG44,WG59)),WG49))),((LL37,LL13),((WG14,WG27),(LL14,WG36))))),(WG74,(WG481,((WG43,LL18),(WG21,WG22))))),WG28)),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,(((WG58A,LL5),WG23A),LL24))),(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),((WG14,WG27),(LL14,WG36)))),(((LL1,(((LLX17,LL46),LL9),((LL43F,LLX12A),((WG26,LLX3),WG42)))),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))),WG28))),Methanosarcina);
((((((LL37,LL13),((WG27,((LL14,WG36),WG14)),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))))),((((LLX12A,((WG26,LLX3),(LL43F,(((LL46,LLX17),LL9),WG42)))),LL1),(WG22,(((WG481,(WG43,LL18)),WG74),WG21))),WG28)),(WG56,(LL4,WG16))),(LL41A,((LL5,(WG23A,WG58A)),LL24))),Methanosarcina);
((WG28,((((WG56,(LL4,WG16)),(LL41A,(((WG23A,LL5),WG58A),LL24))),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),((LL37,LL13),((LL14,WG36),(WG14,WG27))))),((LLX12A,(((LL1,LLX3),WG26),(WG42,(LL43F,((LLX17,LL46),LL9))))),(WG481,(WG74,((WG21,WG22),(WG43,LL18))))))),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,((LL24,LL5),(WG58A,WG23A)))),((((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),(WG27,((LL14,WG36),WG14)))),((((((LLX3,WG26),((WG42,((LLX17,LL46),LL9)),LL43F)),LLX12A),LL1),(WG481,(WG74,((WG21,WG22),(WG43,LL18))))),WG28))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,((WG58A,WG23A),(LL24,LL5)))),((((WG34B,(WG44,WG59)),((LL41B,(LL8,LL12)),((WG49,WG40),WG58B))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))),(WG28,((WG481,(((LL18,(WG21,WG22)),WG43),WG74)),((LL9,(LLX17,LL46)),(LL1,(LLX12A,((LLX3,WG26),(WG42,LL43F))))))))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,(((WG58A,LL5),WG23A),LL24))),((((LL41B,(LL8,LL12)),((WG40,WG58B),(WG49,(WG34B,(WG44,WG59))))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))),(WG28,((WG481,((LL18,((WG21,WG22),WG43)),WG74)),(LLX12A,(((LLX3,WG26),WG42),((LL43F,((LLX17,LL46),LL9)),LL1))))))),Methanosarcina);
(((WG22,((WG43,((WG74,WG481),LL18)),WG21)),(((((LLX17,LL46),LL9),(LLX12A,((LLX3,WG26),(LL43F,WG42)))),LL1),((((WG56,(WG16,LL4)),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((LL13,LL37),((((LL8,LL12),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((LL14,WG36),(WG27,WG14))))),WG28))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((LL14,WG36),(WG27,WG14)))),(WG28,((WG43,(((WG74,WG481),LL18),(WG21,WG22))),(((LL43F,((LLX17,LL46),LL9)),(LLX12A,((LLX3,WG26),WG42))),LL1)))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,(((LL5,WG58A),LL24),WG23A)),((((LL13,LL37),((((LL12,LL8),LL41B),((WG49,(WG40,WG58B)),(WG34B,(WG44,WG59)))),((LL14,WG36),(WG27,WG14)))),(WG28,((WG43,(((WG74,WG481),LL18),(WG21,WG22))),(((LL46,LLX17),LL9),(LL1,(((LLX3,WG26),(LL43F,WG42)),LLX12A)))))),(WG56,(WG16,LL4)))),Methanosarcina);
((LLX12A,((LL43F,(((WG28,((((WG56,(WG16,LL4)),(LL41A,(((LL5,WG58A),WG23A),LL24))),((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG49,(WG44,WG59))))),((LL14,WG36),(WG27,WG14))))),(WG43,(((WG74,WG481),LL18),(WG21,WG22))))),((LLX17,LL46),LL9)),LL1)),((LLX3,WG26),WG42))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL24,(LL41A,((LL5,WG58A),WG23A)))),(((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG49,(WG44,WG59))))),((LL14,WG36),(WG27,WG14)))),(((((LL46,LLX17),LL9),(LL1,((((LLX3,WG26),WG42),LLX12A),LL43F))),(WG43,(LL18,(WG481,(WG74,(WG21,WG22)))))),WG28))),Methanosarcina);
((WG28,((((WG56,(WG16,LL4)),(LL24,(LL41A,((WG23A,LL5),WG58A)))),(((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37)))),((LL1,(((((LLX3,WG26),WG42),LLX12A),LL43F),((LL46,LLX17),LL9))),((WG481,WG74),(((WG21,WG22),LL18),WG43))))),Methanosarcina);
(((WG56,(WG16,LL4)),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((WG49,(WG59,((((LL12,(LL8,LL41B)),(WG40,WG58B)),WG34B),WG44))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))),((((LL1,((((LLX3,WG26),WG42),LLX12A),LL43F)),((LL46,LLX17),LL9)),(WG43,(LL18,((WG481,WG74),(WG21,WG22))))),WG28)))),Methanosarcina);
((((LL1,(((((LLX3,WG26),WG42),LLX12A),LL43F),((LLX17,LL46),LL9))),WG28),(((WG481,WG74),((WG21,WG22),(WG43,LL18))),(((WG56,(WG16,LL4)),(LL41A,((WG58A,WG23A),(LL24,LL5)))),((((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B)),(LL12,(LL8,LL41B))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37)))))),Methanosarcina);
(((((LL5,WG23A),WG58A),(LL41A,LL24)),((WG56,(WG16,LL4)),((WG28,((WG74,(WG481,((WG43,(WG22,WG21)),LL18))),(LL1,(((((LL9,(LLX17,LL46)),LL43F),WG42),LLX12A),(WG26,LLX3))))),((((WG34B,(WG44,(WG59,WG49))),(WG58B,WG40)),((LL12,LL8),LL41B)),(((WG27,WG14),(WG36,LL14)),(LL37,LL13)))))),Methanosarcina);
(((WG74,(WG481,(WG43,((WG22,WG21),LL18)))),((LLX12A,(((WG26,LLX3),(LL43F,(WG42,((LLX17,LL46),LL9)))),LL1)),((((((WG34B,(WG44,WG59)),(WG58B,(WG49,WG40))),((LL12,LL8),LL41B)),(((WG27,WG14),(WG36,LL14)),(LL37,LL13))),((LL41A,(LL24,((LL5,WG23A),WG58A))),(WG56,(WG16,LL4)))),WG28))),Methanosarcina);
(((WG74,(WG481,(LL18,(WG43,(WG22,WG21))))),((LL1,((WG26,LLX3),(LLX12A,(LL43F,(WG42,((LL46,LLX17),LL9)))))),((((LL37,LL13),(LL14,((((((LL12,LL8),LL41B),((WG34B,(WG44,WG59)),(WG58B,(WG49,WG40)))),WG27),WG14),WG36))),((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(WG56,(WG16,LL4)))),WG28))),Methanosarcina);
((((LL41A,((WG23A,WG58A),(LL24,LL5))),(WG56,(WG16,LL4))),(((WG28,(LL1,(LLX12A,((LL43F,(WG42,((LLX17,LL46),LL9))),(WG26,LLX3))))),(WG481,(((WG22,WG21),(LL18,WG43)),WG74))),((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,(WG44,WG59)),(WG58B,(WG49,WG40)))),((WG27,WG14),(WG36,LL14)))))),Methanosarcina);
(((LLX12A,((LL1,(LL43F,(WG42,((LLX17,LL46),LL9)))),(WG26,LLX3))),((((WG43,(((WG74,(WG22,WG21)),WG481),LL18)),((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((WG27,WG14),(WG36,LL14))))),((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(WG56,(WG16,LL4)))),WG28)),Methanosarcina);
((LLX12A,(((WG42,(((LLX17,LL46),LL9),LL43F)),(WG26,(LL1,LLX3))),(((WG22,(WG21,(LL18,(WG43,(WG481,WG74))))),(((((LL12,LL8),LL41B),(((WG44,(WG59,WG34B)),WG49),(WG58B,WG40))),(((WG36,(WG14,WG27)),LL14),(LL37,LL13))),((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(WG56,(WG16,LL4))))),WG28))),Methanosarcina);
((((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(WG56,(WG16,LL4))),((WG28,(((((LL43F,LLX12A),(WG42,((LLX17,LL46),LL9))),(WG26,LLX3)),LL1),(WG43,(WG481,((WG74,(WG22,WG21)),LL18))))),((LL37,LL13),(((WG14,((((LL12,LL8),LL41B),((((WG44,WG59),WG49),WG34B),(WG58B,WG40))),WG27)),WG36),LL14)))),Methanosarcina);
(((((LL46,LLX17),LL9),(LL1,(LLX12A,((WG42,LL43F),(WG26,LLX3))))),((WG481,(WG74,((WG43,LL18),(WG22,WG21)))),((((((LL12,LL8),LL41B),(((WG44,(WG59,WG49)),WG34B),(WG58B,WG40))),((WG27,((WG36,LL14),WG14)),(LL37,LL13))),((LL41A,(LL24,(WG58A,(LL5,WG23A)))),(WG56,(WG16,LL4)))),WG28))),Methanosarcina);
((WG28,(((((LL46,LLX17),LL9),(LLX12A,((WG42,LL43F),(WG26,(LL1,LLX3))))),(WG43,(LL18,(((WG22,WG21),WG74),WG481)))),((((LL12,(LL8,LL41B)),((((WG44,WG59),WG34B),WG49),(WG58B,WG40))),((LL14,((WG27,WG14),WG36)),(LL37,LL13))),((LL41A,(((LL24,LL5),WG23A),WG58A)),(WG56,(WG16,LL4)))))),Methanosarcina);
((LL41A,(((WG56,(WG16,LL4)),((WG28,(((((LL46,LLX17),LL9),((LLX12A,(WG42,(WG26,LLX3))),LL43F)),LL1),((WG74,WG481),(LL18,((WG22,WG21),WG43))))),((LL37,LL13),(((LL41B,(LL12,LL8)),((WG34B,(WG49,(WG44,WG59))),(WG58B,WG40))),((WG27,WG14),(WG36,LL14)))))),((LL5,(WG23A,WG58A)),LL24))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((WG28,((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),(((LL1,((LL9,(LL46,LLX17)),LL43F)),(LLX3,(WG42,WG26))),LLX12A))),(((LL41B,(LL12,LL8)),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((LL13,LL37),((LL14,WG36),(WG14,WG27))))),(WG56,(WG16,LL4)))),Methanosarcina);
((((((LLX3,WG26),LL1),(WG42,(((LLX17,LL46),LL9),LL43F))),LLX12A),(((((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG44,WG59),WG49)))),((LL13,LL37),((LL14,WG36),(WG14,WG27)))),((WG56,(WG16,LL4)),(LL41A,((WG23A,(WG58A,LL5)),LL24)))),WG28),(WG481,(WG74,((WG21,WG22),(WG43,LL18)))))),Methanosarcina);
(((((LL13,LL37),(((LL14,WG36),(WG14,WG27)),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG44,WG59),WG49)))))),((WG56,(WG16,LL4)),(((WG23A,(WG58A,LL5)),LL24),LL41A))),(WG28,((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),((((LLX3,WG26),((WG42,LL43F),LLX12A)),LL1),((LLX17,LL46),LL9))))),Methanosarcina);
(((((LL24,LL5),(WG23A,WG58A)),LL41A),(((WG28,((WG481,(WG74,(LL18,((WG21,WG22),WG43)))),((((LLX12A,((LLX3,WG26),WG42)),LL43F),LL1),((LL46,LLX17),LL9)))),((LL13,LL37),(((LL14,WG36),(WG14,WG27)),(((LL12,LL8),LL41B),((WG40,WG58B),(WG49,(WG34B,(WG44,WG59)))))))),(WG56,(WG16,LL4)))),Methanosarcina);
((((WG28,((WG481,((WG43,LL18),(WG74,(WG21,WG22)))),(LL1,((LL43F,((LL46,LLX17),LL9)),(LLX12A,((LLX3,WG26),WG42)))))),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),((LL13,LL37),((LL14,WG36),(WG14,WG27))))),((WG56,(WG16,LL4)),((LL5,(WG23A,WG58A)),(LL24,LL41A)))),Methanosarcina);
((WG28,(((WG74,((((WG21,WG22),WG43),LL18),WG481)),((((LLX3,WG26),(LL43F,(((LL46,LLX17),LL9),WG42))),LLX12A),LL1)),(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((LL13,LL37),((LL14,WG36),(WG14,WG27)))),((WG56,(WG16,LL4)),(LL41A,((WG58A,(LL5,WG23A)),LL24)))))),Methanosarcina);
(((WG481,(WG74,((WG21,WG22),(WG43,LL18)))),((LLX12A,(((LL1,LLX3),WG26),(LL43F,(((LLX17,LL46),LL9),WG42)))),((((((LL12,LL8),LL41B),(WG58B,((WG34B,(WG44,(WG49,WG59))),WG40))),((LL13,LL37),(LL14,(WG36,(WG14,WG27))))),((WG56,(WG16,LL4)),(LL41A,((LL5,(WG23A,WG58A)),LL24)))),WG28))),Methanosarcina);
((((LL5,(WG23A,WG58A)),(LL24,LL41A)),((((WG28,(LLX12A,(((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42))),LL1))),((WG481,(WG43,LL18)),(WG74,(WG21,WG22)))),((LL13,LL37),(((WG14,(LL14,WG36)),WG27),(((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B)))))),(WG56,(WG16,LL4)))),Methanosarcina);
((((WG58A,(LL5,WG23A)),(LL24,LL41A)),(((WG28,((LLX12A,((LL1,(LL43F,((LLX17,LL46),LL9))),(WG42,(LLX3,WG26)))),(WG22,(((WG481,(WG43,LL18)),WG74),WG21)))),((WG49,(WG59,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),WG44))),((LL13,LL37),(LL14,(WG36,(WG27,WG14)))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG481,((WG43,LL18),(WG74,(WG21,WG22)))),(((((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(WG49,(WG59,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),WG44))))),((WG56,(WG16,LL4)),((LL24,(LL5,(WG23A,WG58A))),LL41A))),WG28),(LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),(WG42,(LLX3,WG26)))))),Methanosarcina);
((((LL13,LL37),((WG44,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),(WG59,WG49))),(LL14,(WG36,(WG27,WG14))))),(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(WG56,(WG16,LL4))),(WG28,((LL1,(LLX3,(WG26,(LLX12A,(LL43F,(((LLX17,LL46),LL9),WG42)))))),(((WG74,WG481),(LL18,(WG21,WG22))),WG43))))),Methanosarcina);
(((WG28,((LL1,((LL43F,((LLX17,LL46),LL9)),(LLX12A,(WG42,(LLX3,WG26))))),(((WG21,WG22),((WG74,WG481),LL18)),WG43))),(((((LL8,LL12),LL41B),((WG58B,WG40),(WG34B,((WG59,WG49),WG44)))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37))),((LL41A,(LL24,(WG23A,(WG58A,LL5)))),(WG56,(WG16,LL4))))),Methanosarcina);
(((LL41A,(LL24,(WG58A,(LL5,WG23A)))),((WG56,(WG16,LL4)),((WG28,((((LL46,LLX17),LL9),(((LLX12A,(WG42,(LLX3,WG26))),LL43F),LL1)),(WG74,(WG481,(LL18,(WG43,(WG21,WG22))))))),((WG49,((WG44,((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B)),WG59)),(((WG27,WG14),(LL14,WG36)),(LL13,LL37)))))),Methanosarcina);
((LLX12A,(((WG42,WG26),((LL43F,(LLX3,LL1)),((LLX17,LL46),LL9))),((WG43,(((WG74,WG481),(WG21,WG22)),LL18)),((((LL13,LL37),(((LL12,(LL8,LL41B)),((WG58B,WG40),((WG34B,(WG59,WG44)),WG49))),((WG27,WG14),(LL14,WG36)))),((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(WG56,(WG16,LL4)))),WG28)))),Methanosarcina);
(((WG56,(WG16,LL4)),(((WG28,((((LLX17,LL46),LL9),((((WG42,LLX12A),(LLX3,WG26)),LL43F),LL1)),(WG43,(((WG74,WG481),(WG21,WG22)),LL18)))),((WG49,(WG59,(WG44,(((LL41B,(LL12,LL8)),(WG58B,WG40)),WG34B)))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37)))),(LL41A,(LL24,(LL5,(WG23A,WG58A)))))),Methanosarcina);
(((LL41A,(LL24,((LL5,WG23A),WG58A))),((WG56,(WG16,LL4)),((WG28,((((LL46,LLX17),LL9),((LL43F,(LLX12A,(WG42,(LLX3,WG26)))),LL1)),(WG43,(LL18,((WG74,(WG21,WG22)),WG481))))),(((LL12,(LL8,LL41B)),((WG58B,WG40),(WG49,(WG34B,(WG59,WG44))))),(((WG27,WG14),(LL14,WG36)),(LL13,LL37)))))),Methanosarcina);
(((((WG74,WG481),((WG21,WG22),LL18)),WG43),(((((LL13,LL37),((WG49,(WG59,(WG44,((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B)))),((WG27,WG14),(LL14,WG36)))),(((LL5,(WG23A,WG58A)),(LL41A,LL24)),(WG56,(WG16,LL4)))),WG28),(((LL46,LLX17),LL9),((LL43F,(LLX12A,(WG42,(LLX3,WG26)))),LL1)))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),((WG56,(WG16,LL4)),((WG28,((LLX12A,((LL1,(((LLX17,LL46),LL9),LL43F)),(LLX3,(WG42,WG26)))),(WG481,((WG43,LL18),(WG74,(WG21,WG22)))))),((WG27,(WG14,(LL14,WG36))),((LL13,LL37),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44))))))))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),((WG56,(WG16,LL4)),((WG28,(((((LLX17,LL46),LL9),LL43F),(((WG42,(WG26,LLX3)),LLX12A),LL1)),(WG481,(WG74,(LL18,((WG21,WG22),WG43)))))),((WG49,(WG59,(WG44,((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B)))),((LL13,LL37),(LL14,((WG27,WG14),WG36))))))),Methanosarcina);
((WG28,((((LL1,((LLX17,LL46),LL9)),((LLX12A,(WG42,(WG26,LLX3))),LL43F)),(((LL18,(WG21,WG22)),(WG481,WG74)),WG43)),(((WG49,(WG59,(WG44,((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B)))),((LL13,LL37),(WG27,(WG14,(WG36,LL14))))),((LL41A,(LL24,(WG58A,(LL5,WG23A)))),(WG56,(WG16,LL4)))))),Methanosarcina);
(((WG43,(LL18,((WG74,(WG22,WG21)),WG481))),((((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4))),((LL13,LL37),((WG44,((WG49,WG59),((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B))),((LL14,WG36),(WG14,WG27))))),(WG28,(LL1,(((WG42,(LLX3,WG26)),(LL43F,LLX12A)),((LLX17,LL46),LL9)))))),Methanosarcina);
((LLX12A,((((WG43,(LL18,((WG74,(WG22,WG21)),WG481))),(((LL41A,(WG58A,(WG23A,(LL5,LL24)))),(WG56,(WG16,LL4))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL14,WG36),(WG14,WG27)))))),WG28),(((LL43F,(WG42,((LL46,LLX17),LL9))),(LLX3,WG26)),LL1))),Methanosarcina);
(((WG28,(((((LL43F,(WG42,((LLX17,LL46),LL9))),(LLX3,WG26)),LL1),LLX12A),((WG22,WG21),((WG481,(WG43,LL18)),WG74)))),(((((WG23A,LL5),WG58A),(LL24,LL41A)),(WG56,(WG16,LL4))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL14,WG36),(WG14,WG27)))))),Methanosarcina);
(((WG56,(WG16,LL4)),((((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))),(WG28,((((WG42,(((LLX17,LL46),LL9),LL43F)),((LL1,LLX3),WG26)),LLX12A),(WG43,(LL18,((WG22,WG21),(WG74,WG481))))))),((LL5,(WG58A,WG23A)),(LL24,LL41A)))),Methanosarcina);
((LLX12A,(((WG42,(LLX3,WG26)),((LL1,((LLX17,LL46),LL9)),LL43F)),((WG481,(((WG43,LL18),(WG22,WG21)),WG74)),((((((LL24,LL5),(WG58A,WG23A)),LL41A),(WG56,(WG16,LL4))),((LL13,LL37),((((WG34B,(WG44,WG59)),WG49),((LL12,(LL8,LL41B)),(WG58B,WG40))),((WG14,WG27),(LL14,WG36))))),WG28)))),Methanosarcina);
((WG28,(((((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1)),(((((WG74,WG481),LL18),WG43),WG22),WG21)),(((((LL24,LL5),(WG58A,WG23A)),LL41A),(WG56,(WG16,LL4))),((LL13,LL37),((((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40)),(LL41B,(LL12,LL8))),((WG14,WG27),(LL14,WG36))))))),Methanosarcina);
((((((LL24,LL5),(WG58A,WG23A)),LL41A),(WG56,(WG16,LL4))),(((((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40)),(LL41B,(LL12,LL8))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))),(WG28,((((LLX17,LL46),LL9),(((LLX12A,(WG42,(LLX3,WG26))),LL43F),LL1)),((WG22,WG21),((WG74,WG481),(LL18,WG43))))))),Methanosarcina);
((LLX12A,((((LL43F,WG42),(LLX3,WG26)),(LL1,((LLX17,LL46),LL9))),((WG43,((WG22,WG21),((WG74,WG481),LL18))),((((((LL5,(WG58A,WG23A)),LL41A),LL24),(WG56,(WG16,LL4))),((((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40)),((LL12,LL8),LL41B)),((LL14,(WG36,(WG14,WG27))),(LL13,LL37)))),WG28)))),Methanosarcina);
((LLX12A,(((LL43F,WG42),(LLX3,WG26)),(((WG28,((WG74,(WG481,(WG43,(LL18,(WG22,WG21))))),((((LL41A,(WG23A,(LL5,WG58A))),LL24),(WG56,(WG16,LL4))),((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37)))))),LL1),((LL46,LLX17),LL9)))),Methanosarcina);
((((((LL41A,(LL5,(WG58A,WG23A))),LL24),(WG56,(WG16,LL4))),((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37)))),(WG28,((((LLX17,LL46),LL9),(((LL43F,LLX12A),(WG42,(LLX3,WG26))),LL1)),((((WG74,(WG22,WG21)),LL18),WG481),WG43)))),Methanosarcina);
(((((((WG34B,(WG44,WG59)),WG49),(((LL12,LL8),LL41B),(WG58B,WG40))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),((LL41A,((WG58A,(LL5,WG23A)),LL24)),(WG56,(WG16,LL4)))),(WG28,(((WG74,(WG21,WG22)),(WG481,(WG43,LL18))),((LL9,(LLX17,LL46)),(((LLX12A,((LLX3,WG26),WG42)),LL43F),LL1))))),Methanosarcina);
(((LLX12A,((WG26,WG42),((LLX3,LL1),(LL43F,((LLX17,LL46),LL9))))),(WG28,((((WG49,((WG44,WG59),((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))),(((((WG23A,LL5),WG58A),LL24),LL41A),(WG56,(WG16,LL4)))),((LL18,((WG74,(WG21,WG22)),WG481)),WG43)))),Methanosarcina);
((((((WG23A,LL5),WG58A),(LL24,LL41A)),(WG56,(WG16,LL4))),(((WG49,(WG40,(((WG34B,(WG59,WG44)),((LL12,LL8),LL41B)),WG58B))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),(((LL1,(((LL46,LLX17),LL9),(LLX12A,((LLX3,WG26),(LL43F,WG42))))),(((WG21,WG22),((WG481,WG74),LL18)),WG43)),WG28))),Methanosarcina);
((LLX12A,(((LLX3,((((((WG43,LL18),(WG21,WG22)),WG481),WG74),(WG28,(((LL41A,((WG23A,(LL5,WG58A)),LL24)),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37)))))),LL1)),WG26),(LL43F,(WG42,((LL46,LLX17),LL9))))),Methanosarcina);
(((((LL41A,(((WG23A,LL24),LL5),WG58A)),(WG56,(WG16,LL4))),((WG49,(WG59,(WG44,((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B)))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37)))),(((LLX12A,((LL1,(((LLX17,LL46),LL9),LL43F)),((LLX3,WG26),WG42))),(WG43,((WG481,((WG21,WG22),WG74)),LL18))),WG28)),Methanosarcina);
(((WG43,(((WG21,WG22),(WG74,WG481)),LL18)),((WG28,((((WG23A,(LL5,WG58A)),(LL24,LL41A)),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG59,WG44),WG49)))),((WG27,(WG14,(LL14,WG36))),(LL13,LL37))))),(LLX12A,(((LLX3,WG26),((WG42,((LL46,LLX17),LL9)),LL43F)),LL1)))),Methanosarcina);
(((((LL24,LL5),(WG58A,WG23A)),LL41A),((WG56,(WG16,LL4)),(((WG44,((WG49,WG59),((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))),(((((LLX12A,((LLX3,WG26),(WG42,LL43F))),LL1),((LL46,LLX17),LL9)),(WG43,(LL18,(((WG21,WG22),WG74),WG481)))),WG28)))),Methanosarcina);
((((((((LLX12A,((LLX3,WG26),WG42)),LL43F),LL1),((LL46,LLX17),LL9)),(WG43,(LL18,((WG21,WG22),(WG74,WG481))))),WG28),(((((WG23A,(LL5,WG58A)),LL41A),LL24),(WG56,(WG16,LL4))),((LL13,LL37),((WG49,(WG59,((WG44,(((LL12,LL8),LL41B),(WG58B,WG40))),WG34B))),((LL14,WG36),(WG27,WG14)))))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))),(((LLX12A,(((LLX3,WG26),WG42),(LL1,(((LLX17,LL46),LL9),LL43F)))),(WG43,((WG21,WG22),((WG74,WG481),LL18)))),WG28)),((((WG23A,(LL5,WG58A)),LL24),LL41A),(WG56,(WG16,LL4)))),Methanosarcina);
(((((WG49,(WG59,(WG44,(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B)))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))),(((LLX12A,((WG26,WG42),((LLX3,LL1),(((LLX17,LL46),LL9),LL43F)))),(WG481,(((LL18,(WG21,WG22)),WG43),WG74))),WG28)),((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(WG16,LL4)))),Methanosarcina);
(((((LL13,LL37),(((LL41B,(LL8,LL12)),((WG40,WG58B),(WG34B,((WG59,WG49),WG44)))),((WG36,LL14),(WG14,WG27)))),(((WG58A,((LL24,LL5),WG23A)),LL41A),(WG56,(WG16,LL4)))),(WG28,((((WG74,WG481),(LL18,(WG21,WG22))),WG43),(LLX12A,(((LL9,(LLX17,LL46)),LL1),((LL43F,WG42),(LLX3,WG26))))))),Methanosarcina);
(((((LL18,(WG43,(WG21,WG22))),WG74),WG481),(((LL43F,(LL9,(LLX17,LL46))),(LL1,(LLX12A,(WG42,(LLX3,WG26))))),((((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG59,WG49),WG44)))),((WG36,LL14),(WG14,WG27)))),((((LL5,(WG23A,WG58A)),LL24),LL41A),(WG56,(WG16,LL4)))),WG28))),Methanosarcina);
(((LL1,((LLX3,WG26),((LL43F,(((LLX17,LL46),LL9),WG42)),LLX12A))),(WG28,((((WG44,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),(WG59,WG49))),(((WG36,LL14),(WG14,WG27)),(LL13,LL37))),(((((WG23A,LL5),WG58A),LL24),LL41A),(WG56,(WG16,LL4)))),(WG481,((WG43,(LL18,(WG21,WG22))),WG74))))),Methanosarcina);
((WG28,((((((LL12,LL8),LL41B),(((WG34B,((WG59,WG49),WG44)),WG40),WG58B)),((LL13,LL37),(LL14,(WG36,(WG14,WG27))))),((((LL24,LL5),(WG58A,WG23A)),LL41A),(WG56,(WG16,LL4)))),((WG43,(((WG74,WG481),LL18),(WG21,WG22))),(((LL46,LLX17),LL9),(LL1,(LL43F,((WG42,LLX12A),(LLX3,WG26)))))))),Methanosarcina);
((LLX12A,(((((WG28,((((WG34B,((WG59,WG49),WG44)),((WG40,WG58B),((LL12,LL8),LL41B))),((LL13,LL37),((WG14,WG27),(LL14,WG36)))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))))),(WG43,(LL18,((WG21,WG22),(WG74,WG481))))),((LL46,LLX17),LL9)),LL1),((WG42,(LLX3,WG26)),LL43F))),Methanosarcina);
((((WG28,(((LL13,LL37),(((WG14,WG27),(LL14,WG36)),((WG34B,(WG59,WG44)),(((WG49,WG40),WG58B),(LL12,(LL8,LL41B)))))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))))),((WG74,WG481),((WG43,LL18),(WG21,WG22)))),(((LL46,LLX17),LL9),(LL1,((LLX12A,(WG42,(LLX3,WG26))),LL43F)))),Methanosarcina);
(((WG16,LL4),((((((WG43,(LL18,(((WG21,WG22),WG74),WG481))),(LLX12A,((WG42,(LLX3,WG26)),((LL43F,((LL46,LLX17),LL9)),LL1)))),WG28),((LL13,LL37),(LL14,(WG36,(((LL12,(LL8,LL41B)),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),(WG14,WG27)))))),(LL41A,((LL5,(WG58A,WG23A)),LL24))),WG56)),Methanosarcina);
((LLX12A,((WG42,(LLX3,WG26)),(LL43F,((LL1,(WG28,((((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4)))),(WG74,((WG43,(LL18,(WG21,WG22))),WG481))))),((LLX17,LL46),LL9))))),Methanosarcina);
((WG56,((WG16,LL4),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((WG22,(((WG481,(WG43,LL18)),WG74),WG21)),((((LLX17,LL46),LL9),(LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26))))),WG28)),((LL13,LL37),(((WG14,WG27),(((LL12,LL8),LL41B),((WG49,(WG34B,(WG44,WG59))),(WG40,WG58B)))),(LL14,WG36))))))),Methanosarcina);
(((WG28,((((LL13,LL37),((WG49,(WG59,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),WG44))),((LL14,WG36),(WG14,WG27)))),((WG56,(WG16,LL4)),(LL41A,((WG58A,WG23A),(LL24,LL5))))),(WG43,(LL18,((WG74,(WG21,WG22)),WG481))))),((WG42,(LLX3,WG26)),(LLX12A,((LL43F,((LL46,LLX17),LL9)),LL1)))),Methanosarcina);
((((LL43F,(LL9,(LL46,LLX17))),(LL1,(((WG26,LLX3),WG42),LLX12A))),(WG28,((((WG22,WG21),((WG74,WG481),LL18)),WG43),(((LL41A,(((WG58A,WG23A),LL5),LL24)),(WG56,(WG16,LL4))),((LL37,LL13),(((LL14,WG36),(WG14,WG27)),(((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))))))))),Methanosarcina);
(((LL41A,((WG58A,(WG23A,LL5)),LL24)),((WG56,(WG16,LL4)),(((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((LL37,LL13),((LL14,WG36),(WG14,WG27)))),((((WG22,WG21),((WG74,WG481),LL18)),WG43),(WG28,((LL9,(LL46,LLX17)),((((LL43F,(WG26,LLX3)),WG42),LLX12A),LL1))))))),Methanosarcina);
((LLX12A,(((LL43F,(LL1,((LLX17,LL46),LL9))),((WG26,LLX3),WG42)),(((LL18,((WG22,WG21),(WG74,WG481))),WG43),(((((WG23A,(LL5,WG58A)),(LL24,LL41A)),(WG56,(WG16,LL4))),((LL37,LL13),(((LL14,WG36),(WG14,WG27)),(((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B)))))),WG28)))),Methanosarcina);
(((WG28,((((((WG22,WG21),WG74),WG481),LL18),WG43),(((LL41A,((WG23A,(LL5,WG58A)),LL24)),(WG56,(WG16,LL4))),((WG44,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),(WG49,WG59))),((LL37,LL13),((LL14,WG36),(WG14,WG27))))))),(((LLX17,LL46),LL9),((LLX12A,((WG26,LLX3),(LL43F,WG42))),LL1))),Methanosarcina);
(((LL41A,((WG58A,(WG23A,LL5)),LL24)),((WG56,(WG16,LL4)),(((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((LL37,LL13),((LL14,WG36),(WG14,WG27)))),(WG28,((LLX12A,(((WG26,LLX3),(LL43F,WG42)),(LL1,((LLX17,LL46),LL9)))),(((WG22,WG21),((WG74,WG481),LL18)),WG43)))))),Methanosarcina);
(((LLX12A,(((WG26,LLX3),WG42),(LL1,(((LLX17,LL46),LL9),LL43F)))),((WG22,(WG21,((WG74,WG481),(WG43,LL18)))),((((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((LL37,LL13),((LL14,WG36),(WG14,WG27))))),WG28))),Methanosarcina);
((((LL5,(WG58A,WG23A)),(LL24,LL41A)),((WG56,(WG16,LL4)),(((((LL8,LL12),LL41B),((WG34B,(WG49,(WG59,WG44))),(WG40,WG58B))),((LL37,LL13),((LL14,WG36),(WG14,WG27)))),(WG28,((LLX12A,(((WG26,LLX3),((WG42,((LL46,LLX17),LL9)),LL43F)),LL1)),(WG43,(((WG22,WG21),LL18),(WG74,WG481)))))))),Methanosarcina);
((LLX12A,((((WG42,(WG26,LLX3)),(LL1,((LLX17,LL46),LL9))),LL43F),((WG43,(LL18,((WG74,WG481),(WG22,WG21)))),(((((((LL5,LL24),WG23A),WG58A),LL41A),(WG56,(WG16,LL4))),((WG49,(WG59,(WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B)))),((LL37,LL13),(LL14,(WG36,(WG14,WG27)))))),WG28)))),Methanosarcina);
((LLX12A,((((((LLX17,LL46),LL9),LL43F),WG42),(WG26,LLX3)),(LL1,(WG28,((WG74,(WG481,((WG43,(WG22,WG21)),LL18))),((((LL24,((WG23A,WG58A),LL5)),LL41A),(WG56,(WG16,LL4))),(((LL12,(LL8,LL41B)),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((LL37,LL13),(WG27,((LL14,WG36),WG14)))))))))),Methanosarcina);
((LLX12A,(((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42))),(LL1,(WG28,((WG74,(WG481,((WG22,WG21),(LL18,WG43)))),((((LL24,(WG23A,(WG58A,LL5))),LL41A),(WG56,(WG16,LL4))),(((LL14,WG36),(WG14,WG27)),((WG34B,((((LL37,LL13),WG49),WG59),WG44)),((WG40,WG58B),(LL12,(LL8,LL41B))))))))))),Methanosarcina);
(((WG43,(LL18,(((WG21,WG22),WG74),WG481))),((((LL37,LL13),(((WG14,WG27),(LL14,WG36)),((LL41B,(LL12,LL8)),((WG40,WG58B),(WG34B,((WG59,WG49),WG44)))))),((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(WG16,LL4)))),(WG28,(LL1,(LLX12A,((WG26,LLX3),(((LL9,(LL46,LLX17)),WG42),LL43F))))))),Methanosarcina);
((((LL41A,(LL5,(WG58A,WG23A))),LL24),((WG56,(WG16,LL4)),((WG28,((((LL46,LLX17),LL9),(((LLX12A,WG42),WG26),(LL43F,(LL1,LLX3)))),(WG43,(LL18,((WG21,WG22),(WG74,WG481)))))),((LL37,LL13),(((WG14,WG27),(LL14,WG36)),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG59,WG44),WG49))))))))),Methanosarcina);
((((WG56,(WG16,LL4)),(((WG28,(LL1,(LLX3,((LLX12A,((((LLX17,LL46),LL9),LL43F),WG42)),WG26)))),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),((WG14,WG27),(LL14,WG36))))),(LL41A,((WG23A,(LL24,LL5)),WG58A)))),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))),Methanosarcina);
(((((WG28,((WG22,(((WG481,WG74),(WG43,LL18)),WG21)),(((LL43F,WG42),(WG26,LLX3)),((((LLX17,LL46),LL9),LL1),LLX12A)))),((LL37,LL13),((LL14,(WG36,(WG14,WG27))),(WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44)))))),(LL41A,(((WG23A,LL5),WG58A),LL24))),(WG56,(WG16,LL4))),Methanosarcina);
(((((((WG44,WG59),WG49),WG34B),(((LL12,LL8),LL41B),(WG40,WG58B))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))),(WG28,((WG43,((WG74,WG481),(LL18,(WG21,WG22)))),(((LLX17,LL46),LL9),(LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3))))))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG56,(WG16,LL4)),((WG28,((WG43,((WG74,WG481),(LL18,(WG21,WG22)))),(LLX12A,(((LL43F,(((LL46,LLX17),LL9),LL1)),WG42),(WG26,LLX3))))),((((LL12,LL8),LL41B),(((WG49,WG40),WG58B),(WG44,(WG59,WG34B)))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))))),Methanosarcina);
(((LL24,(LL41A,(WG23A,(LL5,WG58A)))),((WG56,(WG16,LL4)),((WG28,((WG74,(WG481,((WG43,LL18),(WG21,WG22)))),(LLX12A,(WG42,((WG26,LLX3),(LL1,(LL43F,((LL46,LLX17),LL9)))))))),((LL37,LL13),((((LL12,LL8),LL41B),((WG40,WG58B),(WG49,(WG44,(WG59,WG34B))))),(WG27,((LL14,WG36),WG14))))))),Methanosarcina);
((WG28,(((WG74,(WG481,(LL18,((WG21,WG22),WG43)))),(((LL46,LLX17),LL9),(LL1,(LL43F,((WG42,(WG26,LLX3)),LLX12A))))),(((LL37,LL13),((WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG40,WG58B))),WG44))),((WG36,(WG14,WG27)),LL14))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4)))))),Methanosarcina);
(((((((((LL12,LL8),LL41B),((WG40,WG58B),((WG44,(WG49,WG59)),WG34B))),((LL37,LL13),((WG14,WG27),(LL14,WG36)))),((LL41A,((WG23A,(LL5,WG58A)),LL24)),(WG56,(WG16,LL4)))),WG28),((WG74,((WG43,LL18),WG481)),(WG21,WG22))),(LL1,((((((LLX17,LL46),LL9),LL43F),WG42),(WG26,LLX3)),LLX12A))),Methanosarcina);
(((((((WG43,LL18),WG481),((WG21,WG22),WG74)),((LL37,LL13),(((WG14,WG27),(LL14,WG36)),(WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG40,WG58B))),WG44)))))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4)))),(((LL1,(((LL43F,WG42),(WG26,LLX3)),LLX12A)),((LL46,LLX17),LL9)),WG28)),Methanosarcina);
((((WG43,(((WG74,WG481),LL18),(WG22,WG21))),(LL1,((LL43F,(LL9,(LLX17,LL46))),((WG42,(LLX3,WG26)),LLX12A)))),((((LL37,LL13),(((WG36,LL14),(WG27,WG14)),(WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))))),(((((WG23A,WG58A),LL5),LL24),LL41A),(WG56,(LL4,WG16)))),WG28)),Methanosarcina);
(((WG43,(LL18,(((WG22,WG21),WG74),WG481))),((WG56,(LL4,WG16)),(((WG28,(LL1,(LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26))))),((LL37,LL13),((LL14,((WG27,WG14),WG36)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))))))),((((WG23A,WG58A),LL5),LL24),LL41A)))),Methanosarcina);
(((((((WG23A,WG58A),LL5),LL24),LL41A),(WG56,(LL4,WG16))),((WG28,((WG43,(LL18,(((WG22,WG21),WG74),WG481))),(LL1,(((LLX17,LL46),LL9),((LLX12A,(WG42,(LLX3,WG26))),LL43F))))),(((LL37,LL13),((WG49,WG59),(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),(LL14,((WG27,WG14),WG36))))),Methanosarcina);
((WG28,(((WG43,((WG74,WG481),(LL18,(WG22,WG21)))),(((LLX17,LL46),LL9),(LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26)))))),(((LL14,(WG36,((WG27,WG14),(((LL12,LL8),LL41B),((WG49,(WG58B,WG40)),(WG34B,(WG59,WG44))))))),(LL37,LL13)),((((WG23A,(WG58A,LL5)),LL24),LL41A),(WG56,(LL4,WG16)))))),Methanosarcina);
((((WG28,((WG43,(LL18,((WG22,WG21),(WG74,WG481)))),(LL1,(LLX12A,(((((LLX17,LL46),LL9),LL43F),WG42),(LLX3,WG26)))))),((((LL12,LL8),LL41B),((WG58B,(WG40,WG49)),(WG34B,(WG59,WG44)))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13)))),((((LL24,LL5),(WG23A,WG58A)),LL41A),(WG56,(LL4,WG16)))),Methanosarcina);
((((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16))),(((WG43,(LL18,(((WG22,WG21),WG74),WG481))),((LLX12A,(((LL1,((LLX17,LL46),LL9)),LL43F),(WG42,(LLX3,WG26)))),WG28)),((((LL12,LL8),LL41B),(((WG49,WG59),WG44),(WG34B,(WG58B,WG40)))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13))))),Methanosarcina);
(((LL41A,((WG23A,WG58A),(LL24,LL5))),((WG56,(LL4,WG16)),((WG28,((WG481,((WG43,(LL18,(WG22,WG21))),WG74)),(LLX12A,(((LLX3,WG26),((((LLX17,LL46),LL9),LL43F),WG42)),LL1)))),((LL37,LL13),((((LL12,LL8),LL41B),((WG58B,WG40),(((WG49,WG59),WG44),WG34B))),((LL14,WG36),(WG27,WG14))))))),Methanosarcina);
(((((WG23A,WG58A),LL5),(LL24,LL41A)),((WG56,(LL4,WG16)),((WG28,((WG22,(WG21,(WG43,((WG74,WG481),LL18)))),(((LL46,LLX17),LL9),(((((LLX3,WG26),WG42),LLX12A),LL43F),LL1)))),(((WG34B,(WG49,(WG59,WG44))),(((LL12,LL8),LL41B),(WG58B,WG40))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13)))))),Methanosarcina);
(((((LL46,LLX17),LL9),((((LLX3,WG26),WG42),(LLX12A,LL43F)),LL1)),(((((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),((LL14,(WG36,(WG27,WG14))),(LL37,LL13))),((((WG23A,WG58A),LL5),(LL24,LL41A)),(WG56,(LL4,WG16)))),WG28),(WG22,(WG21,((WG481,(LL18,WG43)),WG74))))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),(((WG27,WG14),(LL14,WG36)),(LL37,LL13))),(((WG58A,(WG23A,(LL5,LL24))),LL41A),(WG56,(LL4,WG16)))),(WG28,((WG43,((WG22,WG21),(LL18,(WG74,WG481)))),(((LLX17,LL46),LL9),((((LLX3,WG26),(LL43F,WG42)),LLX12A),LL1))))),Methanosarcina);
(((LL1,((LL43F,(LL9,(LLX17,LL46))),((WG42,(LLX3,WG26)),LLX12A))),((((WG481,WG74),((WG21,WG22),(WG43,LL18))),(((LL37,LL13),((((WG27,WG14),WG36),LL14),(((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))),((LL41B,LL8),LL12)))),((LL41A,(LL24,(LL5,(WG23A,WG58A)))),((WG16,LL4),WG56)))),WG28)),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(((WG16,LL4),WG56),((WG28,((((LL46,LLX17),LL9),((((LLX3,WG26),WG42),(LLX12A,LL43F)),LL1)),(WG43,((WG22,WG21),(LL18,(WG481,WG74)))))),((LL37,LL13),(((WG27,WG14),(WG36,LL14)),((WG34B,(WG44,(WG49,WG59))),(((LL12,LL8),LL41B),(WG58B,WG40)))))))),Methanosarcina);
((LLX12A,(((((WG481,(WG74,((WG43,(WG22,WG21)),LL18))),((((LL37,LL13),(LL14,(((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(WG27,WG14)),WG36))),((LL41A,(LL24,(WG23A,(LL5,WG58A)))),((WG16,LL4),WG56))),WG28)),LL1),(LL43F,((LL46,LLX17),LL9))),((LLX3,WG26),WG42))),Methanosarcina);
((((LL41A,(((LL24,LL5),WG23A),WG58A)),((WG16,LL4),WG56)),((WG28,((LLX12A,((LL43F,(LL1,((LLX17,LL46),LL9))),((LLX3,WG26),WG42))),(WG22,(WG21,((LL18,WG43),(WG481,WG74)))))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(((WG27,WG14),(WG36,LL14)),(LL37,LL13))))),Methanosarcina);
((WG28,(((LLX12A,((LL1,((LL46,LLX17),LL9)),((LLX3,WG26),(LL43F,WG42)))),((WG481,WG74),(((WG22,WG21),LL18),WG43))),(((((LL12,LL8),LL41B),(WG58B,(WG40,(WG34B,(WG44,(WG49,WG59)))))),(((WG27,WG14),(WG36,LL14)),(LL37,LL13))),(((((WG23A,LL5),WG58A),LL24),LL41A),((WG16,LL4),WG56))))),Methanosarcina);
((((((((LL12,LL8),LL41B),((WG34B,(WG49,(WG59,WG44))),(WG58B,WG40))),((WG36,(LL14,(WG27,WG14))),(LL37,LL13))),(((((WG23A,LL5),WG58A),LL24),LL41A),((WG16,LL4),WG56))),WG28),(((((LL43F,(WG42,((LLX17,LL46),LL9))),(LLX3,WG26)),LLX12A),LL1),(WG43,((WG481,(WG74,(WG22,WG21))),LL18)))),Methanosarcina);
((WG56,((((WG28,((((LLX17,LL46),LL9),(((WG42,(LLX3,WG26)),LL1),(LLX12A,LL43F))),(WG481,(WG74,((LL18,WG43),(WG22,WG21)))))),((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((WG27,WG14),(WG36,LL14))))),(LL41A,(((WG23A,LL5),WG58A),LL24))),(WG16,LL4))),Methanosarcina);
((((WG28,((((LLX17,LL46),LL9),((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1)),(WG43,(LL18,((WG22,WG21),(WG481,WG74)))))),((LL37,LL13),((WG34B,((WG44,(WG49,WG59)),((WG58B,WG40),((LL12,LL8),LL41B)))),(LL14,((WG27,WG14),WG36))))),((LL41A,((LL24,LL5),(WG58A,WG23A))),((WG16,LL4),WG56))),Methanosarcina);
((WG56,((((WG28,(((((WG42,(LLX3,WG26)),LLX12A),LL43F),(LL1,((LLX17,LL46),LL9))),(WG74,(((WG43,LL18),(WG22,WG21)),WG481)))),((WG44,((WG49,WG59),(((WG58B,WG40),((LL8,LL12),LL41B)),WG34B))),(((WG27,WG14),(WG36,LL14)),(LL37,LL13)))),(LL41A,((WG23A,(LL5,WG58A)),LL24))),(WG16,LL4))),Methanosarcina);
(((((LL1,(LLX12A,(WG42,(LLX3,WG26)))),(LL43F,(LLX17,(LL46,LL9)))),((LL18,((WG74,(WG22,WG21)),WG481)),WG43)),(((((WG27,WG14),(WG36,LL14)),((LL37,LL13),(WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))))),((LL41A,((WG23A,(LL5,WG58A)),LL24)),((WG16,LL4),WG56))),WG28)),Methanosarcina);
((((((WG58A,WG23A),LL5),LL24),LL41A),(((WG16,LL4),WG56),((WG28,((WG43,(LL18,((WG481,WG74),(WG21,WG22)))),(LL1,(LLX12A,((WG42,(WG26,LLX3)),((LL9,(LL46,LLX17)),LL43F)))))),(((LL12,(LL8,LL41B)),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(((LL14,WG36),(WG14,WG27)),(LL13,LL37)))))),Methanosarcina);
(((WG74,(((WG21,WG22),(WG43,LL18)),WG481)),(((LL9,(LL46,LLX17)),((LLX12A,((LL43F,WG42),(WG26,LLX3))),LL1)),((((LL13,LL37),(((((WG34B,(WG44,WG59)),WG49),(WG58B,WG40)),(LL41B,(LL8,LL12))),(WG27,((LL14,WG36),WG14)))),(((((WG58A,WG23A),LL5),LL24),LL41A),((WG16,LL4),WG56))),WG28))),Methanosarcina);
((((LL43F,((LL46,LLX17),LL9)),((LLX12A,(WG42,(WG26,LLX3))),LL1)),(((WG74,(((WG21,WG22),(WG43,LL18)),WG481)),(((LL13,LL37),(((WG34B,(WG44,(WG49,WG59))),((WG58B,WG40),((LL12,LL8),LL41B))),(WG27,((LL14,WG36),WG14)))),(((((WG58A,WG23A),LL5),LL24),LL41A),((WG16,LL4),WG56)))),WG28)),Methanosarcina);
((LLX12A,((WG42,(WG26,LLX3)),((LL1,(((WG74,((LL18,((WG21,WG22),WG43)),WG481)),(((LL13,LL37),(((WG34B,(WG44,(WG49,WG59))),((WG58B,WG40),((LL12,LL8),LL41B))),(WG27,((LL14,WG36),WG14)))),(WG28,(((WG58A,(WG23A,(LL24,LL5))),LL41A),((WG16,LL4),WG56))))),((LLX17,LL46),LL9))),LL43F))),Methanosarcina);
(((((LL24,LL5),(WG58A,WG23A)),LL41A),(((WG16,LL4),WG56),(((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),(((LL14,WG36),(WG14,WG27)),(LL13,LL37))),((((LL46,LLX17),LL9),(((((LL18,WG43),((WG74,(WG21,WG22)),WG481)),LLX12A),((LL43F,WG42),(WG26,LLX3))),LL1)),WG28)))),Methanosarcina);
((((LL13,LL37),(LL14,(WG36,((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),(WG14,WG27))))),((((((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(WG26,LLX3))),LL1)),(WG22,(((WG481,WG74),(LL18,WG43)),WG21))),WG28),((((WG23A,(LL5,LL24)),WG58A),LL41A),((WG16,LL4),WG56)))),Methanosarcina);
(((((WG74,(((LL18,WG43),(WG21,WG22)),WG481)),((LL13,LL37),((WG44,((WG49,WG59),(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B))),((WG14,WG27),(LL14,WG36))))),(((((WG23A,LL5),WG58A),LL24),LL41A),((WG16,LL4),WG56))),(((((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42))),LLX12A),LL1),WG28)),Methanosarcina);
((((WG16,LL4),WG56),(((((WG481,(WG74,((LL18,WG43),(WG21,WG22)))),(LLX12A,((WG26,LLX3),(LL1,(WG42,(LL43F,((LLX17,LL46),LL9))))))),WG28),((LL13,LL37),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((WG14,WG27),(LL14,WG36))))),(((WG23A,(LL5,WG58A)),LL24),LL41A))),Methanosarcina);
(((((WG481,(WG74,((LL18,WG43),(WG21,WG22)))),(LLX12A,(((WG42,WG26),LLX3),(LL43F,(LL1,((LLX17,LL46),LL9)))))),WG28),(((((LL12,LL8),LL41B),((WG34B,(WG44,WG59)),(WG49,(WG58B,WG40)))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),((((LL5,(WG58A,WG23A)),LL24),LL41A),((WG16,LL4),WG56)))),Methanosarcina);
((((((LL12,(LL8,LL41B)),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))),(((WG58A,((WG23A,LL5),LL24)),LL41A),((WG16,LL4),WG56))),(((WG43,(((WG21,WG22),(WG481,WG74)),LL18)),(((LLX12A,(WG42,(WG26,LLX3))),(LL43F,((LLX17,LL46),LL9))),LL1)),WG28)),Methanosarcina);
(((LL41A,(LL24,((WG23A,LL5),WG58A))),((WG56,(WG16,LL4)),(((LL37,LL13),(LL14,(WG36,((((((LL8,LL12),LL41B),(WG40,WG58B)),(((WG59,WG44),WG34B),WG49)),WG27),WG14)))),(WG28,((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),(((LLX17,LL46),LL9),((LL43F,(LLX12A,(WG42,(LLX3,WG26)))),LL1))))))),Methanosarcina);
((((((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42))),LLX12A),LL1),(((((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(WG16,LL4))),(((WG34B,(WG49,(WG59,WG44))),(((LL12,LL8),LL41B),(WG40,WG58B))),(((WG27,WG14),(LL14,WG36)),(LL37,LL13)))),WG28),(WG43,((WG481,LL18),(WG74,(WG21,WG22)))))),Methanosarcina);
(((WG16,LL4),(((((((LL12,LL8),LL41B),(((WG49,WG40),WG58B),((WG59,WG44),WG34B))),(((WG27,WG14),(LL14,WG36)),(LL37,LL13))),(WG28,((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),((((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42))),LLX12A),LL1)))),(LL41A,((LL5,(WG58A,WG23A)),LL24))),WG56)),Methanosarcina);
((((((WG23A,LL5),WG58A),LL24),LL41A),((WG56,(WG16,LL4)),((((((WG49,WG59),WG44),WG34B),(((LL12,LL8),LL41B),(WG40,WG58B))),(((WG27,WG14),(LL14,WG36)),(LL37,LL13))),(WG28,(((WG481,WG74),((WG43,(WG21,WG22)),LL18)),(LLX12A,(LL1,((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42)))))))))),Methanosarcina);
(((((((((((LL24,LL5),(WG58A,WG23A)),LL41A),(WG56,(WG16,LL4))),((LL37,LL13),((WG49,(WG59,(WG44,(WG34B,(((LL12,LL8),LL41B),(WG40,WG58B)))))),((WG27,WG14),(LL14,WG36))))),WG28),(WG43,((WG21,WG22),(LL18,(WG481,WG74))))),LL1),((LLX17,LL46),LL9)),((LLX12A,(WG42,(LLX3,WG26))),LL43F)),Methanosarcina);
(((WG74,(((WG43,(WG21,WG22)),LL18),WG481)),(((((((LL5,WG23A),WG58A),LL41A),LL24),(WG56,(WG16,LL4))),((WG49,(WG59,(WG44,(WG34B,(((LL12,LL8),LL41B),(WG40,WG58B)))))),(((WG27,WG14),(LL14,WG36)),(LL37,LL13)))),((LLX12A,((((LL43F,((LLX17,LL46),LL9)),WG42),(LLX3,WG26)),LL1)),WG28))),Methanosarcina);
((LLX12A,(((LLX3,WG26),((LL43F,((LLX17,LL46),LL9)),WG42)),(((WG28,(((((WG23A,(LL5,LL24)),WG58A),LL41A),(WG56,(WG16,LL4))),((LL37,LL13),((((LL12,LL8),LL41B),((WG40,WG58B),(((WG49,WG59),WG44),WG34B))),((WG27,WG14),(LL14,WG36)))))),((WG43,((WG21,WG22),LL18)),(WG481,WG74))),LL1))),Methanosarcina);
((WG28,((((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),((WG40,WG58B),(((WG49,WG59),WG44),WG34B))),((LL14,(WG36,(WG27,WG14))),(LL37,LL13)))),((WG43,((WG21,WG22),((WG481,WG74),LL18))),((LLX12A,(((LL1,LLX3),WG26),(LL43F,WG42))),((LLX17,LL46),LL9))))),Methanosarcina);
((((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(WG16,LL4))),((((((WG49,WG59),WG44),WG34B),(((LL12,LL8),LL41B),(WG40,WG58B))),(((WG27,WG14),(LL14,WG36)),(LL37,LL13))),((WG22,((((WG43,WG481),LL18),WG74),WG21)),(WG28,(((LLX12A,((LLX3,WG26),(LL43F,WG42))),LL1),((LLX17,LL46),LL9)))))),Methanosarcina);
(((WG43,((LL18,(WG481,WG74)),(WG21,WG22))),(((((((WG23A,(LL5,WG58A)),LL24),LL41A),(WG56,(WG16,LL4))),((LL37,LL13),((((LL12,LL8),LL41B),((WG40,WG58B),(((WG59,WG44),WG34B),WG49))),((WG27,WG14),(LL14,WG36))))),WG28),(((LLX12A,((LLX3,WG26),(LL43F,WG42))),LL1),((LLX17,LL46),LL9)))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((((LLX12A,((LL1,(LL43F,((LLX17,LL46),LL9))),(WG42,(LLX3,WG26)))),(WG43,((WG481,WG74),((WG22,WG21),LL18)))),WG28),((LL37,LL13),((WG44,((WG49,WG59),((((LL8,LL12),LL41B),(WG40,WG58B)),WG34B))),((LL14,WG36),(WG14,WG27))))),((LL4,WG16),WG56))),Methanosarcina);
((((((LLX17,LL46),LL9),LL43F),WG42),(((((WG22,WG21),((WG43,LL18),(WG481,WG74))),(WG28,(((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),((LL14,(WG36,(WG14,WG27))),(LL37,LL13))),(((LL4,WG16),WG56),(LL24,(LL41A,((WG58A,LL5),WG23A))))))),LLX12A),((LL1,LLX3),WG26))),Methanosarcina);
((WG28,((((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),(((LL4,WG16),WG56),(((WG23A,WG58A),(LL24,LL5)),LL41A))),(((((LLX3,WG26),((((LLX17,LL46),LL9),LL43F),WG42)),LLX12A),LL1),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))))),Methanosarcina);
(((((WG58A,(LL5,WG23A)),LL41A),LL24),(((((((WG26,((LL43F,(WG42,((LLX17,LL46),LL9))),LLX3)),LLX12A),LL1),(WG43,((WG22,WG21),(LL18,(WG481,WG74))))),WG28),((LL37,LL13),((((LL12,LL8),LL41B),(WG58B,((WG34B,(WG44,(WG49,WG59))),WG40))),((WG14,WG27),(LL14,WG36))))),((LL4,WG16),WG56))),Methanosarcina);
((WG28,((((WG44,((WG49,WG59),(((WG40,WG58B),WG34B),((LL12,LL8),LL41B)))),((LL14,(WG36,(WG14,WG27))),(LL37,LL13))),(((WG43,((WG481,WG74),((WG22,WG21),LL18))),((LL4,WG16),WG56)),(LL41A,(LL24,(LL5,(WG23A,WG58A)))))),((((LL43F,(WG42,((LL46,LLX17),LL9))),(LLX3,WG26)),LLX12A),LL1))),Methanosarcina);
(((((LL4,WG16),WG56),(LL41A,(LL24,(LL5,(WG23A,WG58A))))),((((WG481,(WG74,((WG22,WG21),(WG43,LL18)))),(LLX12A,((LL43F,(LL1,((LLX17,LL46),LL9))),(WG42,(LLX3,WG26))))),WG28),((LL37,LL13),(((((LL12,LL8),LL41B),(WG58B,(WG49,WG40))),(WG34B,(WG44,WG59))),((LL14,(WG14,WG27)),WG36))))),Methanosarcina);
(((LL41A,(LL24,(WG23A,(WG58A,LL5)))),(((((WG43,((WG22,WG21),((WG481,WG74),LL18))),(((LL46,LLX17),LL9),((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1))),WG28),((LL37,LL13),((WG36,((WG49,(WG59,((((LL12,(LL8,LL41B)),(WG58B,WG40)),WG34B),WG44))),(WG14,WG27))),LL14))),((LL4,WG16),WG56))),Methanosarcina);
((((((WG74,(WG22,WG21)),(WG481,(LL18,WG43))),(((LLX17,LL46),LL9),((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1))),WG28),(((WG49,(WG59,((((LL41B,(LL12,LL8)),(WG58B,WG40)),WG34B),WG44))),((LL37,LL13),(((LL14,WG36),WG14),WG27))),(((LL4,WG16),WG56),(LL41A,(LL24,(LL5,(WG23A,WG58A))))))),Methanosarcina);
(((LL41A,((WG23A,(LL24,LL5)),WG58A)),(((((WG43,(((WG22,WG21),(WG481,WG74)),LL18)),(LLX12A,(LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26))))),WG28),(((((LL12,LL8),LL41B),(WG58B,WG40)),(((WG44,WG59),WG34B),WG49)),((LL37,LL13),(LL14,(WG36,(WG14,WG27)))))),((LL4,WG16),WG56))),Methanosarcina);
((LL41A,(((LL24,LL5),(WG58A,WG23A)),(((((WG43,(((WG22,WG21),(WG481,WG74)),LL18)),(LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),((LL1,LLX3),WG26)))),WG28),((WG49,(WG59,(WG44,((LL12,(LL8,LL41B)),(WG34B,(WG58B,WG40)))))),((LL37,LL13),((WG14,WG27),(LL14,WG36))))),((LL4,WG16),WG56)))),Methanosarcina);
(((((LL24,((WG23A,LL5),WG58A)),LL41A),(WG56,(LL4,WG16))),((WG28,((LL1,(((((LL9,(LL46,LLX17)),WG42),LL43F),(WG26,LLX3)),LLX12A)),((LL18,((WG74,WG481),(WG22,WG21))),WG43))),((LL37,LL13),(((LL14,WG36),(WG14,WG27)),(WG49,(((WG40,WG58B),((LL12,LL8),LL41B)),((WG44,WG59),WG34B))))))),Methanosarcina);
(((((LL24,(LL5,(WG58A,WG23A))),LL41A),(WG56,(LL4,WG16))),((WG28,((((LL9,(LL46,LLX17)),LL1),(((WG42,LL43F),(WG26,LLX3)),LLX12A)),(WG43,((WG74,WG481),((WG22,WG21),LL18))))),((LL37,LL13),(((LL14,WG36),(WG14,WG27)),((LL12,(LL8,LL41B)),(((WG44,(WG49,WG59)),WG34B),(WG40,WG58B))))))),Methanosarcina);
(((WG74,(WG481,((WG22,WG21),(WG43,LL18)))),(((((LL37,LL13),(LL14,(WG36,(WG14,(WG27,((((WG44,(WG49,WG59)),WG34B),(WG40,WG58B)),(LL12,(LL8,LL41B)))))))),(((LL24,(LL5,(WG58A,WG23A))),LL41A),(WG56,(LL4,WG16)))),WG28),(LLX12A,((WG42,(WG26,LLX3)),(LL1,(LL43F,(LL9,(LL46,LLX17)))))))),Methanosarcina);
(((((LL24,(WG58A,(WG23A,LL5))),LL41A),(WG56,(LL4,WG16))),((WG28,((LL1,((LL43F,((LL46,LLX17),LL9)),(LLX12A,(WG42,(WG26,LLX3))))),((WG22,WG21),((WG43,LL18),(WG74,WG481))))),(((WG49,WG40),WG58B),((((LL41B,LL8),LL12),((LL37,LL13),(LL14,(WG36,(WG14,WG27))))),((WG44,WG59),WG34B))))),Methanosarcina);
(((LL1,(LLX12A,(((LL43F,((LL46,LLX17),LL9)),WG42),(WG26,LLX3)))),(((((LL37,LL13),((LL14,(WG36,(WG14,WG27))),((WG49,WG59),((WG34B,((WG40,WG58B),((LL41B,LL8),LL12))),WG44)))),(((LL24,(LL5,(WG58A,WG23A))),LL41A),(WG56,(LL4,WG16)))),(WG481,(((WG22,WG21),(WG43,LL18)),WG74))),WG28)),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),((WG56,(LL4,WG16)),((((((((WG26,LLX3),LLX12A),WG42),LL43F),(LL1,((LL46,LLX17),LL9))),(WG74,(WG481,(((WG43,WG22),WG21),LL18)))),WG28),(((LL41B,(LL8,LL12)),((((WG44,WG59),WG49),WG34B),(WG40,WG58B))),((LL37,LL13),(LL14,(WG27,(WG36,WG14)))))))),Methanosarcina);
(((WG23A,WG58A),(((LL41A,((WG56,(LL4,WG16)),(((((((WG26,LLX3),(WG42,LL43F)),LLX12A),(LL1,((LLX17,LL46),LL9))),(WG43,(LL18,((WG74,WG481),(WG22,WG21))))),WG28),((((LL12,LL8),LL41B),((((WG44,WG59),WG49),WG34B),(WG40,WG58B))),((LL37,LL13),(LL14,((WG27,WG14),WG36))))))),LL24),LL5)),Methanosarcina);
((((WG56,(LL4,WG16)),((((LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),((WG26,LLX3),WG42))),(WG43,(LL18,(WG481,((WG22,WG21),WG74))))),WG28),((WG49,((WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B)),WG59)),((LL37,LL13),((WG27,WG14),(WG36,LL14)))))),((LL24,(LL5,(WG23A,WG58A))),LL41A)),Methanosarcina);
((((WG56,(LL4,WG16)),((((LL1,((LL43F,((LLX17,LL46),LL9)),(((WG26,LLX3),WG42),LLX12A))),(WG481,(((WG43,LL18),(WG22,WG21)),WG74))),WG28),((LL37,LL13),(((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),((WG34B,((WG59,WG49),WG44)),(WG40,WG58B))))))),((LL24,(WG23A,(WG58A,LL5))),LL41A)),Methanosarcina);
((((((LLX17,LL46),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1)),WG28),((((LL24,(WG58A,(LL5,WG23A))),LL41A),(WG56,(LL4,WG16))),((WG22,(WG21,((WG74,WG481),(WG43,LL18)))),((((LL12,LL8),LL41B),(((WG34B,(WG59,WG44)),WG49),(WG40,WG58B))),((LL37,LL13),((WG27,WG14),(WG36,LL14))))))),Methanosarcina);
(((((WG56,(WG16,LL4)),(LL41A,((WG58A,(LL5,WG23A)),LL24))),(((LL12,(LL41B,LL8)),((WG40,WG58B),((WG44,(WG59,WG49)),WG34B))),((LL37,LL13),(LL14,((WG14,WG27),WG36))))),(((WG22,(WG21,((WG481,WG74),(WG43,LL18)))),(((LL9,(LLX17,LL46)),((((LLX3,WG26),WG42),LLX12A),LL43F)),LL1)),WG28)),Methanosarcina);
(((((WG56,(WG16,LL4)),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL41B,LL8),LL12),((WG49,(WG40,WG58B)),((WG44,WG59),WG34B)))))),((((((WG481,WG74),LL18),(WG22,WG21)),WG43),((((LLX3,WG26),(LL43F,((LL9,(LLX17,LL46)),WG42))),LLX12A),LL1)),WG28)),Methanosarcina);
((((LL18,((WG22,WG21),(WG481,WG74))),WG43),((((WG56,(WG16,LL4)),(LL41A,((LL5,(WG23A,WG58A)),LL24))),((WG49,(WG59,((WG34B,((LL41B,(LL8,LL12)),(WG40,WG58B))),WG44))),((LL37,LL13),((WG14,WG27),(WG36,LL14))))),((((LL43F,((LL46,LLX17),LL9)),((WG42,(LLX3,WG26)),LLX12A)),LL1),WG28))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,((WG23A,(WG58A,LL5)),LL24))),(((((LL12,LL8),LL41B),(((WG49,WG40),WG58B),((WG44,WG59),WG34B))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),(((((WG22,WG21),((WG481,WG74),LL18)),WG43),(((LLX17,LL46),LL9),((LLX12A,((WG42,LL43F),(LLX3,WG26))),LL1))),WG28))),Methanosarcina);
(((((WG22,WG21),((WG481,WG74),LL18)),WG43),((((LLX17,LL46),LL9),((LLX12A,((WG42,LL43F),(LLX3,WG26))),LL1)),(WG28,(((WG56,(WG16,LL4)),(LL41A,((WG23A,(WG58A,LL5)),LL24))),((((LL12,LL8),LL41B),((WG40,WG58B),(WG49,((WG44,WG59),WG34B)))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))))))),Methanosarcina);
((((WG56,(WG16,LL4)),(((LL5,(WG23A,WG58A)),LL24),LL41A)),(((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((WG40,WG58B),((WG44,(WG49,WG59)),WG34B))))),((((LL18,((WG22,WG21),(WG481,WG74))),WG43),(((LL46,LLX17),LL9),(((LLX12A,(WG42,(LLX3,WG26))),LL43F),LL1))),WG28))),Methanosarcina);
(((WG43,((WG22,WG21),((WG481,WG74),LL18))),((LL1,(((LLX17,LL46),LL9),(LLX12A,((LL43F,WG42),(LLX3,WG26))))),(WG28,(((WG56,(WG16,LL4)),(((LL5,(WG23A,WG58A)),LL24),LL41A)),((WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG40,WG58B))),WG44))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))))))),Methanosarcina);
((LLX12A,((WG42,(LLX3,WG26)),(LL43F,((LL1,((LLX17,LL46),LL9)),((WG28,(((WG56,(WG16,LL4)),(((LL5,(WG23A,WG58A)),LL24),LL41A)),((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((WG40,WG58B),((WG44,(WG49,WG59)),WG34B))))))),(WG43,(LL18,((WG22,WG21),(WG481,WG74))))))))),Methanosarcina);
(((((WG56,(WG16,LL4)),(((LL5,(WG23A,WG58A)),LL24),LL41A)),((((LL12,LL8),LL41B),((WG40,WG58B),((WG44,(WG49,WG59)),WG34B))),((LL37,LL13),((WG14,WG27),(WG36,LL14))))),(((WG43,((WG22,WG21),((WG481,WG74),LL18))),(((LLX17,LL46),LL9),(LL43F,(LL1,(LLX12A,(WG42,(LLX3,WG26))))))),WG28)),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG40,WG58B),(((WG44,WG59),WG34B),WG49))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),(((WG43,(LL18,(WG481,((WG22,WG21),WG74)))),(LLX12A,((WG42,(LLX3,WG26)),((((LLX17,LL46),LL9),LL43F),LL1)))),WG28)),((WG56,(WG16,LL4)),((((LL5,LL24),WG23A),WG58A),LL41A))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),(((WG28,((WG74,(WG481,((WG21,WG22),(WG43,LL18)))),(LL1,(LLX3,(WG26,((WG42,(LL43F,(LL9,(LLX17,LL46)))),LLX12A)))))),((LL13,LL37),((WG27,(WG14,(WG36,LL14))),((LL41B,(LL8,LL12)),((WG34B,((WG44,WG59),WG49)),(WG58B,WG40)))))),((WG16,LL4),WG56))),Methanosarcina);
(((((WG16,LL4),WG56),(LL41A,(WG58A,((LL5,LL24),WG23A)))),((WG28,((WG74,(WG481,((WG21,WG22),(WG43,LL18)))),(LLX12A,(((LLX3,WG26),LL1),(LL43F,(((LL46,LLX17),LL9),WG42)))))),((((WG36,LL14),(WG27,WG14)),(((LL12,LL8),LL41B),((WG49,(WG34B,(WG44,WG59))),(WG58B,WG40)))),(LL13,LL37)))),Methanosarcina);
((WG28,(((((WG21,WG22),WG74),(WG481,(WG43,LL18))),(LLX12A,(LL1,((WG42,(LL43F,((LLX17,LL46),LL9))),(LLX3,WG26))))),(((((WG36,LL14),(WG27,WG14)),(((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40)),((LL12,LL8),LL41B))),(LL13,LL37)),(((WG16,LL4),WG56),(LL41A,(((WG23A,LL5),WG58A),LL24)))))),Methanosarcina);
(((((WG21,WG22),(WG74,(WG481,LL18))),WG43),((LL1,(((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)),LLX12A)),((((((WG36,LL14),(WG27,WG14)),(WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44)))),(LL13,LL37)),(((WG16,LL4),WG56),(LL41A,(LL24,(LL5,(WG23A,WG58A)))))),WG28))),Methanosarcina);
(((LL41A,((WG23A,WG58A),(LL24,LL5))),(((WG28,((WG74,(WG481,((WG21,WG22),(WG43,LL18)))),(LLX12A,(LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)))))),((WG49,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),(WG44,WG59))),((LL13,LL37),(LL14,((WG27,WG14),WG36))))),((WG16,LL4),WG56))),Methanosarcina);
(((LL1,((((LL43F,WG42),(LLX3,WG26)),LLX12A),((LLX17,LL46),LL9))),(((((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),(((WG16,LL4),WG56),(LL41A,((WG23A,(WG58A,LL5)),LL24)))),WG28),(WG43,(LL18,(WG481,(WG74,(WG21,WG22))))))),Methanosarcina);
((WG28,((((WG21,WG22),(((WG43,LL18),WG481),WG74)),((((WG42,(LLX3,WG26)),LLX12A),LL43F),(((LLX17,LL46),LL9),LL1))),(((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),(((WG16,LL4),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24)))))),Methanosarcina);
(((((WG16,LL4),WG56),(LL41A,(((LL5,WG23A),WG58A),LL24))),((WG28,((WG481,(WG74,((WG43,LL18),(WG21,WG22)))),(LLX12A,(WG42,((LL43F,(((LLX17,LL46),LL9),LL1)),(LLX3,WG26)))))),((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))))),Methanosarcina);
(((((LL46,LLX17),LL9),(LL1,((((LLX3,WG26),WG42),LLX12A),LL43F))),(WG28,((((WG481,(WG43,LL18)),((WG21,WG22),WG74)),(((((WG34B,((WG44,WG59),WG49)),(WG58B,WG40)),((LL8,LL12),LL41B)),((WG27,WG14),(WG36,LL14))),(LL13,LL37))),(((WG16,LL4),WG56),(LL41A,((LL24,LL5),(WG23A,WG58A))))))),Methanosarcina);
((LLX12A,((((WG28,((WG74,((WG481,(WG43,LL18)),(WG21,WG22))),(((((WG34B,(WG44,(WG59,WG49))),((WG58B,WG40),((LL12,LL8),LL41B))),((WG27,WG14),(WG36,LL14))),(LL13,LL37)),(((WG16,LL4),WG56),(LL41A,(((LL5,WG23A),WG58A),LL24)))))),((LLX17,LL46),LL9)),LL1),((LLX3,WG26),(LL43F,WG42)))),Methanosarcina);
((WG28,((((((WG43,LL18),(WG21,WG22)),WG481),WG74),(LL1,(LLX12A,((WG42,(LL43F,(LL9,(LL46,LLX17)))),(WG26,LLX3))))),((((WG23A,(LL5,WG58A)),(LL41A,LL24)),(WG56,(LL4,WG16))),(((LL37,LL13),((((WG58B,WG40),((WG34B,(WG44,WG59)),WG49)),(LL12,(LL41B,LL8))),(WG27,WG14))),(WG36,LL14))))),Methanosarcina);
(((LL41A,(LL24,(WG58A,(WG23A,LL5)))),((WG56,(LL4,WG16)),(((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),(((WG36,LL14),(WG27,WG14)),(LL37,LL13))),(WG28,(((WG481,((WG21,WG22),WG74)),(LL18,WG43)),(LL1,(LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3))))))))),Methanosarcina);
((LLX12A,(((LL43F,(((LL46,LLX17),LL9),WG42)),(WG26,LLX3)),(((((((LL5,(WG58A,WG23A)),(LL41A,LL24)),(WG56,(LL4,WG16))),((LL37,LL13),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((WG36,LL14),(WG27,WG14))))),(WG74,(WG481,((LL18,WG43),(WG21,WG22))))),WG28),LL1))),Methanosarcina);
((((((LL24,((WG58A,WG23A),LL5)),LL41A),(WG56,(LL4,WG16))),(((((LL12,LL8),LL41B),(WG58B,WG40)),(WG34B,(WG44,(WG49,WG59)))),(((WG36,LL14),(WG27,WG14)),(LL37,LL13)))),(((LL1,((LLX12A,(WG42,(LL43F,((LLX17,LL46),LL9)))),(WG26,LLX3))),(WG481,((LL18,(WG43,(WG21,WG22))),WG74))),WG28)),Methanosarcina);
((((LL24,((WG58A,WG23A),LL5)),LL41A),((WG56,(LL4,WG16)),(((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(((WG36,LL14),(WG27,WG14)),(LL37,LL13))),((WG43,((WG21,WG22),((WG74,WG481),LL18))),(WG28,(((LL46,LLX17),LL9),((((WG42,WG26),LLX3),(LL43F,LLX12A)),LL1))))))),Methanosarcina);
((((LL24,((WG23A,LL5),WG58A)),LL41A),((WG56,(LL4,WG16)),(((((((LL43F,LLX12A),((WG26,LLX3),WG42)),LL1),((LL46,LLX17),LL9)),(WG43,((WG21,WG22),((WG74,WG481),LL18)))),WG28),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(((WG36,LL14),(WG27,WG14)),(LL37,LL13)))))),Methanosarcina);
((WG56,((LL4,WG16),((((((((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)),LLX12A),LL1),(WG43,(LL18,((WG21,WG22),(WG74,WG481))))),WG28),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(((WG36,LL14),(WG27,WG14)),(LL37,LL13)))),((LL24,(LL5,(WG58A,WG23A))),LL41A)))),Methanosarcina);
(((((LLX12A,((LL1,(LL43F,((LLX17,LL46),LL9))),(WG42,(WG26,LLX3)))),(WG43,((WG21,WG22),((WG74,WG481),LL18)))),WG28),(((LL37,LL13),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((WG36,LL14),(WG27,WG14)))),((((WG58A,WG23A),(LL24,LL5)),LL41A),(WG56,(LL4,WG16))))),Methanosarcina);
((((((LL43F,((LLX17,LL46),LL9)),(((WG42,(WG26,LLX3)),LLX12A),LL1)),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))),WG28),(((LL37,LL13),((WG49,(WG59,((((LL12,(LL8,LL41B)),(WG58B,WG40)),WG34B),WG44))),((WG36,LL14),(WG27,WG14)))),(((LL24,(LL5,(WG58A,WG23A))),LL41A),(WG56,(LL4,WG16))))),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),((WG56,(LL4,WG16)),((((LLX12A,(LL1,(WG42,((LL43F,((LLX17,LL46),LL9)),(WG26,LLX3))))),(WG43,((WG21,WG22),((WG481,WG74),LL18)))),WG28),((LL37,LL13),(((LL12,(LL8,LL41B)),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((WG36,LL14),(WG27,WG14))))))),Methanosarcina);
(((WG481,(((WG22,WG21),WG74),(LL18,WG43))),(((WG56,(LL4,WG16)),(((LL24,LL5),(WG23A,WG58A)),LL41A)),(((LL1,(LLX12A,((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42))))),WG28),((WG49,(((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44),WG59)),((LL13,LL37),(WG27,((LL14,WG36),WG14))))))),Methanosarcina);
((((((LL5,(WG23A,WG58A)),(LL24,LL41A)),((((WG43,((WG22,WG21),((WG481,WG74),LL18))),((LL1,(((LL43F,WG42),(WG26,LLX3)),LLX12A)),((LL46,LLX17),LL9))),WG28),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG58B,WG40))),((LL13,LL37),(((WG27,WG14),WG36),LL14))))),WG56),(LL4,WG16)),Methanosarcina);
(((((WG23A,(LL5,LL24)),WG58A),LL41A),(((((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),((LL1,((LLX3,(WG42,WG26)),(LLX12A,LL43F))),((LL46,LLX17),LL9))),WG28),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG58B,WG40)))))),(WG56,(LL4,WG16)))),Methanosarcina);
((LLX12A,(((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),(((WG28,(((LL13,LL37),((WG27,(WG14,(WG36,LL14))),(((LL12,LL8),LL41B),(((WG34B,(WG44,WG59)),WG49),(WG58B,WG40))))),((WG56,(LL4,WG16)),((((WG23A,LL5),WG58A),LL24),LL41A)))),(WG43,((WG22,WG21),((WG481,WG74),LL18)))),LL1)))),WG42)),Methanosarcina);
((LLX12A,(((LLX17,LL46),LL9),(((WG28,((((LL13,LL37),(((WG36,LL14),(WG27,WG14)),(((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG58B,WG40))))),((WG56,(LL4,WG16)),(((LL24,LL5),(WG58A,WG23A)),LL41A))),(WG43,((WG22,WG21),((WG481,WG74),LL18))))),LL1),((LL43F,WG42),(LLX3,WG26))))),Methanosarcina);
(((WG28,((((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),((LL13,LL37),(LL14,((WG27,WG14),WG36)))),((WG56,(LL4,WG16)),(LL41A,((LL5,(WG58A,WG23A)),LL24)))),(WG481,(WG74,((WG43,LL18),(WG22,WG21)))))),((LL1,((LL43F,LLX12A),(WG42,(LLX3,WG26)))),((LLX17,LL46),LL9))),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,((WG58A,WG23A),(LL24,LL5)))),((((((LL43F,LLX12A),(WG42,((LL1,LLX3),WG26))),((LL46,LLX17),LL9)),((WG22,WG21),((WG481,WG74),(WG43,LL18)))),WG28),((WG49,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),(WG44,WG59))),((LL13,LL37),(LL14,((WG27,WG14),WG36)))))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG49,((WG59,WG44),WG34B)),(WG58B,WG40))),((LL13,LL37),(LL14,((WG27,WG14),WG36)))),((WG56,(LL4,WG16)),(LL41A,(((WG58A,WG23A),LL5),LL24)))),((((((LL43F,LLX12A),(WG42,(LLX3,WG26))),LL1),((LLX17,LL46),LL9)),((LL18,((WG22,WG21),(WG481,WG74))),WG43)),WG28)),Methanosarcina);
((((((WG58A,WG23A),LL5),LL24),LL41A),(((((LL1,(LLX12A,(((((LLX17,LL46),LL9),LL43F),WG42),(LLX3,WG26)))),(((WG481,((WG22,WG21),WG74)),LL18),WG43)),WG28),((((LL12,LL8),LL41B),((((WG59,WG44),WG34B),(WG40,WG49)),WG58B)),((LL13,LL37),(WG27,(WG14,(WG36,LL14)))))),(WG56,(LL4,WG16)))),Methanosarcina);
((WG56,((LL4,WG16),(((((WG58A,WG23A),LL5),LL24),LL41A),(((LL1,(LLX12A,(WG42,(((((LLX17,LL46),LL9),LL43F),LLX3),WG26)))),(((((WG22,WG21),(WG74,WG481)),LL18),WG43),WG28)),((LL13,LL37),(((WG36,LL14),(WG27,WG14)),(WG44,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),(WG49,WG59))))))))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,((WG23A,WG58A),(LL24,LL5)))),(((LL13,LL37),((WG49,(((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44),WG59)),(LL14,(WG36,(WG14,WG27))))),(((((LL46,LLX17),LL9),((LL43F,((WG42,(WG26,LLX3)),LLX12A)),LL1)),((LL18,(WG481,(WG74,(WG22,WG21)))),WG43)),WG28))),Methanosarcina);
(((((WG481,WG74),((WG22,WG21),(WG43,LL18))),(WG28,(LL1,(((LL46,LLX17),LL9),(LL43F,(WG42,((WG26,LLX3),LLX12A))))))),(((WG56,(WG16,LL4)),(LL41A,((WG23A,WG58A),(LL24,LL5)))),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG58B,WG40))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))))),Methanosarcina);
((LLX12A,((LL1,((((((WG56,(WG16,LL4)),(LL41A,(((WG23A,WG58A),LL5),LL24))),((LL13,LL37),((((WG34B,(WG44,(WG59,WG49))),(WG58B,WG40)),((LL12,LL8),LL41B)),((WG14,WG27),(LL14,WG36))))),(WG22,(WG21,((WG43,LL18),(WG481,WG74))))),WG28),((LL46,LLX17),LL9))),((LL43F,WG42),(WG26,LLX3)))),Methanosarcina);
(((((((WG56,(WG16,LL4)),(LL41A,((WG23A,(WG58A,LL5)),LL24))),((LL13,LL37),(((WG34B,((WG59,WG49),(WG44,(WG58B,WG40)))),((LL12,LL8),LL41B)),((WG14,WG27),(LL14,WG36))))),(((WG22,WG21),(WG43,LL18)),(WG481,WG74))),WG28),((((LL43F,(((LL46,LLX17),LL9),WG42)),(WG26,LLX3)),LLX12A),LL1)),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((((LL13,LL37),((WG49,((WG44,(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40)))),WG59)),((WG14,WG27),(LL14,WG36)))),(((((((WG42,LL43F),(WG26,LLX3)),LLX12A),LL1),((LLX17,LL46),LL9)),((WG22,WG21),(((WG481,WG74),WG43),LL18))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG56,(WG16,LL4)),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((((LL12,LL8),LL41B),((WG58B,WG40),(((WG59,WG44),WG49),WG34B))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),((((((WG42,(WG26,LLX3)),(LL43F,LLX12A)),LL1),((LL46,LLX17),LL9)),(((WG481,(WG43,LL18)),WG74),(WG22,WG21))),WG28)))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((((WG49,(WG34B,(WG59,WG44))),(((LL12,LL8),LL41B),(WG58B,WG40))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))),((WG74,((WG43,(LL18,(WG22,WG21))),WG481)),(WG28,(((((LL43F,WG42),(WG26,LLX3)),LLX12A),LL1),((LL46,LLX17),LL9))))),(WG56,(WG16,LL4)))),Methanosarcina);
((((((WG14,WG27),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44))))),((LL14,WG36),(LL13,LL37))),((WG43,(((WG481,WG74),LL18),(WG22,WG21))),(WG28,((((LL43F,WG42),(WG26,LLX3)),LLX12A),(LL1,((LLX17,LL46),LL9)))))),((WG56,(WG16,LL4)),((LL41A,((WG23A,WG58A),LL5)),LL24))),Methanosarcina);
(((((LL13,LL37),(((WG14,WG27),(LL14,WG36)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))))),(WG28,((LL1,(((((LLX17,LL46),LL9),LL43F),(WG42,(WG26,LLX3))),LLX12A)),(WG43,(((WG481,WG74),LL18),(WG22,WG21)))))),((WG56,(WG16,LL4)),(LL41A,(((WG23A,WG58A),LL5),LL24)))),Methanosarcina);
(((LL41A,(((LL5,WG23A),WG58A),LL24)),((((WG49,(WG59,(WG44,(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40)))))),((LL13,LL37),(WG27,((LL14,WG36),WG14)))),(WG28,((((LLX17,LL46),LL9),((((WG42,(WG26,LLX3)),LLX12A),LL43F),LL1)),(WG43,((((WG22,WG21),WG74),WG481),LL18))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((((WG49,((((LL12,LL8),LL41B),(WG40,WG58B)),(WG34B,(WG44,WG59)))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),((LL41A,(LL24,((WG58A,WG23A),LL5))),((WG16,LL4),WG56))),(WG28,((WG43,((WG481,((WG22,WG21),WG74)),LL18)),(((LLX17,LL46),LL9),(((WG42,(WG26,(LL1,LLX3))),LLX12A),LL43F))))),Methanosarcina);
((((WG16,LL4),WG56),(((WG28,((WG43,(((WG22,WG21),(WG74,WG481)),LL18)),(((LL46,LLX17),LL9),((((WG42,(WG26,LLX3)),LLX12A),LL43F),LL1)))),((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG49,(WG44,WG59))))),(LL14,(WG36,(WG14,WG27)))))),(LL41A,(LL24,((WG23A,LL5),WG58A))))),Methanosarcina);
((LLX12A,((LL1,((WG28,((((LL13,LL37),((WG36,((WG14,WG27),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))))),LL14)),((LL41A,(LL24,(LL5,(WG58A,WG23A)))),((WG16,LL4),WG56))),(WG43,(((WG22,WG21),(WG74,WG481)),LL18)))),((LLX17,LL46),LL9))),((LL43F,WG42),(WG26,LLX3)))),Methanosarcina);
((((LL41A,((WG58A,WG23A),(LL24,LL5))),((WG16,LL4),WG56)),((((WG74,(((LL18,WG43),WG481),(WG22,WG21))),(((((((LLX17,LL46),LL9),LL43F),WG42),(WG26,LLX3)),LLX12A),LL1)),WG28),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))))),Methanosarcina);
((WG28,((((LL13,LL37),(LL14,(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),(WG14,WG27)),WG36))),((LL41A,(((WG58A,WG23A),LL5),LL24)),((WG16,LL4),WG56))),((WG43,((WG22,WG21),(LL18,(WG481,WG74)))),(LLX12A,(LL1,(((((LLX17,LL46),LL9),LL43F),WG42),(WG26,LLX3))))))),Methanosarcina);
(((LLX12A,((((((LLX17,LL46),LL9),LL43F),LL1),LLX3),(WG42,WG26))),(WG28,(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((WG14,((LL13,LL37),WG27)),(WG36,LL14))),((LL41A,(((WG58A,WG23A),LL5),LL24)),(((WG22,WG21),(LL18,(WG43,(WG481,WG74)))),((WG16,LL4),WG56)))))),Methanosarcina);
(((((WG43,(((WG22,WG21),(WG481,WG74)),LL18)),(LLX12A,((((LL46,LLX17),LL9),LL1),((LL43F,WG42),(LLX3,WG26))))),WG28),(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),(((WG16,LL4),WG56),((LL41A,((WG58A,LL5),WG23A)),LL24)))),Methanosarcina);
((((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),((((WG16,LL4),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),(((WG43,((WG22,WG21),((WG481,WG74),LL18))),(LL1,(((LLX3,WG26),((((LLX17,LL46),LL9),LL43F),WG42)),LLX12A))),WG28))),Methanosarcina);
(((LLX12A,((LLX3,(WG42,WG26)),(LL43F,(LL1,((LLX17,LL46),LL9))))),((WG28,(((WG44,((WG59,WG49),((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),(((WG16,LL4),WG56),(((WG23A,(WG58A,LL5)),LL24),LL41A)))),(WG481,(WG74,((WG43,LL18),(WG22,WG21)))))),Methanosarcina);
(((((WG16,LL4),WG56),(((WG23A,(WG58A,LL5)),LL24),LL41A)),(((((LL18,(((WG22,WG21),WG74),WG481)),WG43),((LLX12A,((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42)))),LL1)),WG28),((((LL8,LL12),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))))),Methanosarcina);
(((((WG56,(LL4,WG16)),(LL41A,((LL24,LL5),(WG23A,WG58A)))),(((WG481,WG74),((WG43,LL18),(WG22,WG21))),((LL13,LL37),(((WG14,WG27),(WG36,LL14)),(WG49,(WG59,(((WG58B,WG40),(((LL41B,LL8),LL12),WG34B)),WG44))))))),(WG28,(LL1,(LLX12A,((WG42,(LL43F,(LL9,(LLX17,LL46)))),(LLX3,WG26)))))),Methanosarcina);
(((WG56,(LL4,WG16)),((LL41A,(LL24,(LL5,(WG23A,WG58A)))),((WG28,(((LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26)))),((LLX17,LL46),LL9)),(WG43,(((WG481,WG74),LL18),(WG22,WG21))))),((LL13,LL37),(((WG14,WG27),(WG36,LL14)),(WG44,((((WG58B,WG40),(LL41B,(LL8,LL12))),WG34B),(WG49,WG59)))))))),Methanosarcina);
(((WG56,(LL4,WG16)),((LL41A,(LL24,(WG58A,(LL5,WG23A)))),(((WG43,(((WG481,WG74),LL18),(WG22,WG21))),(WG28,(LL1,((LLX12A,(WG42,(LLX3,WG26))),(LL43F,((LLX17,LL46),LL9)))))),((LL13,LL37),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((((WG59,WG44),WG49),WG34B),(WG58B,WG40)))))))),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG23A,WG58A))))),(((WG74,((LL18,((WG22,WG21),WG43)),WG481)),(WG28,(LLX12A,(((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42))),LL1)))),((LL13,LL37),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((((WG59,WG44),WG49),WG34B),(WG58B,WG40))))))),Methanosarcina);
(((((LL13,LL37),(((WG14,WG27),(WG36,LL14)),(((WG58B,WG40),(((WG59,WG44),WG49),WG34B)),((LL12,LL8),LL41B)))),((WG56,(LL4,WG16)),(LL24,((WG23A,(WG58A,LL5)),LL41A)))),(WG28,((WG43,(LL18,(WG481,(WG74,(WG22,WG21))))),(((LLX17,LL46),LL9),(((WG42,(LLX3,WG26)),(LLX12A,LL43F)),LL1))))),Methanosarcina);
(((((((WG58B,WG40),(WG34B,(WG44,(WG59,WG49)))),((LL12,LL8),LL41B)),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),(LL24,((LL5,(WG23A,WG58A)),LL41A)))),(WG28,(((WG481,WG74),((WG22,WG21),(LL18,WG43))),(((LLX17,LL46),LL9),((LL43F,((WG42,(LLX3,WG26)),LLX12A)),LL1))))),Methanosarcina);
((((((WG23A,LL5),WG58A),LL24),LL41A),(((WG28,((WG22,(WG21,((LL18,WG43),(WG481,WG74)))),(((LL46,LLX17),LL9),(((WG26,((LL43F,WG42),LLX3)),LLX12A),LL1)))),((((WG58B,WG40),(WG34B,(WG44,(WG59,WG49)))),((LL12,LL8),LL41B)),((LL13,LL37),((WG14,WG27),(WG36,LL14))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((((LLX17,LL46),LL9),(LL1,(((LLX12A,WG42),(LLX3,WG26)),LL43F))),(WG28,((((((WG58B,WG40),(WG34B,(WG49,(WG44,WG59)))),((LL12,LL8),LL41B)),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),(((LL5,(WG58A,WG23A)),LL24),LL41A))),(((WG22,WG21),WG74),((LL18,WG43),WG481))))),Methanosarcina);
((((((WG58A,WG23A),LL5),LL24),LL41A),(((((((LLX17,LL46),LL9),(LL1,((LLX12A,(WG42,(LLX3,WG26))),LL43F))),(WG43,(((WG22,WG21),(WG481,WG74)),LL18))),WG28),((((WG58B,WG40),(WG34B,(WG44,(WG59,WG49)))),((LL12,LL8),LL41B)),((LL13,LL37),(LL14,((WG14,WG27),WG36))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX12A,(LLX3,WG26)))),((WG43,(((WG22,WG21),(WG481,WG74)),LL18)),(WG28,(((((WG58B,WG40),(WG49,((WG44,WG59),WG34B))),((LL12,LL8),LL41B)),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),((((WG58A,WG23A),LL5),LL24),LL41A)))))),Methanosarcina);
(((LL1,(((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)),LLX12A)),((WG28,((((WG16,LL4),WG56),(LL41A,(((WG23A,WG58A),LL5),LL24))),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),(((WG36,LL14),(WG14,WG27)),(LL13,LL37))))),((WG22,WG21),((WG481,WG74),(WG43,LL18))))),Methanosarcina);
((((LL1,(((WG42,(LL43F,((LLX17,LL46),LL9))),(WG26,LLX3)),LLX12A)),WG28),((((WG16,LL4),WG56),(LL41A,(((WG23A,WG58A),LL5),LL24))),(((LL13,LL37),((((LL12,LL8),LL41B),(((WG34B,(WG59,WG44)),WG49),(WG58B,WG40))),((WG36,LL14),(WG14,WG27)))),(WG74,(((WG43,LL18),(WG22,WG21)),WG481))))),Methanosarcina);
(((LL41A,(((WG23A,WG58A),LL5),LL24)),((((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),(((WG36,LL14),(WG14,WG27)),(LL13,LL37))),(WG28,((WG43,((WG481,((WG22,WG21),WG74)),LL18)),(LL1,((LL43F,((LLX17,LL46),LL9)),(((WG26,LLX3),WG42),LLX12A)))))),((WG16,LL4),WG56))),Methanosarcina);
((WG28,(((WG43,((WG22,WG21),((WG74,WG481),LL18))),((((WG26,LLX3),(LL43F,WG42)),LLX12A),(LL1,((LLX17,LL46),LL9)))),((((WG16,LL4),WG56),(LL41A,(((WG23A,WG58A),LL5),LL24))),((LL13,LL37),((WG49,(WG59,(WG44,(((((LL8,LL41B),LL12),WG58B),WG40),WG34B)))),((WG36,LL14),(WG14,WG27))))))),Methanosarcina);
(((((WG16,LL4),WG56),(LL41A,(((WG23A,WG58A),LL5),LL24))),(((LL13,LL37),((WG49,(WG59,(WG44,((((LL8,LL41B),LL12),(WG58B,WG40)),WG34B)))),(LL14,((WG14,WG27),WG36)))),(WG28,((WG43,((WG22,WG21),((WG74,WG481),LL18))),(LLX12A,((LL1,(LL43F,((LLX17,LL46),LL9))),((WG26,LLX3),WG42))))))),Methanosarcina);
((((LLX12A,(LL1,((LL43F,(WG42,((LLX17,LL46),LL9))),(WG26,LLX3)))),WG28),(((WG22,WG21),((WG481,(WG43,LL18)),WG74)),((((WG16,LL4),WG56),(LL41A,(((WG23A,WG58A),LL5),LL24))),((((LL41B,LL8),LL12),((WG40,WG58B),(WG49,((WG59,WG34B),WG44)))),((LL14,((WG14,WG27),WG36)),(LL13,LL37)))))),Methanosarcina);
(((((WG16,LL4),WG56),(LL24,(LL41A,((WG23A,WG58A),LL5)))),(((LL13,LL37),((((WG49,(WG59,WG44)),WG34B),(((LL41B,LL8),LL12),(WG40,WG58B))),((WG14,WG27),(WG36,LL14)))),(WG28,((((((WG22,WG21),LL18),WG43),WG74),WG481),(((LL46,LLX17),LL9),(LL1,(((WG42,(WG26,LLX3)),LLX12A),LL43F))))))),Methanosarcina);
(((LL24,(LL41A,((WG23A,WG58A),LL5))),((((LL13,LL37),((((LL41B,LL8),LL12),(WG58B,(WG40,((WG44,(WG49,WG59)),WG34B)))),((WG14,WG27),(WG36,LL14)))),((WG16,LL4),WG56)),(WG28,((WG43,(LL18,((WG74,(WG22,WG21)),WG481))),(LLX12A,((WG26,(LL1,LLX3)),((LL43F,((LLX17,LL46),LL9)),WG42))))))),Methanosarcina);
(((((WG16,LL4),WG56),((WG28,((WG481,(WG74,((WG43,LL18),(WG22,WG21)))),(LL1,(LLX3,((LLX12A,(WG42,(LL43F,((LLX17,LL46),LL9)))),WG26))))),((((LL41B,LL8),LL12),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))))),(LL41A,((WG23A,WG58A),(LL24,LL5)))),Methanosarcina);
(((LL41A,(((WG23A,WG58A),LL5),LL24)),(((WG16,LL4),WG56),((WG28,((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),(LLX12A,(((WG26,LLX3),(LL43F,WG42)),(LL1,((LLX17,LL46),LL9)))))),((((LL41B,LL8),LL12),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))))),Methanosarcina);
((WG28,(((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),(LL1,(LLX12A,((LLX3,WG26),(LL43F,((LL9,(LLX17,LL46)),WG42)))))),(((LL41A,((LL24,LL5),(WG23A,WG58A))),((LL4,WG16),WG56)),((LL13,LL37),(((LL14,WG36),(WG27,WG14)),((LL41B,(LL12,LL8)),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40)))))))),Methanosarcina);
((LLX12A,(((LL1,(LLX3,WG26)),(LL43F,(((LL46,LLX17),LL9),WG42))),(((((((WG23A,LL5),WG58A),LL41A),LL24),((WG22,((LL18,(WG43,(WG481,WG74))),WG21)),((LL4,WG16),WG56))),((((LL12,LL8),LL41B),((WG44,(WG34B,WG59)),(WG58B,(WG49,WG40)))),((LL13,LL37),((LL14,WG36),(WG27,WG14))))),WG28))),Methanosarcina);
(((WG43,(((WG21,WG22),(WG481,WG74)),LL18)),((LL1,((LLX3,WG26),((WG42,(LL43F,((LLX17,LL46),LL9))),LLX12A))),(((((LL4,WG16),WG56),((((LL24,LL5),WG23A),WG58A),LL41A)),((LL13,LL37),(((LL14,WG36),(WG27,WG14)),(((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40)))))),WG28))),Methanosarcina);
(((LL1,((LLX3,WG26),((LL43F,(((LLX17,LL46),LL9),WG42)),LLX12A))),((((((LL4,WG16),WG56),(LL41A,(((LL5,WG23A),WG58A),LL24))),((LL13,LL37),(((LL14,WG36),(WG27,WG14)),(((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40)))))),(WG43,(((WG21,WG22),(WG481,WG74)),LL18))),WG28)),Methanosarcina);
((WG28,(((((LL4,WG16),WG56),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((LL13,LL37),((LL14,WG36),(WG27,WG14))))),((LL1,((LLX3,WG26),((WG42,(LL43F,((LLX17,LL46),LL9))),LLX12A))),((WG481,WG74),((LL18,WG43),(WG21,WG22)))))),Methanosarcina);
(((((LL4,WG16),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),(((WG49,(((WG58B,WG40),((LL12,LL8),LL41B)),(WG34B,(WG59,WG44)))),(((LL13,LL37),WG27),(WG14,(LL14,WG36)))),((((LL1,((LLX3,WG26),((LL43F,WG42),LLX12A))),((LLX17,LL46),LL9)),(WG481,(WG74,(LL18,(WG43,(WG21,WG22)))))),WG28))),Methanosarcina);
((LLX12A,(((LLX3,WG26),WG42),((((LLX17,LL46),LL9),LL43F),(((WG43,(((WG74,(WG21,WG22)),WG481),LL18)),(WG28,((((LL4,WG16),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),((WG49,((WG44,(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B)),WG59)),((LL13,LL37),(LL14,(WG36,(WG14,WG27)))))))),LL1)))),Methanosarcina);
((((((LL4,WG16),WG56),(LL41A,(WG58A,((WG23A,LL24),LL5)))),((((LL12,LL8),LL41B),((WG34B,((WG59,WG44),WG49)),(WG58B,WG40))),((LL13,LL37),((WG14,WG27),(LL14,WG36))))),(((LL1,((LLX12A,((LLX3,WG26),WG42)),(((LL46,LLX17),LL9),LL43F))),(WG481,((LL18,WG43),(WG74,(WG21,WG22))))),WG28)),Methanosarcina);
((WG28,(((((LL4,WG16),WG56),(LL41A,((WG23A,(LL5,WG58A)),LL24))),((((LL12,LL8),LL41B),((WG34B,(WG59,WG44)),(WG49,(WG58B,WG40)))),((LL13,LL37),((WG14,(LL14,WG36)),WG27)))),(((((WG26,(LL43F,WG42)),LLX12A),(LL1,LLX3)),((LL46,LLX17),LL9)),(WG481,(WG74,((WG21,WG22),(LL18,WG43))))))),Methanosarcina);
((LLX12A,(((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42))),(LL1,((((WG21,WG22),(LL18,WG43)),(WG481,WG74)),(WG28,((((LL4,WG16),WG56),(LL41A,(((WG58A,LL5),WG23A),LL24))),((LL13,LL37),(((LL14,WG36),(WG27,WG14)),(((WG34B,((WG49,WG59),WG44)),(WG58B,WG40)),((LL12,LL8),LL41B)))))))))),Methanosarcina);
(((LL41A,((WG58A,WG23A),(LL24,LL5))),(((((LL12,(LL41B,LL8)),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))),(((WG36,LL14),(WG14,WG27)),(LL13,LL37))),(WG28,((WG43,(LL18,((WG481,WG74),(WG22,WG21)))),((LL1,((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42)))),LLX12A)))),((WG16,LL4),WG56))),Methanosarcina);
(((WG28,((WG43,((WG22,WG21),(LL18,(WG481,WG74)))),(((WG26,(LL43F,(LL1,LLX3))),(((LLX17,LL46),LL9),WG42)),LLX12A))),((((WG16,LL4),WG56),(LL41A,((WG58A,WG23A),(LL24,LL5)))),((WG49,((WG58B,WG40),(((WG44,WG59),WG34B),((LL41B,LL8),LL12)))),(((WG36,LL14),(WG14,WG27)),(LL13,LL37))))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),((((((LL41B,LL8),LL12),((WG49,(WG58B,WG40)),((WG44,WG59),WG34B))),(LL14,((WG14,((LL13,LL37),WG27)),WG36))),(WG28,(((WG481,WG74),(((WG22,WG21),LL18),WG43)),(((WG26,(LL1,LLX3)),((LL43F,((LL46,LLX17),LL9)),WG42)),LLX12A)))),((WG16,LL4),WG56))),Methanosarcina);
((LLX12A,(((WG26,LLX3),(LL43F,WG42)),(((LLX17,LL46),LL9),(((((((WG16,LL4),WG56),(LL41A,((WG58A,WG23A),(LL5,LL24)))),((WG44,((WG49,WG59),(WG34B,(((LL41B,LL8),LL12),(WG58B,WG40))))),(LL14,((WG27,WG14),(WG36,(LL13,LL37)))))),WG28),(WG43,((WG481,WG74),((WG22,WG21),LL18)))),LL1)))),Methanosarcina);
((((LL24,LL41A),((WG58A,WG23A),LL5)),((((LL13,LL37),((WG27,WG14),(((LL41B,(LL8,LL12)),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),(LL14,WG36)))),(WG28,((WG74,(((WG22,WG21),(WG43,LL18)),WG481)),(LL1,((LLX12A,((WG26,LLX3),WG42)),(LL43F,((LL46,LLX17),LL9))))))),((WG16,LL4),WG56))),Methanosarcina);
((((WG22,WG21),((WG43,LL18),(WG481,WG74))),((((LL1,((LLX17,LL46),LL9)),((WG26,LLX3),(LL43F,WG42))),LLX12A),(((((WG16,LL4),WG56),(LL41A,((WG58A,(WG23A,LL5)),LL24))),((((WG58B,WG40),(((WG44,WG59),WG34B),((LL12,LL8),LL41B))),WG49),((LL14,(WG27,(WG14,WG36))),(LL13,LL37)))),WG28))),Methanosarcina);
(((((LL1,((LLX17,LL46),LL9)),((WG26,LLX3),(LL43F,WG42))),LLX12A),(((WG43,((WG22,WG21),(LL18,(WG481,WG74)))),((((WG16,LL4),WG56),(LL41A,(LL24,(WG23A,(WG58A,LL5))))),(((WG59,((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),WG44)),WG49),((LL14,((WG27,WG14),WG36)),(LL13,LL37))))),WG28)),Methanosarcina);
(((LL24,((LL5,(WG23A,WG58A)),LL41A)),((((((WG27,WG14),(WG36,LL14)),(LL13,LL37)),(((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B)))),(WG28,((((LLX12A,((LL43F,((LLX17,LL46),LL9)),WG42)),(WG26,LLX3)),LL1),(WG43,(LL18,(WG481,((WG22,WG21),WG74))))))),((WG16,LL4),WG56))),Methanosarcina);
((WG28,(((((LLX12A,((LL43F,((LLX17,LL46),LL9)),WG42)),(WG26,LLX3)),LL1),(WG43,(LL18,((WG22,WG21),(WG74,WG481))))),((((WG16,LL4),WG56),(((WG23A,(LL5,LL24)),WG58A),LL41A)),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((WG27,WG14),(WG36,LL14))))))),Methanosarcina);
((((WG42,(WG26,((LL43F,((LLX17,LL46),LL9)),(LL1,LLX3)))),LLX12A),((WG74,(WG481,((WG43,LL18),(WG22,WG21)))),((((LL24,((WG58A,WG23A),LL5)),LL41A),(((((WG44,(WG49,WG59)),WG34B),(((LL8,LL12),LL41B),(WG58B,WG40))),(((WG27,WG14),(WG36,LL14)),(LL13,LL37))),((WG16,LL4),WG56))),WG28))),Methanosarcina);
(((WG74,(WG481,((WG22,WG21),(WG43,LL18)))),(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4))),((WG28,(LLX12A,(((LL43F,WG42),(LLX3,WG26)),((LL9,(LLX17,LL46)),LL1)))),((((WG40,WG58B),(WG34B,(WG49,(WG44,WG59)))),((LL41B,LL8),LL12)),(((WG14,WG27),(WG36,LL14)),(LL37,LL13)))))),Methanosarcina);
(((LL24,(LL41A,(LL5,(WG23A,WG58A)))),((WG56,(WG16,LL4)),((WG28,((WG43,(LL18,((WG74,WG481),(WG22,WG21)))),(LLX12A,((WG42,(LLX3,WG26)),(LL43F,(((LLX17,LL46),LL9),LL1)))))),((((WG40,WG58B),(WG34B,(WG44,(WG59,WG49)))),(LL41B,(LL8,LL12))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13)))))),Methanosarcina);
((((((((LL37,LL13),(((WG34B,(WG49,(WG44,WG59))),(((LL8,LL12),LL41B),(WG40,WG58B))),((WG14,WG27),(WG36,LL14)))),((LL24,(LL41A,((LL5,WG23A),WG58A))),(WG56,(WG16,LL4)))),WG28),(WG43,(LL18,((WG74,WG481),(WG22,WG21))))),((LLX17,LL46),LL9)),(LL1,((LLX12A,(WG42,(LLX3,WG26))),LL43F))),Methanosarcina);
((WG28,(((WG43,((WG22,WG21),(LL18,(WG74,WG481)))),(((LL37,LL13),((((LL12,LL8),LL41B),(((WG44,WG59),WG34B),(WG58B,(WG49,WG40)))),((WG14,WG27),(WG36,LL14)))),((LL41A,(((WG23A,LL5),WG58A),LL24)),(WG56,(WG16,LL4))))),(LL1,((LLX12A,(WG42,(LLX3,WG26))),(LL43F,((LLX17,LL46),LL9)))))),Methanosarcina);
(((((LLX17,LL46),LL9),(LL1,((LL43F,LLX12A),(WG42,(LLX3,WG26))))),(WG28,((WG43,((WG22,WG21),(LL18,(WG74,WG481)))),((((((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)),((LL12,LL8),LL41B)),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),((LL41A,(((LL5,WG58A),LL24),WG23A)),(WG56,(WG16,LL4))))))),Methanosarcina);
(((((((LLX17,LL46),LL9),(LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26))))),((WG74,WG481),(((WG22,WG21),LL18),WG43))),((LL37,LL13),((WG44,((WG49,WG59),(WG34B,((WG58B,WG40),(LL12,(LL8,LL41B)))))),((WG14,WG27),(WG36,LL14))))),((WG28,(LL41A,((LL5,(WG58A,WG23A)),LL24))),(WG56,(WG16,LL4)))),Methanosarcina);
((((LL41A,(((LL5,WG23A),WG58A),LL24)),(WG56,(WG16,LL4))),((WG28,((LLX12A,((WG42,(LLX3,WG26)),(LL43F,(((LLX17,LL46),LL9),LL1)))),(WG43,(LL18,(((WG22,WG21),WG74),WG481))))),((WG49,(WG59,((WG34B,(WG40,((LL12,(LL8,LL41B)),WG58B))),WG44))),((LL14,((WG14,WG27),WG36)),(LL37,LL13))))),Methanosarcina);
(((WG43,((WG22,WG21),((WG74,WG481),LL18))),(((((WG49,(WG59,((WG34B,((LL12,(LL8,LL41B)),(WG58B,WG40))),WG44))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),(((WG23A,(WG58A,LL5)),(LL24,LL41A)),(WG56,(WG16,LL4)))),WG28),(LLX12A,(LL1,((LLX3,(WG26,WG42)),(LL43F,((LLX17,LL46),LL9))))))),Methanosarcina);
(((((LL24,((LL5,WG23A),WG58A)),LL41A),(WG56,(WG16,LL4))),((WG28,((((LL46,LLX17),LL9),(((LLX12A,((LLX3,WG26),WG42)),LL43F),LL1)),(WG43,((WG22,WG21),((WG74,WG481),LL18))))),((((LL41B,(LL12,LL8)),(WG58B,WG40)),((WG44,(WG49,WG59)),WG34B)),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))))),Methanosarcina);
(((WG28,((LL1,((LL43F,((LLX17,LL46),LL9)),(LLX12A,((LLX3,WG26),WG42)))),((((WG43,LL18),(WG22,WG21)),WG74),WG481))),(((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),(((LL24,(WG23A,(WG58A,LL5))),LL41A),(WG56,(WG16,LL4))))),Methanosarcina);
((WG28,(((WG481,(WG74,((WG43,(WG21,WG22)),LL18))),(((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),((LL37,LL13),((((WG34B,(WG44,WG59)),((WG40,WG58B),((LL8,LL12),LL41B))),WG49),((LL14,WG36),(WG27,WG14)))))),(LL1,(LLX3,((LL43F,((LLX17,LL46),LL9)),(LLX12A,(WG42,WG26))))))),Methanosarcina);
((((((((LLX17,LL46),LL9),(((LL43F,LLX12A),(WG42,(LLX3,WG26))),LL1)),(WG43,((WG481,(WG74,(WG21,WG22))),LL18))),WG28),((WG56,(WG16,LL4)),(LL41A,((WG58A,WG23A),(LL24,LL5))))),((LL37,LL13),((((LL8,LL12),LL41B),((WG34B,(WG49,(WG44,WG59))),(WG40,WG58B))),((LL14,WG36),(WG27,WG14))))),Methanosarcina);
(((((LL1,(((LLX3,WG26),((LL43F,((LL46,LLX17),LL9)),WG42)),LLX12A)),(WG74,(((LL18,WG43),(WG21,WG22)),WG481))),WG28),(((WG56,(WG16,LL4)),((LL41A,(WG23A,(LL5,WG58A))),LL24)),((WG49,((WG44,(WG59,WG34B)),((WG40,WG58B),((LL12,LL8),LL41B)))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13))))),Methanosarcina);
((WG28,((((WG56,(WG16,LL4)),((LL41A,(LL5,(WG58A,WG23A))),LL24)),(((LL12,(LL8,LL41B)),(((WG44,(WG49,WG59)),WG34B),(WG40,WG58B))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13)))),((LL1,((LL43F,((LLX17,LL46),LL9)),((WG42,(LLX3,WG26)),LLX12A))),(WG43,((WG21,WG22),((WG481,WG74),LL18)))))),Methanosarcina);
(((((LL18,(WG21,WG22)),WG43),(WG481,WG74)),(((LL1,(((LL43F,WG42),(LLX3,WG26)),LLX12A)),((LLX17,LL46),LL9)),((((WG56,(WG16,LL4)),(LL41A,((WG58A,(WG23A,LL5)),LL24))),(((LL12,(LL8,LL41B)),((WG49,((WG59,WG34B),WG44)),(WG40,WG58B))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13)))),WG28))),Methanosarcina);
(((LL24,(LL41A,(LL5,(WG58A,WG23A)))),(((((LL12,(LL8,LL41B)),((WG44,(WG49,WG59)),((WG40,WG58B),WG34B))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13))),(WG28,((WG481,(WG74,((WG21,WG22),(WG43,LL18)))),((LL1,(LLX12A,((WG42,(LLX3,WG26)),LL43F))),((LL46,LLX17),LL9))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG28,((WG43,(LL18,((WG481,WG74),(WG21,WG22)))),((LL1,(((LLX3,WG26),(LL43F,WG42)),LLX12A)),((LLX17,LL46),LL9)))),(((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),(((LL41B,(LL12,LL8)),((WG49,(WG40,WG58B)),(WG34B,(WG44,WG59)))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13))))),Methanosarcina);
(((WG43,(LL18,((WG481,WG74),(WG21,WG22)))),((LL1,(((LLX3,WG26),((((LL46,LLX17),LL9),LL43F),WG42)),LLX12A)),((((WG56,(WG16,LL4)),(LL41A,(LL24,((WG23A,LL5),WG58A)))),((WG49,(WG59,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),WG44))),((LL14,(WG36,(WG27,WG14))),(LL37,LL13)))),WG28))),Methanosarcina);
(((LL41A,(LL24,(WG23A,(LL5,WG58A)))),((((((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B))),(((WG27,WG14),(LL14,WG36)),(LL37,LL13))),(WG28,((WG43,(LL18,(WG481,(WG74,(WG21,WG22))))),(LLX12A,((WG42,(LLX3,WG26)),(LL1,(((LLX17,LL46),LL9),LL43F))))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG28,((WG74,(((WG21,WG22),(WG43,LL18)),WG481)),(((LLX12A,(WG42,(LLX3,WG26))),(((LL46,LLX17),LL9),LL43F)),LL1))),(((WG56,(WG16,LL4)),(LL41A,(LL24,((WG23A,WG58A),LL5)))),((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,(WG44,WG59)),((WG49,WG40),WG58B))),(WG27,(WG14,(LL14,WG36))))))),Methanosarcina);
((((LL24,(LL41A,(LL5,(WG58A,WG23A)))),(WG56,(LL4,WG16))),(((((LL12,LL8),LL41B),((((WG59,WG49),WG44),WG34B),(WG58B,WG40))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),(((LLX12A,(LL1,(((((LLX17,LL46),LL9),LL43F),WG42),(LLX3,WG26)))),(((WG43,LL18),(WG21,WG22)),(WG481,WG74))),WG28))),Methanosarcina);
((LLX12A,((((WG74,(((WG43,LL18),(WG21,WG22)),WG481)),(WG28,(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(LL4,WG16))),((((LL12,LL8),LL41B),((((WG59,WG49),WG44),WG34B),(WG58B,WG40))),((LL14,((WG14,WG27),WG36)),(LL13,LL37)))))),LL1),((LL43F,(WG42,((LLX17,LL46),LL9))),(LLX3,WG26)))),Methanosarcina);
(((WG481,(WG74,((WG43,LL18),(WG21,WG22)))),((WG56,(LL4,WG16)),(((LL13,LL37),((WG49,((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),(WG59,WG44))),((WG14,WG27),(WG36,LL14)))),((WG28,(LL1,((LLX12A,(LL43F,(WG42,((LLX17,LL46),LL9)))),(LLX3,WG26)))),(LL41A,((WG58A,WG23A),(LL24,LL5))))))),Methanosarcina);
((((LL43F,((LLX17,LL46),LL9)),(((WG42,(WG26,LLX3)),LLX12A),LL1)),(((((WG56,(LL4,WG16)),((LL24,(WG23A,(LL5,WG58A))),LL41A)),((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))),((WG481,WG74),((WG43,LL18),(WG21,WG22)))),WG28)),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),((((((LL12,LL8),LL41B),(WG34B,(WG49,((WG59,WG44),(WG58B,WG40))))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(((((LLX17,LL46),LL9),((LL43F,((WG42,(WG26,LLX3)),LLX12A)),LL1)),(WG481,(WG74,((WG43,LL18),(WG21,WG22))))),WG28)),(WG56,(LL4,WG16)))),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),((((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(((((LL46,LLX17),LL9),((LL43F,((WG42,(WG26,LLX3)),LLX12A)),LL1)),(WG43,(((WG481,WG74),LL18),(WG21,WG22)))),WG28)),(WG56,(LL4,WG16)))),Methanosarcina);
(((((WG58A,WG23A),(LL24,LL5)),LL41A),(((((LL12,(LL8,LL41B)),((WG58B,(WG49,WG40)),(WG44,(WG34B,WG59)))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(((((LLX17,LL46),LL9),((((LL43F,WG42),(WG26,LLX3)),LLX12A),LL1)),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))),WG28)),(WG56,(LL4,WG16)))),Methanosarcina);
((LL43F,((LL1,(((((WG21,WG22),((WG481,WG74),LL18)),WG43),(WG28,(((WG56,(LL4,WG16)),(((WG58A,WG23A),(LL24,LL5)),LL41A)),((LL13,LL37),((((LL8,LL41B),LL12),((WG58B,WG40),(WG49,((WG44,WG59),WG34B)))),((WG14,WG27),(WG36,LL14))))))),((LL46,LLX17),LL9))),((WG42,(WG26,LLX3)),LLX12A))),Methanosarcina);
(((((WG56,(LL4,WG16)),(LL41A,(((WG58A,WG23A),LL5),LL24))),((((LL8,LL41B),LL12),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((LL14,((WG14,WG27),WG36)),(LL13,LL37)))),(((((LL46,LLX17),LL9),((((LL43F,WG42),WG26),(LLX3,LLX12A)),LL1)),(WG481,(WG74,(LL18,(WG43,(WG21,WG22)))))),WG28)),Methanosarcina);
(((WG43,((WG21,WG22),((WG481,WG74),LL18))),((WG28,(((WG56,(LL4,WG16)),(LL41A,((WG23A,(LL5,WG58A)),LL24))),((WG49,(WG59,(WG34B,((((LL41B,LL8),LL12),(WG58B,WG40)),WG44)))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))))),((((WG26,LLX3),WG42),((LL43F,((LLX17,LL46),LL9)),LL1)),LLX12A))),Methanosarcina);
(((((LL41A,((LL5,(WG23A,WG58A)),LL24)),((LL4,WG16),WG56)),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(((WG40,WG58B),(WG34B,((WG59,WG49),WG44))),((LL12,LL8),LL41B))))),(((((WG22,WG21),(LL18,(WG481,WG74))),WG43),(LL1,(LLX12A,(WG42,((LL43F,((LLX17,LL46),LL9)),(WG26,LLX3)))))),WG28)),Methanosarcina);
(((((((LL5,(WG23A,WG58A)),LL24),LL41A),((LL4,WG16),WG56)),((LL13,LL37),((WG27,(WG14,(WG36,LL14))),(((WG40,WG58B),(WG34B,((WG59,WG49),WG44))),((LL12,LL8),LL41B))))),((((((WG22,WG21),(WG43,LL18)),WG481),WG74),(((LLX17,LL46),LL9),((((WG26,(LL1,LLX3)),WG42),LLX12A),LL43F))),WG28)),Methanosarcina);
(((((LL5,(WG23A,WG58A)),LL24),LL41A),(((LL4,WG16),WG56),(((((WG40,WG58B),(WG34B,((WG59,WG49),WG44))),((LL12,LL8),LL41B)),((LL13,LL37),((WG36,LL14),(WG27,WG14)))),(((WG43,(LL18,((WG481,WG74),(WG22,WG21)))),(((LL46,LLX17),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1))),WG28)))),Methanosarcina);
(((((WG74,(((WG22,WG21),(WG43,LL18)),WG481)),(((LLX17,LL46),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1))),WG28),(((((LL5,(WG23A,WG58A)),LL24),LL41A),((LL4,WG16),WG56)),((WG44,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),(WG59,WG49))),((LL13,LL37),((WG36,LL14),(WG27,WG14)))))),Methanosarcina);
((((((LL5,WG58A),LL24),WG23A),LL41A),(((LL4,WG16),WG56),(((WG49,((WG34B,(WG59,WG44)),(((LL12,LL8),LL41B),(WG40,WG58B)))),((LL13,LL37),(LL14,((WG27,WG14),WG36)))),(((WG43,(LL18,(WG481,(WG74,(WG22,WG21))))),(((LLX17,LL46),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1))),WG28)))),Methanosarcina);
(((((((WG27,WG14),(WG36,LL14)),((WG49,((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),WG59)),(LL13,LL37))),(((WG22,(WG21,(WG43,(LL18,(WG481,WG74))))),(((LL46,LLX17),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1))),WG28)),((((WG23A,WG58A),LL5),LL24),LL41A)),((LL4,WG16),WG56)),Methanosarcina);
(((((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),(((LL46,LLX17),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1))),WG28),((((((WG23A,WG58A),LL5),LL24),LL41A),((LL4,WG16),WG56)),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),(WG59,WG49)))))),Methanosarcina);
(((((WG43,((WG481,WG74),(LL18,(WG22,WG21)))),(LLX12A,((WG26,(LL1,LLX3)),(LL43F,(((LLX17,LL46),LL9),WG42))))),WG28),((((((WG23A,WG58A),LL5),LL24),LL41A),((LL4,WG16),WG56)),((LL13,LL37),(LL14,(((WG49,((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),WG59)),(WG27,WG14)),WG36))))),Methanosarcina);
((((((WG23A,WG58A),LL5),LL24),LL41A),(((LL4,WG16),WG56),(((WG49,((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),WG59)),((((WG27,WG14),WG36),LL14),(LL13,LL37))),(((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),((LLX12A,((WG26,LLX3),(LL43F,(((LL46,LLX17),LL9),WG42)))),LL1)),WG28)))),Methanosarcina);
(((((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),((LLX12A,((WG26,LLX3),(WG42,(LL43F,((LL46,LLX17),LL9))))),LL1)),WG28),((((((WG23A,WG58A),LL5),LL24),LL41A),((LL4,WG16),WG56)),((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG59,WG49),WG44)))),(((WG27,WG14),WG36),LL14))))),Methanosarcina);
((((LL41A,((WG23A,(LL5,WG58A)),LL24)),(WG56,(WG16,LL4))),(((((WG27,WG14),(LL14,WG36)),((LL41B,(LL12,LL8)),((((WG49,WG59),WG44),WG34B),(WG58B,WG40)))),(LL37,LL13)),(((WG43,((LL18,(WG481,WG74)),(WG21,WG22))),WG28),(LL1,((LL9,(LLX17,LL46)),((LLX12A,(WG42,(WG26,LLX3))),LL43F)))))),Methanosarcina);
((LLX12A,((((WG481,(WG74,(((WG21,WG22),WG43),LL18))),((((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),((LL37,LL13),(LL14,(WG36,(WG27,WG14)))))),WG28)),LL1),((WG26,LLX3),((((LLX17,LL46),LL9),LL43F),WG42)))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG56,(WG16,LL4)),(((WG49,(WG59,(WG44,(WG34B,((WG58B,WG40),((LL12,LL8),LL41B)))))),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),(WG28,((LLX12A,(LL1,((WG26,LLX3),((((LLX17,LL46),LL9),WG42),LL43F)))),(WG43,((LL18,(WG481,WG74)),(WG21,WG22)))))))),Methanosarcina);
((LLX12A,((((WG43,(LL18,((WG481,WG74),(WG21,WG22)))),((((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))),((WG49,(WG40,((((LL12,LL8),LL41B),((WG59,WG44),WG34B)),WG58B))),((((LL37,LL13),WG27),WG14),(LL14,WG36)))),WG28)),LL1),(((WG26,LLX3),(((LLX17,LL46),LL9),LL43F)),WG42))),Methanosarcina);
(((((LL5,(WG58A,WG23A)),LL24),LL41A),((WG56,(WG16,LL4)),(((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG58B,WG40))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),(WG28,((((LL1,(((LLX17,LL46),LL9),LL43F)),(WG42,(WG26,LLX3))),LLX12A),(WG43,((WG21,WG22),(LL18,(WG481,WG74))))))))),Methanosarcina);
((WG28,(((((LLX17,LL46),LL9),((((LL43F,WG42),(WG26,LLX3)),LLX12A),LL1)),(WG74,((((WG21,WG22),LL18),WG43),WG481))),(((LL24,(LL41A,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),((((WG49,WG59),WG44),WG34B),((WG58B,WG40),((LL12,LL8),LL41B)))))))),Methanosarcina);
((((LL1,((LL43F,((LL46,LLX17),LL9)),((WG42,(WG26,LLX3)),LLX12A))),(WG481,(WG74,((WG21,WG22),(LL18,WG43))))),((((LL24,(LL41A,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),(((WG59,WG44),WG34B),(WG58B,(WG49,WG40)))),((LL37,LL13),((WG27,WG14),(LL14,WG36))))),WG28)),Methanosarcina);
(((WG28,((LL1,((WG42,(LL43F,((LLX17,LL46),LL9))),((WG26,LLX3),LLX12A))),((WG43,((WG21,WG22),LL18)),(WG481,WG74)))),(((LL24,(LL41A,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),((WG44,(WG34B,WG59)),(WG58B,(WG49,WG40)))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))))),Methanosarcina);
(((LL1,(((LLX17,LL46),LL9),(LL43F,(LLX12A,(WG42,(WG26,LLX3)))))),((((LL24,(LL41A,(WG23A,(LL5,WG58A)))),(WG56,(WG16,LL4))),(((WG43,((WG21,WG22),LL18)),(WG481,WG74)),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),((((LL12,LL8),LL41B),((WG34B,(WG59,WG44)),(WG58B,WG40))),WG49))))),WG28)),Methanosarcina);
((LLX12A,((WG42,(WG26,LLX3)),((LL1,((((WG43,(((WG481,WG74),(WG21,WG22)),LL18)),(((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((WG49,(WG34B,(WG59,WG44))),(WG58B,WG40)),((LL12,LL8),LL41B)))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4))))),WG28),((LLX17,LL46),LL9))),LL43F))),Methanosarcina);
((((WG16,LL4),WG56),((LL24,((WG58A,(LL5,WG23A)),LL41A)),(((((LL8,LL12),LL41B),(((WG44,WG59),WG34B),((WG49,WG40),WG58B))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),(WG28,((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),(LL1,(LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3))))))))),Methanosarcina);
((((((LL24,LL5),WG23A),WG58A),LL41A),((((LL37,LL13),(((WG27,WG14),(LL14,WG36)),((((WG44,(WG49,WG59)),WG34B),(WG40,WG58B)),((LL8,LL12),LL41B)))),(WG28,((WG481,(WG74,((WG21,WG22),(WG43,LL18)))),((LL1,(((LL43F,WG42),(WG26,LLX3)),LLX12A)),((LL46,LLX17),LL9))))),((WG16,LL4),WG56))),Methanosarcina);
(((((LL5,(WG23A,WG58A)),LL24),LL41A),((((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((WG44,(WG49,WG59)),WG34B),((WG40,WG58B),((LL8,LL12),LL41B))))),(WG28,((((WG21,WG22),(WG43,LL18)),(WG481,WG74)),(LL1,(((WG42,(WG26,LLX3)),LLX12A),(LL43F,((LL46,LLX17),LL9))))))),((WG16,LL4),WG56))),Methanosarcina);
((WG28,(((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),(((LL46,LLX17),LL9),(((LL43F,LLX12A),(WG42,(WG26,LLX3))),LL1))),((((WG16,LL4),WG56),(((LL5,(WG23A,WG58A)),LL24),LL41A)),((LL37,LL13),((LL14,(WG36,(WG27,WG14))),(((LL12,LL8),LL41B),(((WG59,WG44),WG34B),((WG49,WG40),WG58B)))))))),Methanosarcina);
((LLX12A,((WG42,(WG26,LLX3)),((LL1,(((((((WG16,LL4),WG56),(((WG58A,(LL5,LL24)),WG23A),LL41A)),((((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))),((LL37,LL13),(LL14,(WG36,(WG27,WG14)))))),(WG481,(WG74,(LL18,((WG21,WG22),WG43))))),WG28),((LLX17,LL46),LL9))),LL43F))),Methanosarcina);
(((WG43,((WG481,((WG21,WG22),WG74)),LL18)),((WG28,(((LL43F,(LLX12A,(WG42,(WG26,LLX3)))),((LL46,LLX17),LL9)),LL1)),((((WG16,LL4),WG56),(((LL5,LL24),(WG23A,WG58A)),LL41A)),((LL37,LL13),((WG36,((WG27,WG14),LL14)),(((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG40,WG58B)))))))),Methanosarcina);
((LLX12A,(((LL43F,WG42),(WG26,LLX3)),((((((((WG16,LL4),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),((((LL12,LL8),LL41B),((WG44,(WG34B,WG59)),(WG40,WG58B))),WG49)))),WG28),(WG43,(WG74,(LL18,(WG481,(WG21,WG22)))))),((LL46,LLX17),LL9)),LL1))),Methanosarcina);
((WG28,((((((WG16,LL4),WG56),(LL41A,((WG58A,(LL5,WG23A)),LL24))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((WG40,WG58B),(WG49,(WG44,(WG34B,WG59)))),((LL12,LL8),LL41B))))),((WG481,WG74),((WG43,LL18),(WG21,WG22)))),(LL1,(LLX12A,(((((LL46,LLX17),LL9),LL43F),WG42),(WG26,LLX3)))))),Methanosarcina);
(((WG43,(LL18,(((WG21,WG22),WG74),WG481))),(((LL1,(((LLX17,LL46),LL9),(((WG42,(WG26,LLX3)),LLX12A),LL43F))),WG28),((((WG16,LL4),WG56),(LL41A,((WG58A,(LL5,WG23A)),LL24))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),((((WG40,WG58B),WG49),((WG44,WG59),WG34B)),((LL12,LL8),LL41B))))))),Methanosarcina);
((((LL1,((WG26,(LLX12A,WG42)),LLX3)),(LL43F,((LLX17,LL46),LL9))),(WG28,((((WG16,LL4),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),((WG22,((WG43,(LL18,(WG74,WG481))),WG21)),((((WG40,WG58B),(WG49,((WG44,WG59),WG34B))),((LL12,LL8),LL41B)),((LL37,LL13),((WG27,WG14),(LL14,WG36)))))))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(((((WG16,LL4),WG56),((((WG34B,(WG44,WG59)),(((LL41B,LL8),LL12),(WG58B,WG40))),WG49),((LL14,((WG14,WG27),WG36)),(LL37,LL13)))),((WG74,((WG22,WG21),(WG481,(WG43,LL18)))),(LL1,(((WG26,(WG42,(LL43F,((LLX17,LL46),LL9)))),LLX12A),LLX3)))),WG28)),Methanosarcina);
((((WG481,((WG74,(WG22,WG21)),LL18)),WG43),((WG28,((((WG16,LL4),WG56),(LL41A,(LL24,(LL5,(WG23A,WG58A))))),(WG49,((WG58B,WG40),(((WG34B,(WG44,WG59)),((LL41B,LL8),LL12)),((WG14,WG27),((WG36,LL14),(LL37,LL13)))))))),(LL1,((((LLX3,WG26),(WG42,LL43F)),LLX12A),((LLX17,LL46),LL9))))),Methanosarcina);
((((((WG16,LL4),WG56),(((LL5,(WG23A,WG58A)),LL24),LL41A)),(((LL37,LL13),((WG14,WG27),(WG36,LL14))),((WG34B,(WG44,(WG49,WG59))),((LL41B,(LL8,LL12)),(WG58B,WG40))))),((((LL43F,((LLX17,LL46),LL9)),(LL1,(((LLX3,WG26),WG42),LLX12A))),((WG481,WG74),((WG22,WG21),(WG43,LL18)))),WG28)),Methanosarcina);
((((LL43F,((LLX17,LL46),LL9)),(LL1,(((LLX3,WG26),WG42),LLX12A))),((((((WG16,LL4),WG56),(((LL5,(WG23A,WG58A)),LL24),LL41A)),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((LL37,LL13),((WG36,LL14),(WG14,WG27))))),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))),WG28)),Methanosarcina);
(((((WG16,LL4),WG56),(((WG23A,WG58A),(LL24,LL5)),LL41A)),(((LL37,LL13),(((WG36,LL14),(WG14,WG27)),(WG49,(WG59,(WG34B,(WG44,(((LL12,LL8),LL41B),(WG58B,WG40)))))))),(((((LLX17,LL46),LL9),(LL1,(LL43F,((LLX3,WG26),(WG42,LLX12A))))),((WG22,WG21),((WG43,LL18),(WG481,WG74)))),WG28))),Methanosarcina);
(((((WG23A,WG58A),(LL24,LL5)),LL41A),((((WG49,((WG59,WG44),((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B))),((LL37,LL13),((WG36,LL14),(WG14,WG27)))),(((LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX12A,(LLX3,WG26)))),((WG74,((WG22,WG21),(WG43,LL18))),WG481)),WG28)),((WG16,LL4),WG56))),Methanosarcina);
(((((WG16,LL4),WG56),((WG58A,(LL24,(WG23A,LL5))),LL41A)),(((LL37,LL13),((LL14,((WG14,WG27),WG36)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))))),(((LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX12A,(LLX3,WG26)))),(((WG43,LL18),(WG74,(WG22,WG21))),WG481)),WG28))),Methanosarcina);
(((WG481,(WG74,(((WG22,WG21),WG43),LL18))),((WG28,((((WG16,LL4),WG56),((((WG23A,LL5),WG58A),LL41A),LL24)),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))))),((LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26))),LLX12A))),Methanosarcina);
(((LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX12A,(LLX3,WG26)))),(WG28,((((WG16,LL4),WG56),(((LL5,(WG58A,WG23A)),LL41A),LL24)),(((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))))),(WG74,((((WG22,WG21),WG43),LL18),WG481)))))),Methanosarcina);
(((((WG16,LL4),WG56),((((LL5,LL24),WG23A),WG58A),LL41A)),(((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),(WG28,((WG22,(WG21,((WG43,LL18),(WG481,WG74)))),(((LLX17,LL46),LL9),(((LLX12A,LL43F),(LLX3,(WG42,WG26))),LL1)))))),Methanosarcina);
(((WG481,((LL18,(WG43,(WG22,WG21))),WG74)),(((((WG34B,((WG49,WG59),WG44)),(((LL12,LL8),LL41B),(WG40,WG58B))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),((LL41A,(((WG58A,WG23A),LL5),LL24)),(WG56,(LL4,WG16)))),((LL1,(LLX12A,((WG26,LLX3),((((LLX17,LL46),LL9),WG42),LL43F)))),WG28))),Methanosarcina);
(((LL41A,(((WG58A,LL5),WG23A),LL24)),((WG56,(LL4,WG16)),(((((LL18,(WG481,(WG74,(WG22,WG21)))),WG43),(LL1,(LLX12A,((WG26,LLX3),(WG42,(LL43F,((LLX17,LL46),LL9))))))),WG28),(((((LL12,LL8),LL41B),((WG49,WG40),WG58B)),(WG34B,(WG59,WG44))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))))),Methanosarcina);
(((LL1,(((LL46,LLX17),LL9),(LL43F,(LLX12A,(WG42,(WG26,LLX3)))))),(((((LL13,LL37),((((WG49,(WG34B,(WG59,WG44))),(WG40,WG58B)),((LL12,LL8),LL41B)),((WG14,WG27),(WG36,LL14)))),((LL41A,(((WG58A,LL5),WG23A),LL24)),(WG56,(LL4,WG16)))),((WG74,((WG43,LL18),(WG22,WG21))),WG481)),WG28)),Methanosarcina);
(((((LL13,LL37),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((WG14,WG27),(WG36,LL14)))),((LL41A,(((WG58A,LL5),WG23A),LL24)),(WG56,(LL4,WG16)))),((WG43,(LL18,(((WG22,WG21),WG74),WG481))),(WG28,(LL1,(((LLX17,LL46),LL9),((WG42,(WG26,LLX3)),(LL43F,LLX12A))))))),Methanosarcina);
((LLX12A,((((((((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),((LL41A,(WG58A,((LL24,WG23A),LL5))),(WG56,(LL4,WG16)))),(WG22,(WG21,(WG74,((WG481,LL18),WG43))))),WG28),LL1),(LL43F,((LLX17,LL46),LL9))),(WG42,(WG26,LLX3)))),Methanosarcina);
((((WG28,((LLX12A,((LL1,(LL43F,((LLX17,LL46),LL9))),(WG42,(WG26,LLX3)))),(WG43,((((WG22,WG21),WG74),WG481),LL18)))),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16)))),Methanosarcina);
(((LLX12A,(((LL43F,((LLX17,LL46),LL9)),WG42),(WG26,(LL1,LLX3)))),(((((LL13,LL37),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),((WG14,WG27),(WG36,LL14)))),((LL41A,((WG23A,(WG58A,LL5)),LL24)),(WG56,(LL4,WG16)))),(WG43,(((WG22,WG21),(WG74,WG481)),LL18))),WG28)),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((WG56,(LL4,WG16)),((((((LL43F,((LLX17,LL46),LL9)),((WG42,(WG26,LLX3)),LLX12A)),LL1),(WG43,((WG22,WG21),((WG74,WG481),LL18)))),WG28),((LL13,LL37),((WG49,(WG59,(WG44,(((WG40,WG58B),((LL8,LL41B),LL12)),WG34B)))),(LL14,((WG14,WG27),WG36))))))),Methanosarcina);
(((((((LL43F,((LL46,LLX17),LL9)),((WG42,(WG26,LLX3)),LLX12A)),LL1),(WG43,(LL18,((WG74,(WG22,WG21)),WG481)))),WG28),((((LL41B,(LL12,LL8)),((WG34B,((WG49,WG59),WG44)),(WG40,WG58B))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),((LL41A,((WG58A,(LL5,WG23A)),LL24)),(WG56,(LL4,WG16))))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((((LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),(WG42,(WG26,LLX3)))),(WG43,(LL18,((WG74,(WG22,WG21)),WG481)))),WG28),((WG56,(LL4,WG16)),((WG49,(WG40,(WG58B,(((LL12,LL8),LL41B),((WG59,WG34B),WG44))))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))))),Methanosarcina);
(((WG43,((LL18,(WG74,WG481)),(WG22,WG21))),((((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4))),(((LL12,(LL41B,LL8)),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),(LL14,((WG27,WG14),WG36))))),(WG28,(((LLX17,LL46),LL9),(LL1,(LL43F,(LLX12A,(WG42,(LLX3,WG26))))))))),Methanosarcina);
(((LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26)))),((((WG74,(((WG43,LL18),(WG22,WG21)),WG481)),(((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4))),((WG36,LL14),(((WG27,WG14),(((WG44,(WG59,WG34B)),(WG58B,(WG49,WG40))),((LL41B,LL8),LL12))),(LL37,LL13))))),WG28),((LL46,LLX17),LL9))),Methanosarcina);
((LLX12A,((WG42,((LL43F,(LLX3,(((LLX17,LL46),LL9),LL1))),WG26)),((WG74,(((WG43,LL18),(WG22,WG21)),WG481)),((((LL41A,(LL24,((WG23A,LL5),WG58A))),(WG56,(WG16,LL4))),(((((WG44,(WG59,WG49)),WG34B),(WG58B,WG40)),((LL41B,LL8),LL12)),((LL37,LL13),((WG36,LL14),(WG27,WG14))))),WG28)))),Methanosarcina);
((((LL5,(WG58A,WG23A)),(LL41A,LL24)),((WG56,(WG16,LL4)),(((LL37,LL13),(((WG36,LL14),(WG27,WG14)),((((WG44,(WG59,WG49)),WG34B),(WG58B,WG40)),(LL41B,(LL8,LL12))))),(WG28,((LL1,((((WG26,LLX3),(LL43F,WG42)),LLX12A),((LLX17,LL46),LL9))),(WG22,(WG21,(WG74,((LL18,WG43),WG481))))))))),Methanosarcina);
((((((LLX17,LL46),LL9),(LL1,(((WG26,LLX3),(LL43F,WG42)),LLX12A))),(WG43,((WG481,((WG22,WG21),WG74)),LL18))),((((LL41A,(LL24,(WG58A,(WG23A,LL5)))),(WG56,(WG16,LL4))),((LL37,LL13),(((WG36,LL14),(WG27,WG14)),(WG49,(((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),WG44),WG59))))),WG28)),Methanosarcina);
(((LL41A,(LL24,(WG58A,(WG23A,LL5)))),((WG56,(WG16,LL4)),(((LL37,LL13),(((WG36,LL14),(WG27,WG14)),(((LL12,LL8),LL41B),(((WG44,WG59),WG34B),((WG49,WG58B),WG40))))),(WG28,(((((WG26,LLX3),WG42),LLX12A),((LL43F,((LL46,LLX17),LL9)),LL1)),(((WG22,WG21),(WG74,WG481)),(LL18,WG43))))))),Methanosarcina);
(((WG28,(((LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3)))),((LLX17,LL46),LL9)),(WG43,((WG22,WG21),((WG74,WG481),LL18))))),(((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4))),(((((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)),((LL12,LL8),LL41B)),((LL37,LL13),((WG36,LL14),(WG27,WG14)))))),Methanosarcina);
((((LL41A,((WG58A,(LL5,LL24)),WG23A)),(WG56,(WG16,LL4))),((((WG34B,((WG58B,WG40),(WG44,(WG49,WG59)))),((LL12,LL8),LL41B)),((LL37,LL13),((WG36,LL14),(WG27,WG14)))),((WG22,(WG21,((WG43,WG74),(WG481,LL18)))),(WG28,((LL1,((LL43F,LLX12A),(WG42,(WG26,LLX3)))),((LL46,LLX17),LL9)))))),Methanosarcina);
((((LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3)))),((LL46,LLX17),LL9)),(((((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(WG16,LL4))),((((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))),((LL12,LL8),LL41B)),((LL37,LL13),(LL14,((WG27,WG14),WG36))))),(WG43,(((WG481,WG74),LL18),(WG22,WG21)))),WG28)),Methanosarcina);
(((((LL1,(((WG42,(WG26,LLX3)),LL43F),LLX12A)),((LLX17,LL46),LL9)),((((LL41A,(((LL5,WG23A),WG58A),LL24)),(WG56,(WG16,LL4))),(((((WG27,WG14),(((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))),((LL12,LL8),LL41B))),WG36),LL14),(LL37,LL13))),WG28)),(((WG481,WG74),(WG43,LL18)),(WG22,WG21))),Methanosarcina);
((LLX12A,(((((LL9,(LL46,LLX17)),WG42),(LLX3,WG26)),(((WG28,(((LL37,LL13),((WG27,((LL14,WG36),WG14)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG59,WG49),WG44)))))),((WG56,(LL4,WG16)),(LL41A,((WG58A,(LL5,WG23A)),LL24))))),(WG74,(((WG43,LL18),(WG21,WG22)),WG481))),LL1)),LL43F)),Methanosarcina);
(((((LL37,LL13),((WG27,((LL14,WG36),WG14)),(((WG34B,(WG59,WG44)),(((LL12,LL8),LL41B),(WG58B,WG40))),WG49))),((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24)))),(((((WG43,LL18),(WG74,(WG21,WG22))),WG481),(LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX12A,(LLX3,WG26))))),WG28)),Methanosarcina);
(((((WG74,(((WG21,WG22),(WG43,LL18)),WG481)),(WG56,(LL4,WG16))),(((WG23A,LL5),WG58A),(LL24,LL41A))),(((LL1,(((LLX12A,(WG42,(LLX3,WG26))),LL43F),((LL46,LLX17),LL9))),WG28),((WG44,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),(WG49,WG59))),((LL37,LL13),((LL14,WG36),(WG14,WG27)))))),Methanosarcina);
(((WG43,(LL18,((WG481,WG74),(WG21,WG22)))),((((LL1,((LL43F,LLX12A),(WG42,(LLX3,WG26)))),((LL46,LLX17),LL9)),WG28),(((WG49,(WG59,(WG44,((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B)))),((LL37,LL13),((LL14,WG36),(WG14,WG27)))),((WG56,(LL4,WG16)),(LL41A,((WG23A,(LL5,WG58A)),LL24)))))),Methanosarcina);
((LLX12A,((WG42,(((LL43F,((LLX17,LL46),LL9)),LL1),(LLX3,WG26))),((WG28,((((LL12,(LL8,LL41B)),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),((LL37,LL13),((LL14,WG36),(WG14,WG27)))),((WG56,(LL4,WG16)),(LL41A,(((WG23A,LL5),WG58A),LL24))))),(WG481,(WG74,((WG21,WG22),(WG43,LL18))))))),Methanosarcina);
(((WG481,(WG74,((WG21,WG22),(WG43,LL18)))),((LLX12A,(((LL43F,(WG42,((LL46,LLX17),LL9))),LL1),(LLX3,WG26))),(WG28,(((LL37,LL13),(((LL14,WG36),(WG14,WG27)),(((WG34B,(WG59,WG44)),WG49),((LL12,(LL8,LL41B)),(WG58B,WG40))))),((WG56,(LL4,WG16)),(LL41A,((LL24,LL5),(WG58A,WG23A)))))))),Methanosarcina);
(((LL41A,((LL24,(WG23A,LL5)),WG58A)),(((((WG481,(WG74,((WG21,WG22),(WG43,LL18)))),(((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1),((LL46,LLX17),LL9))),WG28),(((LL12,(LL8,LL41B)),((WG58B,WG40),(WG34B,((WG59,WG44),WG49)))),((LL37,LL13),((LL14,WG36),(WG14,WG27))))),(WG56,(LL4,WG16)))),Methanosarcina);
((((((WG481,(WG43,LL18)),(WG74,(WG21,WG22))),(((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1),((LLX17,LL46),LL9))),WG28),(((WG49,(WG59,(((((LL8,LL12),LL41B),(WG58B,WG40)),WG34B),WG44))),((LL37,LL13),((LL14,WG36),(WG14,WG27)))),((WG56,(LL4,WG16)),(LL41A,(((LL5,LL24),WG23A),WG58A))))),Methanosarcina);
(((((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1),((LL46,LLX17),LL9)),((WG28,(((LL37,LL13),(((LL14,WG36),(WG14,WG27)),(((LL12,LL8),LL41B),((WG58B,(WG49,WG40)),(WG34B,(WG44,WG59)))))),((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24))))),((WG481,WG74),((WG43,(WG21,WG22)),LL18)))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),((LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26))),LL1)),WG28),((LL37,LL13),((WG27,((LL14,WG36),WG14)),(WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44)))))),(WG56,(LL4,WG16)))),Methanosarcina);
((((LL24,LL41A),(LL5,(WG58A,WG23A))),((WG56,(LL4,WG16)),((WG28,((WG481,(WG74,((LL18,(WG21,WG22)),WG43))),(LLX12A,(((LL43F,(LL9,(LL46,LLX17))),WG42),(LL1,(LLX3,WG26)))))),((LL13,LL37),(((LL12,(LL8,LL41B)),((WG40,WG58B),(WG49,((WG59,WG34B),WG44)))),((WG36,LL14),(WG14,WG27))))))),Methanosarcina);
(((LL41A,((LL24,LL5),(WG58A,WG23A))),((WG56,(LL4,WG16)),((WG28,((WG43,((WG481,WG74),(LL18,(WG21,WG22)))),(((LLX17,LL46),LL9),((LLX3,((WG42,WG26),(LLX12A,LL43F))),LL1)))),((LL13,LL37),(((LL12,(LL8,LL41B)),((WG40,WG58B),((WG44,(WG59,WG49)),WG34B))),((WG36,LL14),(WG14,WG27))))))),Methanosarcina);
(((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),((((LL46,LLX17),LL9),(((WG42,(WG26,LLX3)),(LL43F,LLX12A)),LL1)),((((WG49,(((WG34B,(WG40,((LL41B,(LL12,LL8)),WG58B))),WG44),WG59)),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(LL4,WG16)))),WG28))),Methanosarcina);
((LLX12A,(((((((WG49,(((WG34B,(WG40,((LL12,(LL8,LL41B)),WG58B))),WG44),WG59)),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(LL4,WG16)))),WG28),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))),LL1),(((((LL46,LLX17),LL9),LL43F),WG42),(WG26,LLX3)))),Methanosarcina);
(((((WG28,((WG481,(WG74,((WG43,LL18),(WG21,WG22)))),(LL1,(((LL43F,(WG42,((LL46,LLX17),LL9))),(WG26,LLX3)),LLX12A)))),((LL13,LL37),((WG44,((WG59,WG49),(WG34B,((LL12,(LL8,LL41B)),(WG58B,WG40))))),((WG14,WG27),(WG36,LL14))))),((LL41A,(WG23A,(LL5,WG58A))),LL24)),(WG56,(LL4,WG16))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG56,(LL4,WG16)),((WG28,((WG481,(WG74,((WG43,LL18),(WG21,WG22)))),(LL1,(((LL43F,(WG42,((LL46,LLX17),LL9))),(WG26,LLX3)),LLX12A)))),((LL13,LL37),(((LL12,(LL8,LL41B)),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))),((WG14,WG27),(WG36,LL14))))))),Methanosarcina);
((((LL5,(WG58A,WG23A)),(LL24,LL41A)),((LL4,WG16),(((WG28,(((LL18,(((WG21,WG22),WG74),WG481)),WG43),(LL1,((LL43F,((LL46,LLX17),LL9)),((WG42,(WG26,LLX3)),LLX12A))))),((LL13,LL37),((WG44,((WG59,WG49),(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))))),((WG14,WG27),(WG36,LL14))))),WG56))),Methanosarcina);
((((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG28,(((WG481,WG74),(LL18,(WG43,(WG21,WG22)))),(LL1,((LL43F,((LL46,LLX17),LL9)),((WG42,(WG26,LLX3)),LLX12A))))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG49,(WG44,(WG59,WG34B))))),((WG14,WG27),(WG36,LL14)))))),(WG56,(LL4,WG16))),Methanosarcina);
((((WG28,((WG43,((WG21,WG22),((WG481,WG74),LL18))),(((LL46,LLX17),LL9),((((WG42,(WG26,LLX3)),LLX12A),LL43F),LL1)))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((WG14,WG27),(WG36,LL14))))),((WG56,(LL4,WG16)),(LL41A,(((WG23A,LL5),WG58A),LL24)))),Methanosarcina);
(((((LLX17,LL46),LL9),((((LL43F,WG42),(WG26,LLX3)),LLX12A),LL1)),(WG28,((((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),((WG56,(LL4,WG16)),(LL41A,(LL24,(LL5,(WG58A,WG23A)))))),(WG74,((LL18,(WG43,(WG21,WG22))),WG481))))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(((WG28,((WG481,((WG74,(WG22,WG21)),(WG43,LL18))),(LL1,(LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)))))),(((WG49,(((WG58B,(WG44,(WG34B,WG59))),(LL41B,(LL12,LL8))),WG40)),((WG36,LL14),(WG14,WG27))),(LL13,LL37))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LLX12A,((LL1,(WG42,(LL43F,((LLX17,LL46),LL9)))),(LLX3,WG26))),(WG28,((((((LL41B,(LL12,LL8)),((WG58B,WG40),(WG49,(WG34B,(WG59,WG44))))),((WG36,LL14),(WG14,WG27))),(LL13,LL37)),((WG56,(WG16,LL4)),(LL41A,(LL24,(WG23A,(WG58A,LL5)))))),(WG43,(LL18,(WG481,(WG74,(WG22,WG21)))))))),Methanosarcina);
(((LLX12A,(WG42,(((LL43F,((LLX17,LL46),LL9)),(LL1,LLX3)),WG26))),(WG28,((((WG49,((WG44,(WG34B,WG59)),(((LL12,LL8),LL41B),(WG58B,WG40)))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG23A,WG58A)))))),((((WG43,LL18),(WG22,WG21)),WG74),WG481)))),Methanosarcina);
((LLX12A,((WG42,((LL43F,((LL46,LLX17),LL9)),(LLX3,WG26))),(LL1,(WG28,((((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),((WG56,(WG16,LL4)),((LL5,(WG23A,WG58A)),(LL41A,LL24)))),(((((WG22,WG21),WG74),WG481),LL18),WG43)))))),Methanosarcina);
((((WG56,(WG16,LL4)),(((LL24,LL5),(WG23A,WG58A)),LL41A)),(((WG481,(((LL18,WG43),(WG22,WG21)),WG74)),((((LL46,LLX17),LL9),(LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26))))),WG28)),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((WG14,WG27),(WG36,LL14)))))),Methanosarcina);
(((WG43,((WG22,WG21),((WG74,WG481),LL18))),((LLX12A,(((LL43F,WG42),(LLX3,WG26)),(((LLX17,LL46),LL9),LL1))),(WG28,(((LL13,LL37),((WG36,LL14),((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),(WG14,WG27)))),((WG56,(WG16,LL4)),(((LL24,LL5),(WG23A,WG58A)),LL41A)))))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((((WG43,((WG22,WG21),((WG74,WG481),LL18))),(LL1,(((WG42,WG26),(LLX12A,LLX3)),(LL43F,((LLX17,LL46),LL9))))),WG28),(((LL12,(LL8,LL41B)),(WG58B,(WG40,((WG44,(WG49,WG59)),WG34B)))),((LL13,LL37),((WG14,WG27),(WG36,LL14))))),(WG56,(WG16,LL4)))),Methanosarcina);
((((WG56,(WG16,LL4)),(((LL5,(WG23A,WG58A)),LL24),LL41A)),(((WG22,(WG21,(((WG74,WG481),LL18),WG43))),((LL1,((WG42,LLX12A),((LL43F,((LLX17,LL46),LL9)),(WG26,LLX3)))),WG28)),((LL13,LL37),(LL14,(((((LL41B,(LL12,LL8)),(((WG49,(WG59,WG44)),WG34B),(WG58B,WG40))),WG27),WG14),WG36))))),Methanosarcina);
(((((WG74,(WG481,((LL18,WG43),(WG22,WG21)))),(LL1,(LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),(WG26,LLX3))))),WG28),(((WG56,(WG16,LL4)),((WG58A,(LL5,WG23A)),(LL24,LL41A))),(((LL13,LL37),((WG27,WG14),(WG36,LL14))),(((WG44,(WG49,WG59)),WG34B),((WG58B,WG40),((LL12,LL8),LL41B)))))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(((((LL13,LL37),((WG27,WG14),(WG36,LL14))),((((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)),((LL12,LL8),LL41B))),(((WG481,((WG43,LL18),(WG74,(WG22,WG21)))),((((LL46,LLX17),LL9),LL1),(LLX12A,((WG26,LLX3),(LL43F,WG42))))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,(LL24,(WG58A,(WG23A,LL5)))),(((LL4,WG16),WG56),(((((WG58B,WG40),(WG34B,((WG59,WG49),WG44))),((LL12,LL8),LL41B)),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),(((LL1,((LL43F,(LL46,(LL9,LLX17))),((WG42,(LLX3,WG26)),LLX12A))),(((WG21,WG22),((WG481,WG74),LL18)),WG43)),WG28)))),Methanosarcina);
((((((LL43F,(LL9,(LLX17,LL46))),WG42),(((((LL18,WG481),(WG74,(WG21,WG22))),WG43),(WG28,(((LL41A,(((LL24,LL5),WG23A),WG58A)),((LL4,WG16),WG56)),(((((WG58B,WG40),(WG34B,((WG59,WG49),WG44))),((LL12,LL8),LL41B)),(((WG14,WG27),WG36),LL14)),(LL13,LL37))))),LL1)),(LLX3,WG26)),LLX12A),Methanosarcina);
((((((LL43F,(LL9,(LLX17,LL46))),WG42),(((WG74,(((WG21,WG22),(WG43,LL18)),WG481)),(WG28,(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((LL4,WG16),WG56)),((((WG58B,WG40),(WG34B,((WG59,WG49),WG44))),((LL12,LL8),LL41B)),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))))),LL1)),(LLX3,WG26)),LLX12A),Methanosarcina);
(((LL41A,(WG58A,((WG23A,LL24),LL5))),(((LL4,WG16),WG56),(((LL13,LL37),((WG34B,(((WG59,WG49),WG44),(((LL12,LL8),LL41B),(WG58B,WG40)))),((WG14,WG27),(WG36,LL14)))),(((LL1,(((WG42,(LLX3,WG26)),LLX12A),(LL43F,((LL46,LLX17),LL9)))),((((WG21,WG22),LL18),(WG481,WG74)),WG43)),WG28)))),Methanosarcina);
((LLX12A,(((((((WG21,WG22),LL18),(WG481,WG74)),WG43),(WG28,((((LL41A,(LL5,(WG58A,WG23A))),LL24),((LL4,WG16),WG56)),((((LL12,LL8),LL41B),(WG58B,(WG40,(WG34B,((WG59,WG49),WG44))))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37)))))),LL1),((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)))),Methanosarcina);
(((((LLX3,WG26),(LLX12A,(((WG74,(((WG43,LL18),(WG21,WG22)),WG481)),(WG28,(((LL41A,(((LL5,LL24),WG23A),WG58A)),((LL4,WG16),WG56)),((LL13,LL37),((((LL12,LL8),LL41B),(WG58B,((WG49,WG40),(WG34B,(WG59,WG44))))),((WG14,WG27),(WG36,LL14))))))),LL1))),(LL43F,((LLX17,LL46),LL9))),WG42),Methanosarcina);
(((((LL41A,((LL24,(WG58A,LL5)),WG23A)),((LL4,WG16),WG56)),((LL13,LL37),((WG49,(WG59,(WG44,(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B)))),((WG14,WG27),(WG36,LL14))))),((((LL1,(((LL43F,WG42),(LLX3,WG26)),LLX12A)),((LL46,LLX17),LL9)),((WG74,WG481),((WG43,LL18),(WG21,WG22)))),WG28)),Methanosarcina);
((LL43F,(WG42,((LLX3,WG26),(LLX12A,((((LL46,LLX17),LL9),((WG43,(((WG74,WG481),LL18),(WG21,WG22))),(WG28,(((LL41A,((WG58A,(LL5,WG23A)),LL24)),((LL4,WG16),WG56)),((LL13,LL37),((((WG44,(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B)),(WG49,WG59)),((WG14,WG27),WG36)),LL14)))))),LL1))))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),((((((LL43F,WG42),((LL1,LLX3),WG26)),LLX12A),((LLX17,LL46),LL9)),(WG74,(WG481,((WG43,LL18),(WG21,WG22))))),WG28)),((LL41A,((LL5,(WG23A,WG58A)),LL24)),((LL4,WG16),WG56))),Methanosarcina);
((((((((((LLX3,WG26),WG42),LLX12A),LL43F),LL1),((LLX17,LL46),LL9)),(WG43,(LL18,((WG74,(WG21,WG22)),WG481)))),WG28),(((LL41A,((WG23A,(WG58A,LL5)),LL24)),((LL4,WG16),WG56)),((LL13,LL37),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((WG14,WG27),(LL14,WG36)))))),Methanosarcina);
(((((WG21,WG22),WG74),((LL18,WG43),WG481)),(((WG16,LL4),WG56),((LL41A,(LL24,(WG58A,(LL5,WG23A)))),(((LL37,LL13),((LL14,WG36),(((LL41B,(LL12,LL8)),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(WG27,WG14)))),((LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),((LLX3,WG26),LLX12A))),WG28))))),Methanosarcina);
(((LL41A,((LL24,LL5),(WG23A,WG58A))),((((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),(((WG74,((LL18,(WG43,(WG21,WG22))),WG481)),(((LLX17,LL46),LL9),(LL1,(LLX12A,((WG42,LL43F),(LLX3,WG26)))))),WG28)),((WG16,LL4),WG56))),Methanosarcina);
((((WG16,LL4),WG56),((LL41A,((LL24,LL5),(WG23A,WG58A))),(((LL37,LL13),((LL14,(WG36,(WG27,WG14))),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))))),(((WG43,((WG21,WG22),((WG481,WG74),LL18))),(LLX12A,((WG42,(LLX3,WG26)),((LL43F,((LLX17,LL46),LL9)),LL1)))),WG28)))),Methanosarcina);
((WG28,(((((WG16,LL4),WG56),((LL41A,(LL5,(WG23A,WG58A))),LL24)),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))))))),((WG74,(((WG43,LL18),(WG21,WG22)),WG481)),(((LL46,LLX17),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1))))),Methanosarcina);
(((((LL46,LLX17),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1)),((((((WG16,LL4),WG56),(LL41A,((LL24,LL5),(WG23A,WG58A)))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44)))))),(WG43,(((WG21,WG22),(WG481,WG74)),LL18))),WG28)),Methanosarcina);
(((((LL46,LLX17),LL9),(LLX12A,(WG42,((LL43F,(LL1,LLX3)),WG26)))),((((((WG16,LL4),WG56),((LL5,(WG23A,WG58A)),(LL41A,LL24))),((LL37,LL13),((LL14,(WG36,(WG27,WG14))),(WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44)))))),((WG43,(WG21,WG22)),((WG481,WG74),LL18))),WG28)),Methanosarcina);
((LLX12A,(((WG42,(LLX3,WG26)),(((LL46,LLX17),LL9),LL43F)),(LL1,((((((WG16,LL4),WG56),((WG23A,(WG58A,LL5)),(LL41A,LL24))),((LL14,(WG36,(WG27,WG14))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG44,WG59),WG49)))),(LL37,LL13)))),((WG22,WG21),((WG481,WG74),(WG43,LL18)))),WG28)))),Methanosarcina);
((((((((WG16,LL4),WG56),(((WG58A,(LL24,LL5)),WG23A),LL41A)),((((LL12,LL8),LL41B),((WG58B,WG40),((WG49,WG44),(WG59,WG34B)))),((LL37,LL13),(WG27,(WG14,(LL14,WG36)))))),(((WG22,WG21),WG74),((WG43,LL18),WG481))),WG28),((LLX12A,((LL43F,(((LL46,LLX17),LL9),WG42)),(LLX3,WG26))),LL1)),Methanosarcina);
(((((WG22,WG21),((WG481,WG74),LL18)),WG43),((WG28,((((WG16,LL4),WG56),(((LL5,(WG23A,WG58A)),LL24),LL41A)),(((LL37,LL13),(LL14,WG36)),((WG27,WG14),(((LL12,LL8),LL41B),((WG49,(WG44,WG59)),((WG58B,WG40),WG34B))))))),((LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26))),LL1))),Methanosarcina);
((WG28,((((((WG16,LL4),WG56),(((WG23A,(WG58A,LL5)),LL24),LL41A)),((((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG58B,WG40))),(((LL14,WG36),(WG27,WG14)),(LL37,LL13)))),(WG22,(WG21,((WG43,(WG481,WG74)),LL18)))),(LLX12A,(((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)),LL1)))),Methanosarcina);
((((LL4,WG16),WG56),((((LL24,LL5),(WG23A,WG58A)),LL41A),((((LL41B,(LL8,LL12)),(((WG44,(WG59,WG49)),WG34B),(WG40,WG58B))),(((WG27,WG14),(WG36,LL14)),(LL13,LL37))),(WG28,((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),(((LLX17,LL46),LL9),((((WG42,(LLX3,WG26)),LLX12A),LL1),LL43F))))))),Methanosarcina);
(((WG23A,WG58A),((LL24,((((((WG59,WG49),((WG34B,((WG40,WG58B),(LL41B,(LL8,LL12)))),WG44)),(((WG27,WG14),(WG36,LL14)),(LL13,LL37))),(WG28,((WG43,((WG22,WG21),((WG481,WG74),LL18))),(((LL46,LLX17),LL9),(((WG42,(LLX3,WG26)),(LL43F,LLX12A)),LL1))))),((LL4,WG16),WG56)),LL41A)),LL5)),Methanosarcina);
(((WG43,((WG22,WG21),((WG481,WG74),LL18))),(((((LL4,WG16),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),(((WG59,WG49),((WG34B,((WG40,WG58B),((LL12,LL8),LL41B))),WG44)),(((WG27,WG14),(WG36,LL14)),(LL13,LL37)))),(WG28,(((LLX17,LL46),LL9),((LL43F,(LLX12A,(WG42,(LLX3,WG26)))),LL1))))),Methanosarcina);
(((WG28,((WG43,(LL18,(WG481,((WG22,WG21),WG74)))),(LLX12A,(LL1,((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42))))))),((((LL4,WG16),WG56),(LL41A,((LL5,(WG23A,WG58A)),LL24))),((LL13,LL37),((((LL12,LL8),LL41B),(((WG44,(WG59,WG49)),WG34B),(WG40,WG58B))),((WG27,WG14),(WG36,LL14)))))),Methanosarcina);
(((LL41A,(((WG23A,WG58A),LL5),LL24)),((((LL13,LL37),((((LL12,LL8),LL41B),(((WG44,(WG59,WG49)),WG34B),(WG40,WG58B))),((WG27,WG14),(WG36,LL14)))),(WG28,((WG43,(LL18,((WG22,WG21),(WG74,WG481)))),(((LLX17,LL46),LL9),((((WG42,(LLX3,WG26)),LLX12A),LL43F),LL1))))),((LL4,WG16),WG56))),Methanosarcina);
(((LL41A,(((WG23A,WG58A),LL5),LL24)),((((((LL12,LL8),LL41B),(((WG44,(WG59,WG49)),WG34B),(WG40,WG58B))),(((WG27,WG14),(WG36,LL14)),(LL13,LL37))),(WG28,((WG43,((WG74,WG481),(LL18,(WG22,WG21)))),((LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26))),LL1)))),((LL4,WG16),WG56))),Methanosarcina);
((LLX12A,(((LL1,(WG28,(((((LL4,WG16),WG56),(LL41A,(((WG23A,WG58A),LL5),LL24))),((LL13,LL37),((WG49,(((WG34B,(WG40,(((LL12,LL8),LL41B),WG58B))),WG44),WG59)),((WG27,WG14),(WG36,LL14))))),(WG43,((WG22,WG21),((WG74,WG481),LL18)))))),(WG42,(LL43F,((LLX17,LL46),LL9)))),(LLX3,WG26))),Methanosarcina);
(((((LL4,WG16),WG56),(LL41A,((WG23A,(WG58A,LL5)),LL24))),(((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))),((WG27,WG14),(WG36,LL14)))),((((((WG42,(LLX3,WG26)),LLX12A),(LL43F,((LLX17,LL46),LL9))),LL1),(WG74,(WG481,(LL18,(WG43,(WG22,WG21)))))),WG28))),Methanosarcina);
(((((LL41A,(WG58A,(WG23A,(LL5,LL24)))),((((((WG44,(WG59,WG49)),WG34B),(((LL12,LL8),LL41B),(WG58B,WG40))),((LL14,((WG27,WG14),WG36)),(LL13,LL37))),(WG22,(WG21,(WG74,(WG481,(LL18,WG43)))))),((LL4,WG16),WG56))),WG28),(((LL43F,((LLX3,WG26),((LLX17,LL46),LL9))),(WG42,LLX12A)),LL1)),Methanosarcina);
(((((LL18,WG43),(WG74,WG481)),(WG22,WG21)),(((((LL4,WG16),WG56),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))),((WG27,WG14),(WG36,LL14))))),(WG28,((LLX12A,(((LLX3,WG26),((LL46,LLX17),LL9)),(LL43F,WG42))),LL1)))),Methanosarcina);
(((LL41A,((WG23A,(LL5,WG58A)),LL24)),((WG56,(WG16,LL4)),(((WG49,(WG59,((WG34B,((LL12,(LL41B,LL8)),(WG58B,WG40))),WG44))),((LL13,LL37),(WG27,(WG14,(WG36,LL14))))),((WG28,(LLX12A,((WG42,(LLX3,WG26)),((LL43F,(LL9,(LL46,LLX17))),LL1)))),(WG481,(WG74,((WG43,LL18),(WG22,WG21)))))))),Methanosarcina);
((((((LL41B,(LL8,LL12)),((WG49,(WG58B,WG40)),((WG44,WG59),WG34B))),((LL13,LL37),(((WG27,WG14),WG36),LL14))),((WG28,((((LLX3,WG26),(LL43F,(WG42,((LL46,LLX17),LL9)))),LLX12A),LL1)),(WG43,(LL18,((WG22,WG21),(WG481,WG74)))))),((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(WG16,LL4)))),Methanosarcina);
(((((WG23A,(LL5,WG58A)),LL24),LL41A),((WG56,(WG16,LL4)),((WG28,((WG43,((WG481,WG74),(LL18,(WG22,WG21)))),((((LLX3,WG26),(LL43F,(WG42,((LLX17,LL46),LL9)))),LLX12A),LL1))),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B)))))))),Methanosarcina);
(((WG28,((WG43,((WG22,WG21),((WG481,WG74),LL18))),(LLX12A,(((((LL46,LLX17),LL9),LL43F),LL1),((LLX3,WG26),WG42))))),(((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(WG49,(WG59,((WG34B,(((LL8,LL41B),LL12),(WG58B,WG40))),WG44))))),((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(WG16,LL4))))),Methanosarcina);
(((((WG23A,(LL5,WG58A)),LL24),LL41A),((WG56,(WG16,LL4)),(((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),((LL1,((((LLX3,WG26),WG42),LLX12A),(((LL46,LLX17),LL9),LL43F))),WG28)),((WG49,(WG40,((((WG44,WG59),WG34B),((LL8,LL41B),LL12)),WG58B))),((LL13,LL37),((WG27,WG14),(WG36,LL14))))))),Methanosarcina);
(((((LLX17,LL46),LL9),(LL1,(LL43F,(((LLX3,WG26),WG42),LLX12A)))),(((((((WG58B,WG40),((WG44,(WG49,WG59)),WG34B)),((LL41B,LL8),LL12)),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(WG16,LL4)))),WG28),(WG43,(LL18,(WG481,((WG22,WG21),WG74)))))),Methanosarcina);
(((((WG23A,(LL5,LL24)),WG58A),LL41A),((WG56,(WG16,LL4)),((WG28,((WG22,(WG21,(WG74,((WG43,LL18),WG481)))),(((LLX17,LL46),LL9),(LL1,(((LLX3,WG26),WG42),(LLX12A,LL43F)))))),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(((((WG44,WG59),WG34B),WG49),(WG58B,WG40)),((LL41B,LL8),LL12))))))),Methanosarcina);
((((((WG23A,LL5),WG58A),LL24),LL41A),((WG56,(WG16,LL4)),((WG28,((WG43,(LL18,((WG481,WG74),(WG22,WG21)))),(LL1,((LLX3,WG26),(((LL43F,((LLX17,LL46),LL9)),WG42),LLX12A))))),((WG44,((WG49,WG59),(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))))),((LL13,LL37),((WG27,WG14),(WG36,LL14))))))),Methanosarcina);
(((WG43,(LL18,((WG481,WG74),(WG22,WG21)))),((LL1,((LLX3,WG26),(((LL43F,((LLX17,LL46),LL9)),WG42),LLX12A))),((((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(WG44,((WG49,WG59),(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))))))),(((((WG23A,LL5),WG58A),LL24),LL41A),(WG56,(WG16,LL4)))),WG28))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),(((LL5,(WG58A,WG23A)),(LL24,LL41A)),(WG56,(WG16,LL4)))),(WG28,((WG43,((WG22,WG21),(LL18,(WG481,WG74)))),(((LLX17,LL46),LL9),(((LLX12A,(WG42,(LLX3,WG26))),LL43F),LL1))))),Methanosarcina);
(((((LL41A,LL24),(LL5,(WG58A,WG23A))),(WG56,(WG16,LL4))),(((WG28,((LL9,(LL46,LLX17)),((LLX12A,(WG42,(WG26,LLX3))),(LL43F,LL1)))),(WG43,((WG21,WG22),(LL18,(WG481,WG74))))),(((LL41B,(LL8,LL12)),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL13,LL37),((LL14,WG36),(WG27,WG14)))))),Methanosarcina);
(((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),(((((LL13,LL37),(((LL14,WG36),(WG27,WG14)),((WG44,((WG49,WG59),WG34B)),(((LL12,LL8),LL41B),(WG58B,WG40))))),((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4)))),WG28),(((LL46,LLX17),LL9),((LLX12A,((LL43F,WG42),(WG26,LLX3))),LL1)))),Methanosarcina);
(((LL41A,(LL24,((WG23A,LL5),WG58A))),((WG56,(WG16,LL4)),((WG28,((LLX12A,(((LL43F,WG42),(WG26,LLX3)),(LL1,((LLX17,LL46),LL9)))),((WG22,WG21),((WG43,LL18),(WG481,WG74))))),(((WG59,((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),WG44)),WG49),((LL13,LL37),(LL14,(WG36,(WG27,WG14)))))))),Methanosarcina);
((WG28,(((LLX12A,((WG42,(WG26,LLX3)),(LL1,(LL43F,((LLX17,LL46),LL9))))),((WG481,WG74),((WG22,WG21),(WG43,LL18)))),(((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG58B,(WG49,WG40)),((WG44,WG59),WG34B))))),((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(WG16,LL4)))))),Methanosarcina);
(((WG28,((((LLX17,LL46),LL9),(((LLX12A,(WG42,(WG26,LLX3))),LL43F),LL1)),(WG481,((WG43,LL18),(WG74,(WG22,WG21)))))),(((LL13,LL37),((WG27,(WG14,(LL14,WG36))),(WG44,((WG49,WG59),(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))))))),(((LL41A,(LL5,(WG58A,WG23A))),LL24),(WG56,(WG16,LL4))))),Methanosarcina);
(((WG28,((((LLX17,LL46),LL9),(((LLX12A,(WG42,(WG26,LLX3))),LL43F),LL1)),(WG481,((WG43,LL18),(WG74,(WG22,WG21)))))),(((LL13,LL37),((WG27,(WG14,(LL14,WG36))),(WG44,((WG49,WG59),(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))))))),(((LL41A,(LL5,(WG58A,WG23A))),LL24),(WG56,(WG16,LL4))))),Methanosarcina);
((((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(WG16,LL4))),((WG28,((LL1,((LLX12A,(WG42,(WG26,LLX3))),(((LLX17,LL46),LL9),LL43F))),(WG481,((WG43,LL18),(WG74,(WG22,WG21)))))),((((LL12,LL8),LL41B),((WG58B,WG40),(((WG59,WG44),WG49),WG34B))),((LL13,LL37),(((WG27,WG14),WG36),LL14))))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4)))),(WG28,((LL1,((LLX12A,(WG42,(WG26,LLX3))),(((LLX17,LL46),LL9),LL43F))),(WG43,(((WG481,WG74),LL18),(WG22,WG21)))))),Methanosarcina);
((((WG28,((LL1,((LLX12A,((LL43F,WG42),(WG26,LLX3))),((LLX17,LL46),LL9))),(WG74,(((WG43,LL18),(WG22,WG21)),WG481)))),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),((LL12,(LL8,LL41B)),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B)))))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(WG16,LL4)))),Methanosarcina);
((((LL13,LL37),((((WG27,WG14),WG36),((WG49,WG59),((WG34B,((LL41B,(LL8,LL12)),(WG58B,WG40))),WG44))),LL14)),(((LL41A,((WG58A,WG23A),(LL24,LL5))),(WG56,(WG16,LL4))),(WG28,((LL1,((LLX12A,(WG26,LLX3)),(LL43F,(WG42,((LLX17,LL46),LL9))))),(((LL18,(WG74,(WG22,WG21))),WG481),WG43))))),Methanosarcina);
((LLX12A,(((WG26,LLX3),(WG42,LL43F)),(((LL9,(LL46,LLX17)),(((WG74,(WG481,((WG43,LL18),(WG22,WG21)))),(((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((WG40,WG58B),(WG34B,(WG44,(WG59,WG49)))),(LL41B,(LL8,LL12))))),((((WG23A,(LL5,WG58A)),LL41A),LL24),((WG16,LL4),WG56)))),WG28)),LL1))),Methanosarcina);
(((WG481,(((WG43,LL18),(WG22,WG21)),WG74)),((((LL37,LL13),((WG36,((((WG40,WG58B),(WG34B,(WG44,(WG59,WG49)))),((LL12,LL8),LL41B)),(WG14,WG27))),LL14)),((((LL24,(WG23A,LL5)),WG58A),LL41A),((WG16,LL4),WG56))),(WG28,((LL1,((LL43F,LLX12A),(LLX3,(WG42,WG26)))),((LLX17,LL46),LL9))))),Methanosarcina);
((WG28,((((WG481,(WG43,LL18)),((WG22,WG21),WG74)),(LL1,((WG26,((LL43F,(((LLX17,LL46),LL9),WG42)),LLX3)),LLX12A))),((((((WG40,WG58B),(WG34B,(WG44,(WG59,WG49)))),((LL12,LL8),LL41B)),(((WG14,WG27),WG36),LL14)),(LL37,LL13)),((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG16,LL4),WG56))))),Methanosarcina);
(((((((WG40,WG58B),(WG34B,(WG44,(WG59,WG49)))),((LL12,LL8),LL41B)),((((WG14,WG27),WG36),LL14),(LL37,LL13))),((LL41A,(((LL5,WG23A),WG58A),LL24)),((WG16,LL4),WG56))),(WG28,((WG43,((WG481,WG74),((WG22,WG21),LL18))),((((LL1,LLX3),WG26),(LL43F,(((LLX17,LL46),LL9),WG42))),LLX12A)))),Methanosarcina);
(((LL41A,(((WG23A,LL5),WG58A),LL24)),(((WG16,LL4),WG56),((WG28,((WG43,(LL18,(WG481,(WG74,(WG22,WG21))))),((((LLX12A,(LLX3,WG26)),(LL43F,WG42)),LL1),((LLX17,LL46),LL9)))),((WG49,((((WG40,(((LL12,LL8),LL41B),WG58B)),WG34B),WG44),WG59)),((((WG14,WG27),WG36),LL14),(LL37,LL13)))))),Methanosarcina);
(((LL24,(WG58A,(WG23A,LL5))),((((WG16,LL4),WG56),((WG28,(LL1,((LLX12A,(LLX3,WG26)),((((LLX17,LL46),LL9),LL43F),WG42)))),((WG43,(LL18,(WG481,(WG74,(WG22,WG21))))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG59,WG49))))),((((WG14,WG27),WG36),LL14),(LL37,LL13)))))),LL41A)),Methanosarcina);
(((WG28,(((WG481,WG74),((WG22,WG21),(WG43,LL18))),(LLX12A,(((LL1,((LLX17,LL46),LL9)),LL43F),(WG42,(LLX3,WG26)))))),(((LL41A,(LL24,((WG23A,LL5),WG58A))),((WG16,LL4),WG56)),(((LL12,(LL8,LL41B)),((WG58B,WG40),(WG34B,(WG44,(WG59,WG49))))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))))),Methanosarcina);
(((LL41A,((LL24,LL5),(WG58A,WG23A))),(((WG16,LL4),WG56),(((LL37,LL13),(((LL12,(LL8,LL41B)),((WG58B,WG40),(WG34B,(WG44,(WG59,WG49))))),((WG14,WG27),(WG36,LL14)))),(WG28,(((WG481,WG74),((WG22,WG21),(WG43,LL18))),((((LL43F,WG42),((LLX3,WG26),LLX12A)),LL1),((LLX17,LL46),LL9))))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((WG16,LL4),WG56),((((LL12,(LL8,LL41B)),((WG58B,WG40),(WG34B,(WG44,(WG59,WG49))))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),(WG28,((WG74,((LL18,((WG22,WG21),WG43)),WG481)),(LLX12A,((WG42,(LLX3,WG26)),(LL43F,(LL1,((LLX17,LL46),LL9)))))))))),Methanosarcina);
((LLX12A,(((LLX3,WG26),((WG42,((LLX17,LL46),LL9)),LL43F)),((((((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG16,LL4),WG56)),((LL37,LL13),(((WG34B,(WG44,(WG59,WG49))),((LL12,(LL8,LL41B)),(WG58B,WG40))),((WG14,WG27),(WG36,LL14))))),WG28),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))),LL1))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),(((WG28,((WG74,(((WG21,WG22),(WG43,LL18)),WG481)),(LL1,(LLX12A,((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)))))),((LL37,LL13),(((WG14,WG27),(LL14,WG36)),((LL12,(LL41B,LL8)),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B)))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,((WG58A,(WG23A,LL5)),LL24)),((((WG22,((((WG43,LL18),WG481),WG74),WG21)),((LLX12A,((WG42,WG26),((LL1,LLX3),(LL43F,((LL46,LLX17),LL9))))),WG28)),((WG49,(WG59,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),WG44))),((LL37,LL13),((WG14,WG27),(LL14,WG36))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((((WG43,(LL18,(WG481,(WG74,(WG21,WG22))))),((((LL46,LLX17),LL9),(((LL1,LLX3),(WG26,(LLX12A,WG42))),LL43F)),WG28)),((((LL12,LL8),LL41B),((WG34B,((WG44,WG59),WG49)),(WG40,WG58B))),((LL37,LL13),(LL14,(WG36,(WG14,WG27)))))),(WG56,(WG16,LL4)))),Methanosarcina);
((((WG56,(WG16,LL4)),((WG58A,(WG23A,LL5)),(LL24,LL41A))),(((WG43,((WG21,WG22),((WG481,WG74),LL18))),(((LL1,((LLX17,LL46),LL9)),((LL43F,LLX12A),((LLX3,WG26),WG42))),WG28)),((WG44,((WG59,WG49),(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B))),((LL37,LL13),(LL14,(WG36,(WG14,WG27))))))),Methanosarcina);
((((((WG21,WG22),((WG481,WG74),LL18)),WG43),((((WG56,(WG16,LL4)),((LL24,(LL5,(WG58A,WG23A))),LL41A)),((WG49,((((WG40,(WG58B,((LL12,LL8),LL41B))),WG34B),WG44),WG59)),((LL37,LL13),(LL14,(WG36,(WG14,WG27)))))),WG28)),(((LL46,LLX17),LL9),(LL1,((LLX12A,((LLX3,WG26),WG42)),LL43F)))),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),((((LL37,LL13),(((WG14,WG27),(LL14,WG36)),(WG49,((((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44),WG59)))),(WG28,((LLX12A,(((LL43F,(((LLX17,LL46),LL9),LL1)),(LLX3,WG26)),WG42)),(WG481,(WG74,((WG43,LL18),(WG21,WG22))))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG43,(LL18,((WG21,WG22),(WG481,WG74)))),(((((WG56,(WG16,LL4)),((LL24,(WG58A,(WG23A,LL5))),LL41A)),((LL37,LL13),(((WG14,WG27),(LL14,WG36)),((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,((WG44,WG59),WG49))))))),WG28),(((LL46,LLX17),LL9),(LL1,(((LLX3,WG26),(LL43F,WG42)),LLX12A))))),Methanosarcina);
(((WG58A,WG23A),((LL41A,(((((WG34B,(WG44,(WG59,WG49))),((LL12,(LL8,LL41B)),(WG40,WG58B))),((LL37,LL13),((WG14,WG27),(LL14,WG36)))),((WG28,(LLX12A,(((LL43F,((LLX17,LL46),LL9)),LL1),((LLX3,WG26),WG42)))),(WG43,(LL18,((WG21,WG22),(WG481,WG74)))))),(WG56,(WG16,LL4)))),(LL24,LL5))),Methanosarcina);
((WG28,((((LLX3,WG26),(LLX12A,(LL43F,(WG42,((LLX17,LL46),LL9))))),LL1),((WG481,(WG74,((WG43,LL18),(WG21,WG22)))),(((WG56,(WG16,LL4)),(((WG23A,(LL5,WG58A)),LL24),LL41A)),((LL37,LL13),(((WG14,WG27),(LL14,WG36)),((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))))))))),Methanosarcina);
(((((LL24,LL5),(WG58A,WG23A)),LL41A),((((LL37,LL13),((WG27,((LL14,WG36),WG14)),((LL8,(LL41B,LL12)),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))))),((((((LLX3,WG26),(WG42,(LLX12A,LL43F))),LL1),((LLX17,LL46),LL9)),((WG481,WG74),((WG43,LL18),(WG21,WG22)))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,(LL24,(WG58A,(WG23A,LL5)))),((((LL37,LL13),(((WG27,WG14),(WG36,LL14)),((LL41B,(LL8,LL12)),((WG58B,WG40),(WG34B,(WG44,(WG59,WG49))))))),(((WG22,(((LL18,(WG43,WG481)),WG74),WG21)),(LLX12A,((WG42,(LLX3,WG26)),(LL1,((LL9,(LLX17,LL46)),LL43F))))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG42,(LL9,(LLX17,LL46))),(LL43F,((LL1,(WG28,((((WG56,(WG16,LL4)),(LL41A,(LL24,(LL5,(WG58A,WG23A))))),((((LL12,LL8),LL41B),((WG58B,WG40),((WG34B,(WG44,WG59)),WG49))),((LL37,LL13),(WG27,(WG14,(WG36,LL14)))))),((((WG481,WG74),LL18),WG43),(WG21,WG22))))),(LLX12A,(LLX3,WG26))))),Methanosarcina);
((((WG481,WG74),((LL18,WG43),(WG21,WG22))),((WG28,(((WG56,(WG16,LL4)),(LL41A,((WG58A,WG23A),(LL24,LL5)))),((LL37,LL13),((LL14,((WG27,WG14),WG36)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG44,WG59),WG49)))))))),(((LLX17,LL46),LL9),((LL43F,(LLX12A,(WG42,(LLX3,WG26)))),LL1)))),Methanosarcina);
(((WG56,(WG16,LL4)),((LL41A,((WG58A,WG23A),(LL24,LL5))),(((((LL12,LL8),LL41B),(WG34B,((WG44,WG59),(WG49,(WG58B,WG40))))),((LL37,LL13),((WG27,WG14),(WG36,LL14)))),(((((LL46,LLX17),LL9),((LL43F,(LLX12A,(WG42,(LLX3,WG26)))),LL1)),WG28),(WG43,(((WG21,WG22),(WG481,WG74)),LL18)))))),Methanosarcina);
(((((WG21,WG22),WG74),((LL18,WG43),WG481)),((((WG56,(WG16,LL4)),(LL41A,(((WG58A,WG23A),LL5),LL24))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),(WG27,(WG14,(WG36,LL14)))))),(((((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)),LLX12A),LL1),WG28))),Methanosarcina);
((WG28,(((WG22,((((WG481,WG74),LL18),WG43),WG21)),(((WG56,(WG16,LL4)),(LL41A,(((WG58A,WG23A),LL5),LL24))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),(WG36,(LL14,(WG27,WG14))))))),(((((LL1,LLX3),WG26),(LL43F,WG42)),LLX12A),((LL46,LLX17),LL9)))),Methanosarcina);
((WG28,((((WG56,(WG16,LL4)),(LL41A,((WG58A,(LL5,LL24)),WG23A))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL37,LL13),(LL14,((WG27,WG14),WG36))))),((LLX12A,((((LL43F,((LLX17,LL46),LL9)),(LL1,LLX3)),WG26),WG42)),(WG43,((WG21,WG22),((WG481,WG74),LL18)))))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,((LL5,(WG23A,WG58A)),LL24))),(((LL37,LL13),(((WG27,WG14),(WG36,LL14)),(((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))),((LL12,LL8),LL41B)))),(((((LLX17,LL46),LL9),(LL1,((((LLX3,WG26),WG42),LLX12A),LL43F))),(WG43,((WG481,WG74),(LL18,(WG21,WG22))))),WG28))),Methanosarcina);
((LLX12A,(((((LLX17,LL46),LL9),LL43F),((WG28,((((WG56,(WG16,LL4)),(LL41A,(((WG23A,WG58A),LL5),LL24))),((((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))),((LL12,LL8),LL41B)),((LL37,LL13),((WG27,WG14),(WG36,LL14))))),(WG43,((WG21,WG22),((WG481,WG74),LL18))))),LL1)),((LLX3,WG26),WG42))),Methanosarcina);
(((WG28,((((WG56,(WG16,LL4)),(LL41A,((WG23A,(WG58A,LL5)),LL24))),((LL37,LL13),(((WG27,WG14),(WG36,LL14)),(((WG58B,WG40),(WG34B,(WG44,(WG49,WG59)))),((LL12,LL8),LL41B))))),((WG74,(WG21,WG22)),(WG481,(WG43,LL18))))),(LL1,(((LLX17,LL46),LL9),((((LLX3,WG26),WG42),LLX12A),LL43F)))),Methanosarcina);
(((LL24,(LL41A,(WG58A,(WG23A,LL5)))),((((((LL8,LL12),LL41B),((WG40,WG58B),((WG49,WG44),(WG59,WG34B)))),(((WG36,LL14),(WG14,WG27)),(LL13,LL37))),(((((LL18,(WG22,WG21)),(WG74,WG481)),WG43),((LL1,(LLX12A,((LLX3,WG26),(WG42,LL43F)))),(LL9,(LLX17,LL46)))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,(((LL24,LL5),WG23A),WG58A))),(((WG49,(WG59,(((WG40,(((LL12,LL8),LL41B),WG58B)),WG34B),WG44))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),(((WG74,(WG481,((WG43,LL18),(WG22,WG21)))),(LLX12A,(((LLX3,WG26),WG42),(((LL9,(LLX17,LL46)),LL43F),LL1)))),WG28))),Methanosarcina);
((((WG56,(WG16,LL4)),(LL41A,((LL5,(WG23A,WG58A)),LL24))),(((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(((WG481,(((WG43,LL18),(WG22,WG21)),WG74)),(LLX12A,(((LLX3,WG26),WG42),((((LLX17,LL46),LL9),LL43F),LL1)))),WG28))),Methanosarcina);
(((((WG56,(WG16,LL4)),(LL41A,((WG23A,WG58A),(LL24,LL5)))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL14,((WG14,WG27),WG36)),(LL13,LL37)))),(((WG43,(LL18,(((WG22,WG21),WG74),WG481))),((LLX12A,((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42)))),LL1)),WG28)),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),(((((WG22,WG21),WG43),(LL18,(WG74,WG481))),((LLX12A,((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42)))),LL1)),WG28)),((WG56,(WG16,LL4)),(LL41A,((WG23A,(LL5,WG58A)),LL24)))),Methanosarcina);
(((LL41A,((WG23A,(LL5,LL24)),WG58A)),(((((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),(((WG14,WG27),(WG36,LL14)),(LL13,LL37))),(((LL1,((((LLX3,WG26),WG42),LLX12A),LL43F)),((LL46,LLX17),LL9)),WG28)),((WG74,WG481),((WG22,WG21),(WG43,LL18)))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG43,(LL18,(((WG22,WG21),WG74),WG481))),(((LL1,(((LLX3,WG26),(LL43F,WG42)),LLX12A)),((LL46,LLX17),LL9)),(WG28,(((WG56,(WG16,LL4)),((LL41A,((WG23A,LL5),WG58A)),LL24)),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG49,WG59))))),((WG27,((WG36,LL14),WG14)),(LL13,LL37))))))),Methanosarcina);
((((LL41A,((WG23A,LL5),WG58A)),LL24),((((LL13,LL37),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((WG36,LL14),(WG14,WG27)))),(((WG43,(LL18,(((WG22,WG21),WG74),WG481))),(((LL43F,((LLX3,WG26),WG42)),(((LLX17,LL46),LL9),LL1)),LLX12A)),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG58A,WG23A),(LL5,(LL24,(((((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),(((WG43,(LL18,(((WG22,WG21),WG74),WG481))),(((LLX17,LL46),LL9),(LL1,((LLX12A,LL43F),((LLX3,WG26),WG42))))),WG28)),(WG56,(WG16,LL4))),LL41A)))),Methanosarcina);
(((WG481,(((WG43,LL18),(WG22,WG21)),WG74)),((((LL46,LLX17),LL9),(LL1,(LLX12A,((LLX3,WG26),(LL43F,WG42))))),(WG28,(((WG56,(WG16,LL4)),(LL41A,(((WG58A,WG23A),LL5),LL24))),((LL13,LL37),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))),((WG14,WG27),(WG36,LL14)))))))),Methanosarcina);
((LLX12A,(((((LL46,LLX17),LL9),LL43F),((((((WG481,WG74),((WG22,WG21),LL18)),WG43),(((LL37,LL13),(((WG14,WG27),(WG36,LL14)),((LL41B,(LL8,LL12)),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))))),((WG56,(LL4,WG16)),(LL41A,(LL24,((WG58A,WG23A),LL5)))))),WG28),LL1)),(WG42,(LLX3,WG26)))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),(LL41A,(WG58A,((LL5,LL24),WG23A))))),(((LL1,(((LLX17,LL46),LL9),(((WG42,(LLX3,WG26)),LLX12A),LL43F))),(WG74,(((WG22,WG21),(WG43,LL18)),WG481))),WG28)),Methanosarcina);
((((((LL1,(((LL46,LLX17),LL9),(((WG42,(LLX3,WG26)),LLX12A),LL43F))),(WG43,(LL18,(WG481,(WG74,(WG22,WG21)))))),WG28),((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),(WG58B,(WG40,(WG34B,((WG49,WG59),WG44)))))))),((WG56,(LL4,WG16)),(((LL5,(WG23A,WG58A)),LL24),LL41A))),Methanosarcina);
((LLX12A,((((LL43F,((LL46,LLX17),LL9)),LL1),(WG42,(LLX3,WG26))),((WG74,(((WG43,LL18),(WG22,WG21)),WG481)),(WG28,(((((LL12,LL8),LL41B),((WG44,(WG34B,WG59)),(WG58B,(WG49,WG40)))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),((WG58A,((LL5,LL24),WG23A)),LL41A))))))),Methanosarcina);
((WG28,((((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24)))),((((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1),((LL46,LLX17),LL9)),(WG74,(((WG43,LL18),(WG22,WG21)),WG481))))),Methanosarcina);
((LLX12A,(((WG42,(LLX3,WG26)),(LL43F,(LL1,((LLX17,LL46),LL9)))),((WG43,(((WG481,WG74),LL18),(WG22,WG21))),(WG28,((((LL12,(LL8,LL41B)),(((WG34B,(WG59,WG44)),WG49),(WG58B,WG40))),((LL37,LL13),(LL14,((WG14,WG27),WG36)))),((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24)))))))),Methanosarcina);
((LLX12A,((WG42,(LLX3,WG26)),((((WG43,(((WG481,WG74),LL18),(WG22,WG21))),(WG28,(((((WG44,((((LL41B,LL8),LL12),(WG58B,WG40)),WG34B)),WG59),WG49),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),(LL41A,(((LL24,LL5),WG23A),WG58A)))))),LL1),(((LLX17,LL46),LL9),LL43F)))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((((WG481,(WG74,((WG43,LL18),(WG22,WG21)))),((((LLX17,LL46),LL9),(LL1,(((LL43F,WG42),(LLX3,WG26)),LLX12A))),WG28)),((((WG58B,WG40),(LL41B,(LL8,LL12))),(WG34B,((WG59,WG49),WG44))),((LL37,LL13),((WG14,WG27),(WG36,LL14))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG43,(((WG481,WG74),LL18),(WG22,WG21))),((((LLX17,LL46),LL9),(LL1,(((WG42,(LLX3,WG26)),LLX12A),LL43F))),((((WG49,((WG44,(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B)),WG59)),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),(LL41A,((WG23A,(LL5,WG58A)),LL24)))),WG28))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((WG28,((WG43,((WG481,WG74),(LL18,(WG22,WG21)))),(((LL46,LLX17),LL9),(LL1,(((WG42,(LLX3,WG26)),LLX12A),LL43F))))),((LL37,LL13),((((((LL12,LL8),LL41B),(WG58B,(WG40,(WG34B,((WG59,WG49),WG44))))),(WG14,WG27)),WG36),LL14))),(WG56,(LL4,WG16)))),Methanosarcina);
((((LL1,((LL43F,(LL9,(LL46,LLX17))),((WG42,(WG26,LLX3)),LLX12A))),(WG28,(((LL13,LL37),(((WG14,WG27),(WG36,LL14)),(WG49,((WG44,(((WG58B,WG40),((LL41B,LL8),LL12)),WG34B)),WG59)))),((LL41A,((WG23A,(WG58A,LL5)),LL24)),((WG16,LL4),WG56))))),((WG22,WG21),((WG43,LL18),(WG74,WG481)))),Methanosarcina);
(((LL41A,((WG23A,(WG58A,LL5)),LL24)),(((WG16,LL4),WG56),((((WG43,(((WG22,WG21),LL18),(WG74,WG481))),((LL9,(LL46,LLX17)),(((WG42,(WG26,LLX3)),(LL43F,LLX12A)),LL1))),WG28),((LL13,LL37),((LL14,((WG14,WG27),WG36)),(WG44,((((WG58B,WG40),((LL41B,LL8),LL12)),WG34B),(WG59,WG49)))))))),Methanosarcina);
((((LL13,LL37),(((WG14,WG27),(WG36,LL14)),((LL41B,(LL8,LL12)),((WG34B,((WG59,WG49),WG44)),(WG58B,WG40))))),(((LL41A,((LL24,LL5),(WG23A,WG58A))),((WG16,LL4),WG56)),(((WG74,(WG481,((WG43,(WG22,WG21)),LL18))),((((WG42,(WG26,LLX3)),LL43F),(LL1,((LL46,LLX17),LL9))),LLX12A)),WG28))),Methanosarcina);
(((WG43,((WG22,WG21),(LL18,(WG74,WG481)))),((((LLX12A,(LL43F,(((LLX17,LL46),LL9),WG42))),(WG26,LLX3)),LL1),(WG28,(((((LL12,LL8),LL41B),((WG34B,((WG59,WG49),WG44)),(WG58B,WG40))),((LL13,LL37),(LL14,((WG14,WG27),WG36)))),((LL41A,((WG23A,(WG58A,LL5)),LL24)),((WG16,LL4),WG56)))))),Methanosarcina);
(((((LL13,LL37),(((WG14,WG27),(WG36,LL14)),(((LL12,LL8),LL41B),(((WG34B,(WG59,WG44)),WG49),(WG58B,WG40))))),((LL41A,(((WG23A,WG58A),LL5),LL24)),((WG16,LL4),WG56))),(((WG43,(LL18,((WG22,WG21),(WG481,WG74)))),((LL43F,((LLX17,LL46),LL9)),((WG42,(WG26,(LL1,LLX3))),LLX12A))),WG28)),Methanosarcina);
(((((WG42,(WG26,LLX3)),(LL43F,LLX12A)),LL1),(((WG28,((((WG14,WG27),(((WG34B,(WG59,WG44)),WG49),((WG58B,WG40),((LL12,LL8),LL41B)))),((LL13,LL37),(WG36,LL14))),((LL41A,(((WG23A,WG58A),LL5),LL24)),((WG16,LL4),WG56)))),(WG22,(WG21,((WG74,(LL18,WG481)),WG43)))),((LL46,LLX17),LL9))),Methanosarcina);
(((LL41A,(((WG23A,WG58A),LL5),LL24)),(((WG16,LL4),WG56),((((WG74,(WG481,(LL18,((WG22,WG21),WG43)))),(((LL46,LLX17),LL9),(LL1,(((WG42,(WG26,LLX3)),LLX12A),LL43F)))),WG28),((WG44,((WG59,WG49),(WG34B,((WG58B,WG40),((LL12,LL8),LL41B))))),((LL13,LL37),(((WG14,WG27),WG36),LL14)))))),Methanosarcina);
(((WG43,((LL18,(WG22,WG21)),(WG74,WG481))),(((((LLX17,LL46),LL9),(LL1,(((WG42,(WG26,LLX3)),LLX12A),LL43F))),WG28),((((LL13,LL37),((WG14,WG27),(WG36,LL14))),(((LL12,LL8),LL41B),(((WG44,(WG59,WG49)),WG34B),(WG58B,WG40)))),((LL41A,(((WG23A,LL5),WG58A),LL24)),((WG16,LL4),WG56))))),Methanosarcina);
((WG28,((((LL13,LL37),((LL14,((WG14,WG27),WG36)),((LL12,(LL8,LL41B)),(((WG44,(WG59,WG49)),WG34B),(WG58B,WG40))))),((LL41A,((WG23A,(LL5,WG58A)),LL24)),((WG16,LL4),WG56))),((LLX12A,(((LL43F,((LLX17,LL46),LL9)),(LLX3,LL1)),(WG42,WG26))),((WG22,WG21),(WG43,((WG74,WG481),LL18)))))),Methanosarcina);
(((((LL1,(((LLX3,WG26),(LL43F,(WG42,((LLX17,LL46),LL9)))),LLX12A)),(LL18,(WG43,((WG22,WG21),(WG74,WG481))))),WG28),(((LL13,LL37),(((WG14,WG27),(WG36,LL14)),(((WG44,(WG59,WG49)),WG34B),((WG58B,WG40),(LL12,(LL8,LL41B)))))),((LL41A,((WG58A,(WG23A,LL5)),LL24)),((WG16,LL4),WG56)))),Methanosarcina);
((WG28,((((LL41A,(WG58A,((WG23A,LL5),LL24))),(WG56,(LL4,WG16))),((((((WG49,WG40),WG58B),(WG34B,(WG44,WG59))),(LL41B,(LL8,LL12))),((WG36,LL14),(WG14,WG27))),(LL37,LL13))),((((WG22,WG21),(LL18,(WG74,WG481))),WG43),(LL1,(((WG26,LLX3),(LL43F,((LL9,(LLX17,LL46)),WG42))),LLX12A))))),Methanosarcina);
(((((LL41A,(WG58A,(WG23A,(LL5,LL24)))),(WG56,(LL4,WG16))),(((((WG49,WG40),WG58B),(WG34B,(WG44,WG59))),((LL12,LL8),LL41B)),((LL14,((WG14,WG27),WG36)),(LL37,LL13)))),((((LL18,((WG74,WG481),(WG22,WG21))),WG43),(LLX12A,((WG42,(WG26,LLX3)),(LL43F,(LL1,((LLX17,LL46),LL9)))))),WG28)),Methanosarcina);
(((((WG22,WG21),WG74),((WG43,LL18),WG481)),(((((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(WG26,LLX3))),LL1)),WG28),(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(LL4,WG16))),((((WG40,WG58B),(WG34B,((WG44,WG59),WG49))),((LL12,LL8),LL41B)),(((WG14,WG27),(WG36,LL14)),(LL37,LL13)))))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),((WG56,(LL4,WG16)),(((LL37,LL13),((((WG40,WG58B),(WG49,(WG34B,(WG44,WG59)))),((LL12,LL8),LL41B)),((WG14,WG27),(WG36,LL14)))),(((WG43,(((LL18,WG74),WG481),(WG21,WG22))),(((LL46,LLX17),LL9),((LL43F,(LLX12A,(WG42,(WG26,LLX3)))),LL1))),WG28)))),Methanosarcina);
(((((LL37,LL13),((((WG40,WG58B),(WG49,(WG34B,(WG44,WG59)))),((LL12,LL8),LL41B)),((WG14,WG27),(WG36,LL14)))),((((WG21,WG22),((WG481,WG74),(WG43,LL18))),((LL43F,((LL46,LLX17),LL9)),(LLX12A,((WG42,(WG26,LLX3)),LL1)))),WG28)),((LL41A,(((WG58A,LL5),LL24),WG23A)),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG43,(LL18,((WG21,WG22),(WG481,WG74)))),((((LLX17,LL46),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1)),(WG28,(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16))),((LL37,LL13),((WG44,((WG49,WG59),((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B))),((WG14,WG27),(WG36,LL14)))))))),Methanosarcina);
((((LL41A,((WG23A,WG58A),(LL24,LL5))),(WG56,(LL4,WG16))),(((((LL12,LL8),LL41B),((WG40,WG58B),((WG34B,(WG44,WG59)),WG49))),((LL14,((WG14,WG27),WG36)),(LL37,LL13))),(((WG481,(WG74,(LL18,(WG43,(WG21,WG22))))),(((LL46,LLX17),LL9),(((((WG26,LLX3),WG42),LLX12A),LL43F),LL1))),WG28))),Methanosarcina);
((((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),((LL14,((WG14,WG27),WG36)),(LL37,LL13))),((((WG43,(((WG21,WG22),LL18),(WG481,WG74))),(LLX12A,((LL1,((LLX17,LL46),LL9)),((WG26,LLX3),(LL43F,WG42))))),WG28),((LL41A,(((WG23A,WG58A),LL5),LL24)),(WG56,(LL4,WG16))))),Methanosarcina);
(((((LL37,LL13),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),((WG14,WG27),(WG36,LL14)))),((((WG21,WG22),((WG43,LL18),(WG481,WG74))),(LLX12A,((LL43F,(LL1,((LLX17,LL46),LL9))),((WG26,LLX3),WG42)))),WG28)),(((((WG23A,WG58A),LL5),LL24),LL41A),(WG56,(LL4,WG16)))),Methanosarcina);
((((WG21,WG22),((WG43,LL18),(WG481,WG74))),(((LL1,((LL46,LLX17),LL9)),((((WG26,LLX3),WG42),LLX12A),LL43F)),(WG28,(((((WG23A,(WG58A,LL5)),LL24),LL41A),(WG56,(LL4,WG16))),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG44,WG59),WG49)))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))))))),Methanosarcina);
(((((LLX17,LL46),LL9),WG42),((LLX12A,((LLX3,(((WG28,(((LL37,LL13),(((WG27,WG14),(LL14,WG36)),((WG59,WG49),(WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B))))),((LL41A,((LL24,LL5),(WG23A,WG58A))),(WG56,(LL4,WG16))))),(((WG21,WG22),((WG481,WG74),LL18)),WG43)),LL1)),WG26)),LL43F)),Methanosarcina);
((((LL41A,((WG58A,(LL5,WG23A)),LL24)),(WG56,(LL4,WG16))),((((WG481,(WG43,((WG74,(WG21,WG22)),LL18))),((LL1,((LLX3,(WG26,WG42)),LLX12A)),(LL43F,((LLX17,LL46),LL9)))),WG28),((WG44,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),(WG59,WG49))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))))),Methanosarcina);
(((((WG43,(((WG481,WG74),(WG21,WG22)),LL18)),(((LL1,LLX3),((WG42,WG26),LLX12A)),(LL43F,((LL46,LLX17),LL9)))),WG28),(((WG49,((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),WG59)),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),((LL41A,((LL24,LL5),(WG23A,WG58A))),(WG56,(LL4,WG16))))),Methanosarcina);
((((((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),((((LL1,(LLX12A,LL43F)),WG42),(LLX3,WG26)),((LL46,LLX17),LL9))),WG28),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),(((WG49,WG40),WG58B),(WG34B,(WG59,WG44))))))),((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG43,(LL18,((WG481,WG74),(WG21,WG22)))),((LL41A,((WG23A,(LL5,LL24)),WG58A)),((WG56,(LL4,WG16)),(((((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1),((LLX17,LL46),LL9)),WG28),((((WG27,WG14),WG36),LL14),((LL37,LL13),(((LL12,LL8),LL41B),(((WG49,WG40),WG58B),(WG34B,(WG59,WG44)))))))))),Methanosarcina);
(((((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1),((LLX17,LL46),LL9)),(WG28,(((((WG27,(WG14,(WG36,LL14))),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG49,WG59),WG44))))),(LL37,LL13)),((LL41A,((LL5,LL24),(WG58A,WG23A))),(WG56,(LL4,WG16)))),(WG43,(((WG74,(WG21,WG22)),WG481),LL18))))),Methanosarcina);
(((LL41A,((LL5,LL24),(WG58A,WG23A))),((WG56,(LL4,WG16)),((((LL1,(LLX3,(WG26,(LLX12A,(LL43F,(((LLX17,LL46),LL9),WG42)))))),(WG43,((WG21,WG22),((WG481,WG74),LL18)))),WG28),((((WG36,LL14),(WG27,WG14)),((WG34B,(WG49,(WG59,WG44))),(((LL12,LL8),LL41B),(WG40,WG58B)))),(LL37,LL13))))),Methanosarcina);
(((((LL1,(((LL43F,(((LLX17,LL46),LL9),WG42)),(LLX3,WG26)),LLX12A)),(WG43,((WG21,WG22),((WG481,WG74),LL18)))),WG28),(((((LL12,LL8),LL41B),((WG49,(WG40,WG58B)),(WG34B,(WG59,WG44)))),((LL37,LL13),(LL14,((WG27,WG14),WG36)))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(LL4,WG16))))),Methanosarcina);
(((LL1,(((WG42,(LL43F,((LLX17,LL46),LL9))),(LLX3,WG26)),LLX12A)),(((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),(((((WG27,WG14),WG36),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG49,WG59),WG44))))),((LL37,LL13),LL14)),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(LL4,WG16))))),WG28)),Methanosarcina);
((WG28,(((((LLX3,WG26),(WG42,LL43F)),(LL1,((LLX17,LL46),LL9))),LLX12A),((WG43,(LL18,((WG21,WG22),(WG481,WG74)))),(((WG49,(WG59,(WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(LL4,WG16))))))),Methanosarcina);
((((((LL18,((WG21,WG22),(WG74,WG481))),WG43),(((LL13,LL37),((LL14,((WG14,WG27),WG36)),(WG49,(WG59,((WG34B,((WG58B,WG40),((LL8,LL12),LL41B))),WG44))))),((WG56,(WG16,LL4)),(LL41A,(((WG23A,LL5),WG58A),LL24))))),WG28),(LL1,(((LL43F,LLX12A),(WG42,(LLX3,WG26))),(LL9,(LLX17,LL46))))),Methanosarcina);
(((LL41A,((LL24,LL5),(WG58A,WG23A))),(((WG28,(((LL9,(LLX17,LL46)),(LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26))))),(WG481,(((WG43,LL18),(WG21,WG22)),WG74)))),((((LL8,LL12),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),((LL13,LL37),(LL14,((WG14,WG27),WG36))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL9,(LLX17,LL46)),((LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26)))),((WG43,(LL18,((WG21,WG22),(WG74,WG481)))),((((LL13,LL37),(LL14,(((WG14,WG27),WG36),(((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)))))),((WG56,(WG16,LL4)),(LL41A,((WG23A,(LL5,LL24)),WG58A)))),WG28)))),Methanosarcina);
(((((LL5,(WG58A,WG23A)),LL24),LL41A),(((WG28,(((((LLX17,LL46),LL9),LL1),((LLX12A,(WG42,(LLX3,WG26))),LL43F)),(WG43,((WG21,WG22),((WG74,WG481),LL18))))),(((LL13,LL37),(WG27,((LL14,WG36),WG14))),(((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG56,(WG16,LL4)),((((WG58A,WG23A),(LL24,LL5)),LL41A),(((LL13,LL37),(((LL14,WG36),(WG14,WG27)),(((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))))),(WG28,((LL1,((LLX12A,(WG42,(LLX3,WG26))),(LL43F,((LLX17,LL46),LL9)))),((WG21,WG22),((WG74,WG481),(WG43,LL18)))))))),Methanosarcina);
((((WG74,(WG481,((WG43,LL18),(WG21,WG22)))),((((WG56,(WG16,LL4)),(((WG58A,WG23A),LL5),(LL24,LL41A))),((((LL12,LL8),LL41B),(WG49,(WG34B,((WG44,WG59),(WG58B,WG40))))),((LL13,LL37),((LL14,WG36),(WG14,WG27))))),WG28)),(LLX12A,(WG42,((LL1,((LLX17,LL46),LL9)),(LL43F,(LLX3,WG26)))))),Methanosarcina);
(((WG56,(WG16,LL4)),((((WG58A,WG23A),(LL24,LL5)),LL41A),(((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG34B,WG59)),WG49))),((LL13,LL37),((LL14,WG36),(WG14,WG27)))),(WG28,((((LLX17,LL46),LL9),((((LLX3,WG26),(LL43F,WG42)),LLX12A),LL1)),(WG43,((LL18,(WG21,WG22)),(WG74,WG481)))))))),Methanosarcina);
(((WG28,((LLX12A,((((LL43F,(LL1,((LLX17,LL46),LL9))),LLX3),WG26),WG42)),(WG43,((WG21,WG22),((WG74,WG481),LL18))))),(((WG56,(WG16,LL4)),(LL41A,(((WG23A,LL5),WG58A),LL24))),((((WG44,(WG59,WG49)),WG34B),(((LL12,LL8),LL41B),(WG58B,WG40))),((LL13,LL37),((LL14,WG36),(WG14,WG27)))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((((((LL12,LL8),LL41B),((WG58B,WG40),((WG44,(WG59,WG34B)),WG49))),((LL13,LL37),((LL14,WG36),(WG14,WG27)))),(WG28,((((LL46,LLX17),LL9),((((LLX3,WG26),(LL43F,WG42)),LLX12A),LL1)),(WG43,(((WG74,(WG21,WG22)),WG481),LL18))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((((LL13,LL37),(((LL14,WG36),(WG14,WG27)),(WG49,(WG59,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44))))),(WG28,((((LL46,LLX17),LL9),((((LLX3,(WG42,WG26)),LL43F),LLX12A),LL1)),(WG43,(((WG74,(WG21,WG22)),WG481),LL18))))),((WG56,(WG16,LL4)),(LL41A,((WG58A,(WG23A,LL5)),LL24)))),Methanosarcina);
(((WG56,(LL4,WG16)),(((WG28,((WG43,(((WG74,WG481),LL18),(WG22,WG21))),(LL1,((LL9,(LL46,LLX17)),((((LLX12A,WG42),WG26),LLX3),LL43F))))),(((((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)),((LL12,LL8),LL41B)),(((LL14,WG36),(WG14,WG27)),(LL13,LL37)))),(LL41A,((LL24,LL5),(WG23A,WG58A))))),Methanosarcina);
(((LL41A,((LL24,LL5),(WG23A,WG58A))),((WG56,(LL4,WG16)),((WG28,(((WG74,WG481),((WG43,LL18),(WG22,WG21))),(LLX12A,(((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)),LL1)))),((LL13,LL37),(((((WG44,(WG49,WG59)),WG34B),(WG58B,WG40)),((LL12,LL8),LL41B)),((WG14,WG27),(LL14,WG36))))))),Methanosarcina);
((LLX12A,(((LL43F,(((LL46,LLX17),LL9),WG42)),(WG26,(LL1,LLX3))),(WG28,((((WG49,(WG59,((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),WG44))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16)))),(((WG22,WG21),((WG74,WG481),LL18)),WG43))))),Methanosarcina);
((((LL41A,((WG23A,WG58A),(LL24,LL5))),(WG56,(LL4,WG16))),((((LLX12A,(((LL43F,(((LLX17,LL46),LL9),WG42)),(WG26,LLX3)),LL1)),((LL18,((WG74,(WG22,WG21)),WG481)),WG43)),WG28),((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),(((WG14,WG27),(LL14,WG36)),(LL13,LL37))))),Methanosarcina);
((((WG56,(LL4,WG16)),((((LL1,((LLX12A,(LL43F,(((LL46,LLX17),LL9),WG42))),(WG26,LLX3))),(WG22,(WG21,((WG481,(WG43,LL18)),WG74)))),WG28),((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),((WG27,((LL14,WG36),WG14)),(LL13,LL37))))),(LL41A,(((LL5,WG23A),WG58A),LL24))),Methanosarcina);
((((WG56,(LL4,WG16)),(((WG43,(((WG22,WG21),LL18),(WG74,WG481))),(WG28,(LL1,((LLX12A,(WG42,(LL43F,((LL46,LLX17),LL9)))),(WG26,LLX3))))),((LL13,LL37),((((LL12,LL8),LL41B),((((WG44,WG59),WG34B),WG49),(WG58B,WG40))),((LL14,WG36),(WG14,WG27)))))),(LL41A,((LL24,LL5),(WG23A,WG58A)))),Methanosarcina);
(((LLX12A,(((WG42,(LL43F,((LLX17,LL46),LL9))),(WG26,LLX3)),LL1)),(((((WG49,(WG59,(WG34B,((WG40,(((LL12,LL8),LL41B),WG58B)),WG44)))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))),((LL41A,((LL24,LL5),(WG23A,WG58A))),(WG56,(LL4,WG16)))),(WG22,(WG21,((WG481,(WG43,LL18)),WG74)))),WG28)),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((WG56,(LL4,WG16)),((((LLX12A,((LL1,(LL43F,((LLX17,LL46),LL9))),((WG26,LLX3),WG42))),(WG481,(((WG22,WG21),(WG43,LL18)),WG74))),WG28),((WG49,(WG59,(WG44,(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40)))))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37)))))),Methanosarcina);
((((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16))),((((((LLX17,LL46),LL9),((((WG26,LLX3),(LL43F,WG42)),LLX12A),LL1)),((WG22,WG21),((WG43,LL18),(WG74,WG481)))),WG28),((WG49,((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),(WG59,WG44))),((LL14,(WG36,(WG14,WG27))),(LL13,LL37))))),Methanosarcina);
(((((LLX17,LL46),LL9),((((WG26,LLX3),WG42),(LL43F,LLX12A)),LL1)),(((((WG74,WG481),LL18),(WG22,WG21)),WG43),(WG28,(((LL13,LL37),((WG49,(WG59,(WG44,(WG34B,(((LL8,LL12),LL41B),(WG58B,WG40)))))),((WG14,WG27),(LL14,WG36)))),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16))))))),Methanosarcina);
((((LL1,(LLX12A,((LLX3,WG26),(WG42,(LL43F,((LL46,LLX17),LL9)))))),(((((WG36,LL14),(WG27,WG14)),((LL12,(LL41B,LL8)),((((WG49,WG59),WG44),WG34B),(WG40,WG58B)))),(LL37,LL13)),((LL41A,((LL24,LL5),(WG23A,WG58A))),(((WG74,(((WG43,(WG21,WG22)),LL18),WG481)),WG56),(LL4,WG16))))),WG28),Methanosarcina);
((((LLX17,LL46),LL9),((((LLX12A,(LLX3,WG26)),((((((((WG36,LL14),(WG27,WG14)),((LL12,(LL41B,LL8)),((((WG49,WG59),WG44),WG34B),(WG40,WG58B)))),(LL37,LL13)),((WG56,(LL4,WG16)),(LL41A,((WG58A,(LL5,WG23A)),LL24)))),WG28),(WG74,(((WG21,WG22),(LL18,WG43)),WG481))),LL1)),LL43F),WG42)),Methanosarcina);
(((WG56,(LL4,WG16)),((LL41A,((WG23A,(WG58A,LL5)),LL24)),((WG28,((WG22,(((WG481,(LL18,WG43)),WG74),WG21)),((LL1,(LL43F,(LLX12A,(WG42,(LLX3,WG26))))),((LL46,LLX17),LL9)))),(((((WG49,WG59),WG44),WG34B),((WG40,WG58B),(LL41B,(LL8,LL12)))),((LL37,LL13),(WG27,(WG14,(WG36,LL14)))))))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),(((WG28,((WG43,(((WG74,(WG21,WG22)),WG481),LL18)),((LL1,(LL43F,(LLX12A,(WG42,(LLX3,WG26))))),((LL46,LLX17),LL9)))),((WG49,(WG59,(WG44,(WG34B,((WG40,WG58B),((LL12,LL8),LL41B)))))),((LL37,LL13),(LL14,((WG27,WG14),WG36))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG43,((WG21,WG22),((WG481,WG74),LL18))),(((LL1,(LL43F,(LLX12A,(WG42,(LLX3,WG26))))),((LL46,LLX17),LL9)),((((LL37,LL13),(((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),((((WG49,WG59),WG44),WG34B),(WG40,WG58B))))),((WG56,(LL4,WG16)),(LL41A,(((WG23A,WG58A),LL5),LL24)))),WG28))),Methanosarcina);
((((WG49,(WG59,(WG44,(WG34B,((WG40,WG58B),((LL12,LL8),LL41B)))))),((LL37,LL13),((WG27,WG14),(WG36,LL14)))),(((WG56,(LL4,WG16)),(LL41A,((WG23A,(LL5,LL24)),WG58A))),(WG28,((LL1,(((LLX3,WG26),(LL43F,(((LLX17,LL46),LL9),WG42))),LLX12A)),(WG22,((((WG481,WG74),LL18),WG43),WG21)))))),Methanosarcina);
(((LL41A,((LL5,LL24),(WG58A,WG23A))),(((WG28,((LL1,((LL43F,((LLX17,LL46),LL9)),(LLX12A,(WG42,(LLX3,WG26))))),(WG43,((WG21,WG22),((WG481,WG74),LL18))))),((((LL12,LL8),LL41B),((WG34B,(WG49,(WG59,WG44))),(WG40,WG58B))),((LL37,LL13),((WG27,WG14),(WG36,LL14))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG43,(LL18,((WG21,WG22),(WG481,WG74)))),(((((WG49,((WG40,WG58B),(((LL8,LL12),LL41B),(WG34B,(WG59,WG44))))),((LL37,LL13),((WG27,WG14),(WG36,LL14)))),((WG56,(LL4,WG16)),(LL41A,((LL5,LL24),(WG58A,WG23A))))),WG28),(((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1)))),Methanosarcina);
((LLX12A,(((LL43F,WG42),(LLX3,WG26)),(LL1,((((WG74,(((WG43,LL18),(WG21,WG22)),WG481)),(((LL37,LL13),(((WG27,WG14),(WG36,LL14)),(((LL8,LL12),LL41B),((WG34B,(WG49,(WG59,WG44))),(WG40,WG58B))))),((WG56,(LL4,WG16)),(LL41A,((LL5,(WG58A,WG23A)),LL24))))),WG28),((LLX17,LL46),LL9))))),Methanosarcina);
((((WG56,(LL4,WG16)),(LL41A,((LL5,(WG58A,WG23A)),LL24))),((WG28,((((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(LLX3,WG26))),LL1)),(WG43,(LL18,((WG74,(WG21,WG22)),WG481))))),((LL37,LL13),(((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),((WG34B,(WG44,(WG49,WG59))),(WG40,WG58B))))))),Methanosarcina);
(((((WG22,(WG21,(((WG74,WG481),LL18),WG43))),WG56),(WG16,LL4)),(((WG28,(LL1,((LLX12A,((WG42,LL43F),(LLX3,WG26))),((LLX17,LL46),LL9)))),((WG49,((WG44,((((LL41B,LL8),LL12),(WG40,WG58B)),WG34B)),WG59)),((LL37,LL13),((LL14,WG36),(WG27,WG14))))),((WG58A,(WG23A,(LL5,LL24))),LL41A))),Methanosarcina);
(((WG43,((WG22,WG21),((WG74,WG481),LL18))),((WG28,(LL1,((LLX12A,((WG42,LL43F),(LLX3,WG26))),((LLX17,LL46),LL9)))),((((LL41B,(LL8,LL12)),((WG40,WG58B),(WG34B,((WG59,WG49),WG44)))),((LL37,LL13),((LL14,WG36),(WG27,WG14)))),((((WG23A,(LL5,WG58A)),LL24),LL41A),(WG56,(WG16,LL4)))))),Methanosarcina);
(((((LL37,LL13),(((LL14,WG36),(WG27,WG14)),(WG49,((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),WG59)))),((((WG23A,(LL5,WG58A)),LL24),LL41A),(WG56,(WG16,LL4)))),(WG28,(LL1,((LLX12A,(WG42,((((WG22,WG21),(((WG74,WG481),LL18),WG43)),LLX3),WG26))),(LL43F,((LL46,LLX17),LL9)))))),Methanosarcina);
((((((LL24,LL5),(WG58A,WG23A)),LL41A),(WG56,(WG16,LL4))),((WG28,((((LLX17,LL46),LL9),((((LL1,LLX12A),(LLX3,WG26)),WG42),LL43F)),(WG43,((WG22,WG21),((WG74,WG481),LL18))))),((WG49,((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),WG59)),((LL37,LL13),((LL14,WG36),(WG27,WG14)))))),Methanosarcina);
(((((LL24,LL5),(WG58A,WG23A)),LL41A),((WG56,(WG16,LL4)),((WG28,((LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),((LLX3,WG26),WG42))),(WG43,((WG22,WG21),((WG74,WG481),LL18))))),((WG44,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),(WG59,WG49))),((LL37,LL13),((LL14,WG36),(WG27,WG14))))))),Methanosarcina);
((WG28,(((LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),((LLX3,WG26),WG42))),((WG74,WG481),((LL18,(WG22,WG21)),WG43))),(((WG49,((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),WG59)),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),(((LL24,(LL5,(WG58A,WG23A))),LL41A),(WG56,(WG16,LL4)))))),Methanosarcina);
(((WG43,(((WG74,WG481),LL18),(WG22,WG21))),((((WG44,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),(WG59,WG49))),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),((((LL5,(WG58A,WG23A)),LL24),LL41A),(WG56,(WG16,LL4)))),(WG28,(LLX12A,((LL1,(WG42,(LL43F,((LL46,LLX17),LL9)))),(LLX3,WG26)))))),Methanosarcina);
((((((WG23A,(LL5,WG58A)),LL24),LL41A),(WG56,(WG16,LL4))),((WG28,((WG74,(WG481,(LL18,((WG22,WG21),WG43)))),(LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),((LL1,LLX3),WG26))))),((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG59,WG49),WG44)))))))),Methanosarcina);
((((WG43,(LL18,(WG481,((WG22,WG21),WG74)))),(LL1,(((LLX3,WG26),(WG42,(LL43F,((LL46,LLX17),LL9)))),LLX12A))),((((LL37,LL13),((WG27,(WG14,(LL14,WG36))),(WG49,((WG44,((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B)),WG59)))),(((WG23A,(LL5,WG58A)),(LL24,LL41A)),(WG56,(WG16,LL4)))),WG28)),Methanosarcina);
(((WG28,((WG43,((WG22,WG21),((WG74,WG481),LL18))),(LLX12A,((LL1,(LLX3,WG26)),(LL43F,(WG42,((LLX17,LL46),LL9))))))),(((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG59,WG49),WG44)))),((LL37,LL13),((LL14,WG36),(WG27,WG14)))),((LL41A,(((WG23A,LL5),WG58A),LL24)),(WG56,(WG16,LL4))))),Methanosarcina);
((((LL1,((LLX17,LL46),LL9)),((LLX12A,(WG42,(WG26,LLX3))),LL43F)),(((((WG36,(LL13,LL37)),(LL14,((WG27,WG14),(((LL41B,LL8),LL12),((WG40,WG58B),((WG44,(WG59,WG49)),WG34B)))))),(((LL4,WG16),WG56),(LL41A,(LL24,((WG23A,LL5),WG58A))))),WG28),((WG22,WG21),(((WG74,WG481),LL18),WG43)))),Methanosarcina);
(((((WG44,((WG59,WG49),(WG34B,((LL41B,(LL8,LL12)),(WG40,WG58B))))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))),(((LL4,WG16),WG56),(LL41A,((WG58A,(WG23A,LL5)),LL24)))),(WG28,((WG43,(((WG22,WG21),(WG74,WG481)),LL18)),(((LLX17,LL46),LL9),(LL1,((LL43F,LLX12A),(WG42,(WG26,LLX3)))))))),Methanosarcina);
(((((LL13,LL37),((WG49,(((WG34B,((LL41B,(LL8,LL12)),(WG40,WG58B))),WG44),WG59)),((WG27,WG14),(WG36,LL14)))),(((LL4,WG16),WG56),(LL41A,((WG23A,(LL5,WG58A)),LL24)))),(WG28,((WG43,((WG481,((WG22,WG21),WG74)),LL18)),((LL43F,((LL46,LLX17),LL9)),(LL1,(LLX12A,(WG42,(WG26,LLX3)))))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((WG28,((WG481,(((LL18,WG43),(WG22,WG21)),WG74)),(((LLX17,LL46),LL9),(LL1,(LLX12A,(LLX3,((LL43F,WG42),WG26))))))),((LL13,LL37),((((LL12,LL8),LL41B),(((((WG44,WG59),WG34B),WG40),WG58B),WG49)),((WG27,WG14),(WG36,LL14))))),((LL4,WG16),WG56))),Methanosarcina);
((((WG28,((WG43,((WG22,WG21),((WG74,WG481),LL18))),(LLX12A,(WG42,((WG26,LLX3),((((LLX17,LL46),LL9),LL1),LL43F)))))),((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),((((WG27,WG14),WG36),LL14),(LL13,LL37)))),(((LL4,WG16),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24)))),Methanosarcina);
((LLX12A,(((((WG28,((((LL13,LL37),((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),((WG27,WG14),(WG36,LL14)))),(((LL4,WG16),WG56),(LL41A,((WG58A,WG23A),(LL24,LL5))))),(WG43,((((WG22,WG21),WG74),WG481),LL18)))),((LL46,LLX17),LL9)),LL1),LL43F),(WG42,(WG26,LLX3)))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),((((((LL8,LL12),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),(((WG27,WG14),(WG36,LL14)),(LL13,LL37))),((((((WG42,(WG26,LLX3)),LLX12A),(LL43F,((LLX17,LL46),LL9))),LL1),(WG43,((((WG22,WG21),WG74),WG481),LL18))),WG28)),((LL4,WG16),WG56))),Methanosarcina);
((((LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3)))),((LLX17,LL46),LL9)),((WG43,((WG74,WG481),(LL18,(WG22,WG21)))),(WG28,((((LL4,WG16),WG56),(LL24,(LL41A,((WG23A,LL5),WG58A)))),((((WG44,(WG49,WG59)),WG34B),((WG58B,WG40),((LL12,LL8),LL41B))),(((WG27,WG14),(WG36,LL14)),(LL13,LL37))))))),Methanosarcina);
(((WG22,(WG21,(((LL18,WG43),WG481),WG74))),((WG28,((((LL4,WG16),WG56),(LL24,(LL41A,(LL5,(WG58A,WG23A))))),((LL13,LL37),((WG49,(WG59,((WG34B,((WG58B,WG40),((LL12,LL8),LL41B))),WG44))),((WG27,WG14),(WG36,LL14)))))),((LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3)))),((LLX17,LL46),LL9)))),Methanosarcina);
((LLX12A,(((WG42,(WG26,LLX3)),((((LL46,LLX17),LL9),(((((LL18,WG43),WG481),WG74),(WG22,WG21)),(WG28,((((LL4,WG16),WG56),(LL41A,((LL5,(WG58A,WG23A)),LL24))),((((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG58B,WG40))),((WG27,(WG14,(WG36,LL14))),(LL13,LL37))))))),LL1)),LL43F)),Methanosarcina);
((((WG28,(((((LL12,LL8),LL41B),((WG34B,(WG44,(WG59,WG49))),(WG40,WG58B))),((WG27,((LL14,WG36),WG14)),(LL37,LL13))),((WG56,(WG16,LL4)),(LL41A,((WG58A,WG23A),(LL5,LL24)))))),(((LL46,LLX17),LL9),(LL1,(((LL43F,WG42),(LLX3,WG26)),LLX12A)))),((WG481,(WG43,LL18)),(WG74,(WG21,WG22)))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),((((LL1,(LLX12A,((((LLX17,LL46),LL9),LL43F),(WG42,(LLX3,WG26))))),WG28),((WG43,((WG481,WG74),((WG21,WG22),LL18))),((((LL8,LL12),LL41B),((WG34B,(WG49,(WG44,WG59))),(WG40,WG58B))),(((LL14,WG36),(WG14,WG27)),(LL37,LL13))))),(WG56,(WG16,LL4)))),Methanosarcina);
(((LL41A,((WG58A,WG23A),(LL5,LL24))),((((WG44,((((WG40,WG58B),((LL12,LL8),LL41B)),WG34B),(WG49,WG59))),(((LL14,WG36),(WG14,WG27)),(LL37,LL13))),(WG28,((WG43,((WG21,WG22),(LL18,(WG481,WG74)))),(LL1,((((WG42,((LLX17,LL46),LL9)),LL43F),(LLX3,WG26)),LLX12A))))),(WG56,(WG16,LL4)))),Methanosarcina);
((WG28,(((WG43,((WG481,WG74),((WG21,WG22),LL18))),(((LLX17,LL46),LL9),((LL43F,(LLX12A,((LLX3,WG26),WG42))),LL1))),(((WG56,(WG16,LL4)),(LL41A,((WG58A,WG23A),(LL5,LL24)))),((WG49,(WG59,(WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B)))),(((LL14,WG36),(WG14,WG27)),(LL37,LL13)))))),Methanosarcina);
((WG28,((LL1,(((LL46,LLX17),LL9),(LLX12A,((LLX3,WG26),(LL43F,WG42))))),((((WG56,(WG16,LL4)),(LL41A,(((WG23A,LL5),WG58A),LL24))),((((LL12,LL8),LL41B),((WG49,(WG34B,(WG59,WG44))),(WG58B,WG40))),((LL14,(WG36,(WG14,WG27))),(LL37,LL13)))),(WG43,(LL18,(WG481,(WG74,(WG21,WG22)))))))),Methanosarcina);
((WG28,((((WG56,(WG16,LL4)),(((WG23A,(LL5,WG58A)),LL24),LL41A)),((WG49,(WG59,(WG44,(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B)))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))),((WG43,((WG21,WG22),((WG481,WG74),LL18))),(LLX12A,(LL1,((LLX3,WG26),(LL43F,(((LL46,LLX17),LL9),WG42)))))))),Methanosarcina);
(((((WG23A,(LL5,WG58A)),LL24),LL41A),((((LL37,LL13),((((WG58B,WG40),((LL12,LL8),LL41B)),(WG44,(WG34B,(WG49,WG59)))),((WG14,WG27),(LL14,WG36)))),(((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),(((LL46,LLX17),LL9),((WG42,((LL1,LLX3),WG26)),(LLX12A,LL43F)))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
(((((WG43,(LL18,((WG74,(WG21,WG22)),WG481))),(LLX12A,(LL1,((LLX3,WG26),(LL43F,(WG42,((LLX17,LL46),LL9))))))),WG28),(((WG56,(WG16,LL4)),(((LL5,(WG58A,WG23A)),LL24),LL41A)),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))))),Methanosarcina);
((((((WG58A,WG23A),LL5),LL24),LL41A),((((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((WG14,WG27),(LL14,WG36)))),(((WG43,((WG21,WG22),((WG481,WG74),LL18))),((LL1,(((LL43F,WG42),(LLX3,WG26)),LLX12A)),((LLX17,LL46),LL9))),WG28)),(WG56,(WG16,LL4)))),Methanosarcina);
((((WG74,WG481),((WG43,LL18),(WG21,WG22))),((LL1,(WG42,(((LL43F,((LLX17,LL46),LL9)),(LLX3,WG26)),LLX12A))),(WG28,(((WG56,(WG16,LL4)),(((WG23A,(LL5,WG58A)),LL24),LL41A)),((LL37,LL13),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),((WG14,WG27),(LL14,WG36)))))))),Methanosarcina);
(((((((WG58B,WG40),(((WG44,WG59),WG34B),WG49)),((LL41B,LL8),LL12)),(((WG14,(LL14,WG36)),WG27),(LL13,LL37))),((LL41A,(LL24,(WG23A,(WG58A,LL5)))),(WG56,(WG16,LL4)))),(((WG22,(WG21,((WG43,LL18),(WG74,WG481)))),(LL1,((LLX12A,(LLX3,WG26)),(WG42,(LL43F,((LL46,LLX17),LL9)))))),WG28)),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG23A,WG58A)))),((WG56,(WG16,LL4)),((((WG43,(LL18,(((WG22,WG21),WG74),WG481))),(((LL46,LLX17),LL9),((((LLX3,WG26),(LLX12A,LL1)),WG42),LL43F))),WG28),((LL13,LL37),((((WG58B,(WG49,WG40)),((WG44,WG59),WG34B)),((LL41B,LL8),LL12)),((LL14,WG36),(WG27,WG14))))))),Methanosarcina);
((((((WG43,(LL18,(((WG22,WG21),WG74),WG481))),(LLX12A,(LL1,(((((LLX17,LL46),LL9),WG42),LL43F),(LLX3,WG26))))),WG28),(((WG59,((WG34B,((LL41B,(LL8,LL12)),(WG58B,WG40))),WG44)),WG49),(((LL14,WG36),(WG27,WG14)),(LL13,LL37)))),((LL41A,((WG23A,WG58A),(LL24,LL5))),(WG56,(WG16,LL4)))),Methanosarcina);
(((WG43,((WG22,WG21),((WG74,WG481),LL18))),((LLX12A,(((LL43F,((LLX17,LL46),LL9)),LL1),(WG42,(LLX3,WG26)))),(WG28,(((WG44,((WG49,WG59),(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))),((LL41A,((WG58A,(LL5,WG23A)),LL24)),(WG56,(WG16,LL4))))))),Methanosarcina);
((((WG28,((WG74,(WG481,((WG43,LL18),(WG22,WG21)))),(((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,(WG49,WG40)),((WG44,WG59),WG34B))),(WG27,(WG14,(LL14,WG36))))),((LL41A,(((WG23A,LL5),WG58A),LL24)),(WG56,(WG16,LL4)))))),LL1),(((LL43F,(WG42,((LLX17,LL46),LL9))),(LLX3,WG26)),LLX12A)),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG56,(WG16,LL4)),((WG28,((((LLX17,LL46),LL9),(LL43F,(((LLX12A,LL1),(LLX3,WG26)),WG42))),(WG22,(WG21,(LL18,(WG481,(WG43,WG74))))))),((LL13,LL37),((((LL12,LL8),LL41B),((WG58B,(WG49,WG40)),(WG44,(WG59,WG34B)))),((LL14,WG36),(WG27,WG14))))))),Methanosarcina);
((LLX12A,(LL43F,(((LLX3,WG26),WG42),(LL1,(((WG43,(LL18,(WG481,((WG22,WG21),WG74)))),(((((LL12,(LL8,LL41B)),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))),((LL41A,((WG58A,(WG23A,LL5)),LL24)),(WG56,(WG16,LL4)))),WG28)),((LLX17,LL46),LL9)))))),Methanosarcina);
(((((WG49,(WG40,((((WG44,WG59),WG34B),((LL41B,LL8),LL12)),WG58B))),(((LL14,WG36),(WG27,WG14)),(LL13,LL37))),((LL41A,(((WG23A,LL5),WG58A),LL24)),(WG56,(WG16,LL4)))),(WG28,((((LLX17,LL46),LL9),(((LLX12A,(LLX3,WG26)),(LL43F,WG42)),LL1)),(WG43,((LL18,(WG22,WG21)),(WG74,WG481)))))),Methanosarcina);
((LLX12A,((LLX3,WG26),(((((LLX17,LL46),LL9),LL43F),WG42),(LL1,(((((((LL8,LL12),LL41B),((WG58B,WG40),((WG44,(WG49,WG59)),WG34B))),((LL14,(WG36,(WG27,WG14))),(LL13,LL37))),((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4)))),(WG43,((WG22,WG21),((WG74,WG481),LL18)))),WG28))))),Methanosarcina);
((((WG22,WG21),((WG74,WG481),(WG43,LL18))),((WG28,((LLX12A,((LLX3,WG26),(LL43F,(WG42,((LLX17,LL46),LL9))))),LL1)),((((((WG44,WG59),WG34B),(WG58B,(WG49,WG40))),((LL12,LL8),LL41B)),(((WG27,WG14),(LL14,WG36)),(LL13,LL37))),((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(WG56,(WG16,LL4)))))),Methanosarcina);
(((((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24))),((LL37,LL13),((WG36,(WG27,WG14)),(LL14,(WG49,(WG59,(((WG40,WG58B),(WG34B,(LL41B,(LL12,LL8)))),WG44))))))),(((((LL46,LLX17),LL9),(((WG42,(LLX3,WG26)),(LLX12A,LL43F)),LL1)),((LL18,((WG21,WG22),(WG481,WG74))),WG43)),WG28)),Methanosarcina);
(((WG74,((LL18,(WG43,(WG21,WG22))),WG481)),((WG28,(((WG56,(LL4,WG16)),(LL24,(LL41A,(WG23A,(WG58A,LL5))))),((WG49,(((WG40,WG58B),((LL12,LL8),LL41B)),(WG34B,(WG44,WG59)))),((LL37,LL13),((LL14,WG36),(WG27,WG14)))))),(LL1,(LLX3,(WG26,(LLX12A,(LL43F,(((LL46,LLX17),LL9),WG42)))))))),Methanosarcina);
(((((LL5,(WG23A,WG58A)),LL24),LL41A),((((((LL12,LL8),LL41B),((WG34B,(WG44,WG59)),((WG40,WG49),WG58B))),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),(((LLX12A,((((LL46,LLX17),LL9),LL1),((WG42,LL43F),(LLX3,WG26)))),(WG481,(WG74,((WG21,WG22),(LL18,WG43))))),WG28)),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG56,(LL4,WG16)),(((WG58A,((WG23A,LL24),LL5)),LL41A),(((((LL12,LL8),LL41B),((WG49,((WG44,WG59),WG34B)),(WG40,WG58B))),((LL37,LL13),(LL14,(WG36,(WG27,WG14))))),(((((LL46,LLX17),LL9),(LL1,(LLX12A,((LLX3,WG26),(WG42,LL43F))))),(WG43,((WG21,WG22),((WG481,WG74),LL18)))),WG28)))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG49,((WG44,WG59),WG34B)),(WG40,WG58B))),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),(((((LLX17,LL46),LL9),(LL1,((LLX12A,((LLX3,WG26),WG42)),LL43F))),(((LL18,(WG43,(WG21,WG22))),WG74),WG481)),WG28)),((WG56,(LL4,WG16)),(((LL5,(WG58A,WG23A)),LL24),LL41A))),Methanosarcina);
(((((WG23A,(LL5,WG58A)),LL24),LL41A),((((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(WG49,(WG59,((WG34B,((WG40,WG58B),((LL12,LL8),LL41B))),WG44))))),(((LL1,(((LL43F,(WG42,((LLX17,LL46),LL9))),(LLX3,WG26)),LLX12A)),(WG43,((WG21,WG22),((WG74,WG481),LL18)))),WG28)),(WG56,(LL4,WG16)))),Methanosarcina);
((((((LL5,(WG58A,WG23A)),LL24),LL41A),(((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),(((WG44,(WG49,WG59)),WG34B),(WG40,WG58B))))),(((LLX12A,(LL1,((LL43F,(WG42,((LLX17,LL46),LL9))),(LLX3,WG26)))),(((WG21,WG22),WG74),(WG481,(LL18,WG43)))),WG28))),(WG56,(LL4,WG16))),Methanosarcina);
((((((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(((LL12,LL8),LL41B),((((WG44,WG59),WG34B),WG49),(WG40,WG58B))))),(((((LL46,LLX17),LL9),((LL43F,((WG42,(LLX3,WG26)),LLX12A)),LL1)),(WG74,((WG43,(LL18,(WG21,WG22))),WG481))),WG28)),(WG56,(LL4,WG16))),((WG58A,((LL5,LL24),WG23A)),LL41A)),Methanosarcina);
((((((LL37,LL13),(((WG27,WG14),(LL14,WG36)),(WG49,(WG59,((WG34B,((WG40,WG58B),((LL12,LL8),LL41B))),WG44))))),(((((LLX17,LL46),LL9),((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1)),(((WG21,WG22),((WG481,WG74),LL18)),WG43)),WG28)),(WG56,(LL4,WG16))),((LL5,(WG23A,WG58A)),(LL24,LL41A))),Methanosarcina);
((((((((WG40,WG58B),((LL12,LL8),LL41B)),((WG44,(WG49,WG59)),WG34B)),((LL37,LL13),((WG27,WG14),(LL14,WG36)))),(((((LLX17,LL46),LL9),((((WG42,(LLX3,WG26)),LLX12A),LL43F),LL1)),(((WG21,WG22),((WG481,WG74),LL18)),WG43)),WG28)),(WG56,(LL4,WG16))),((LL5,(WG23A,WG58A)),(LL24,LL41A))),Methanosarcina);
(((((WG23A,(LL5,WG58A)),LL24),LL41A),(((LL4,WG16),WG56),(((LL13,LL37),(((WG14,WG27),(WG36,LL14)),((LL12,(LL8,LL41B)),((WG58B,WG40),(WG49,(WG44,(WG34B,WG59))))))),(WG28,((WG43,((WG74,WG481),((WG22,WG21),LL18))),(LL1,(LLX12A,(WG42,(((LL43F,((LL46,LLX17),LL9)),LLX3),WG26))))))))),Methanosarcina);
((((((WG23A,(LL5,WG58A)),LL24),LL41A),((LL4,WG16),WG56)),((((LL12,(LL8,LL41B)),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))),((LL13,LL37),(LL14,((WG14,WG27),WG36)))),(WG28,(((WG481,(WG43,LL18)),(WG74,(WG22,WG21))),((LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26)))),((LL46,LLX17),LL9)))))),Methanosarcina);
((LLX12A,((((((((((LL24,LL5),(WG58A,WG23A)),LL41A),((LL4,WG16),WG56)),((LL13,LL37),(((WG14,WG27),(WG36,LL14)),((LL12,(LL8,LL41B)),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B)))))),WG28),((WG22,WG21),((WG43,LL18),(WG481,WG74)))),LL1),(LL43F,(((LL46,LLX17),LL9),WG42))),(LLX3,WG26))),Methanosarcina);
((((((((WG58A,WG23A),LL5),LL41A),LL24),((LL4,WG16),WG56)),((LL13,LL37),(((WG14,WG27),(WG36,LL14)),((LL12,(LL8,LL41B)),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B)))))),(WG28,((((WG481,WG74),((WG22,WG21),LL18)),WG43),(LL1,((((LL43F,((LL46,LLX17),LL9)),WG42),(WG26,LLX12A)),LLX3))))),Methanosarcina);
((((((WG58A,WG23A),LL5),LL41A),LL24),(((LL4,WG16),WG56),(((((LL41B,LL8),LL12),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),(WG28,(((LL18,(WG481,(WG74,(WG22,WG21)))),WG43),(LL1,(((WG26,LLX3),(WG42,(((LL46,LLX17),LL9),LL43F))),LLX12A))))))),Methanosarcina);
(((((WG58A,WG23A),(LL24,LL5)),LL41A),(((LL4,WG16),WG56),(((LL13,LL37),(((WG36,(WG27,WG14)),LL14),(((LL41B,LL8),LL12),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))))),(WG28,(((LL18,(WG481,(WG74,(WG22,WG21)))),WG43),(((LLX17,LL46),LL9),(((LLX12A,(WG42,(WG26,LLX3))),LL43F),LL1))))))),Methanosarcina);
(((((WG58A,(WG23A,LL5)),LL41A),LL24),(((LL4,WG16),WG56),(((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(WG49,(((WG34B,((LL41B,(LL8,LL12)),(WG58B,WG40))),WG44),WG59)))),(WG28,(((LL18,((WG22,WG21),(WG481,WG74))),WG43),(((LLX17,LL46),LL9),(((LLX12A,(WG42,(WG26,LLX3))),LL43F),LL1))))))),Methanosarcina);
(((((LL5,(WG58A,WG23A)),LL41A),LL24),(((LL4,WG16),WG56),(((LL13,LL37),(((WG27,WG14),(LL14,WG36)),((LL12,(LL41B,LL8)),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))))),(WG28,((((WG481,WG74),(LL18,(WG22,WG21))),WG43),(((LLX3,(WG42,WG26)),(LL43F,LLX12A)),(LL1,((LLX17,LL46),LL9)))))))),Methanosarcina);
(((WG28,((WG481,(WG74,((WG43,LL18),(WG22,WG21)))),((LLX12A,(((LL43F,WG42),WG26),(LL1,LLX3))),((LLX17,LL46),LL9)))),(((((LL24,LL5),(WG58A,WG23A)),LL41A),((LL4,WG16),WG56)),((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(((LL41B,LL8),LL12),((WG58B,WG40),((WG44,(WG59,WG49)),WG34B))))))),Methanosarcina);
((((LL46,LLX17),LL9),(((((((LL24,(WG58A,(LL5,WG23A))),LL41A),((LL4,WG16),WG56)),((LL13,LL37),(((WG27,WG14),(LL14,WG36)),(WG49,(((WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))),WG44),WG59))))),WG28),(WG43,(((WG481,WG74),LL18),(WG22,WG21)))),(((LLX12A,(WG42,(WG26,LLX3))),LL43F),LL1))),Methanosarcina);
(((((((WG49,((WG59,WG44),((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B))),((WG36,LL14),((WG14,WG27),(LL37,LL13)))),((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24)))),(((WG22,WG21),(LL18,(WG481,WG74))),WG43)),WG28),(((LLX17,LL46),LL9),(((LLX12A,(WG42,(WG26,LLX3))),LL43F),LL1))),Methanosarcina);
(((WG22,(WG21,(LL18,(WG43,(WG481,WG74))))),((WG28,(LL1,(((LLX12A,(WG42,WG26)),(((LLX17,LL46),LL9),LL43F)),LLX3))),((WG49,((WG40,WG58B),(((WG34B,WG59),WG44),((((WG36,LL14),(LL37,LL13)),(WG14,WG27)),((LL12,LL8),LL41B))))),((WG56,(LL4,WG16)),(LL41A,((LL5,(WG23A,WG58A)),LL24)))))),Methanosarcina);
((((((LL37,LL13),((WG14,WG27),(WG36,LL14))),(((LL12,LL8),LL41B),(((WG40,WG49),WG58B),(WG34B,(WG59,WG44))))),((WG56,(LL4,WG16)),(LL41A,((WG23A,WG58A),(LL24,LL5))))),(WG28,((WG43,(((WG22,WG21),(WG481,WG74)),LL18)),(((LL46,LLX17),LL9),(LLX12A,((LL43F,WG42),((LL1,LLX3),WG26))))))),Methanosarcina);
(((LL41A,((WG23A,WG58A),(LL24,LL5))),(((WG28,((WG43,((WG22,WG21),((WG481,WG74),LL18))),(LLX12A,((WG42,((LL1,LLX3),WG26)),(LL43F,((LL46,LLX17),LL9)))))),(((LL37,LL13),((WG14,WG27),(WG36,LL14))),(((WG34B,((WG49,WG59),WG44)),(WG40,WG58B)),((LL12,LL8),LL41B)))),(WG56,(LL4,WG16)))),Methanosarcina);
((LLX12A,(((WG42,(LLX3,WG26)),(LL1,(LL43F,((LL46,LLX17),LL9)))),((((((LL37,LL13),((WG14,WG27),(WG36,LL14))),(((WG34B,((WG49,WG59),WG44)),(WG40,WG58B)),((LL12,LL8),LL41B))),((WG56,(LL4,WG16)),((LL41A,((WG23A,WG58A),LL5)),LL24))),WG28),(WG43,(LL18,((WG481,WG74),(WG22,WG21))))))),Methanosarcina);
(((WG28,(((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(WG49,(WG59,(WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B)))))),((WG56,(LL4,WG16)),((LL41A,((WG23A,WG58A),LL5)),LL24)))),((WG22,(WG21,(((WG43,LL18),WG481),WG74))),(((LLX12A,((LL43F,WG42),(LLX3,WG26))),((LLX17,LL46),LL9)),LL1))),Methanosarcina);
((((LL41A,((WG23A,WG58A),LL5)),LL24),(((((WG43,((LL18,(WG481,WG74)),(WG22,WG21))),(((LLX17,LL46),LL9),(LL1,((LLX12A,(WG42,(LLX3,WG26))),LL43F)))),WG28),((LL37,LL13),(((WG14,WG27),(WG36,LL14)),(WG49,(WG59,(WG44,(((WG40,WG58B),((LL12,LL8),LL41B)),WG34B))))))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG43,((WG481,WG74),((WG22,WG21),LL18))),((((((LL12,LL8),LL41B),(((WG44,WG59),WG34B),(WG49,(WG40,WG58B)))),((LL37,LL13),((WG14,WG27),(WG36,LL14)))),((WG56,(LL4,WG16)),(LL41A,((WG23A,WG58A),(LL24,LL5))))),((((LLX17,LL46),LL9),(LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26))))),WG28))),Methanosarcina);
(((((LL46,LLX17),LL9),(LL1,(LLX12A,((LL43F,WG42),(LLX3,WG26))))),(WG28,((WG43,(LL18,((WG481,WG74),(WG22,WG21)))),(((LL37,LL13),(((WG14,WG27),(WG36,LL14)),((((WG44,(WG49,WG59)),WG34B),(WG40,WG58B)),((LL12,LL8),LL41B)))),((WG56,(LL4,WG16)),(LL41A,(((LL5,WG23A),WG58A),LL24))))))),Methanosarcina);
(((((LLX17,LL46),LL9),(LL1,(((LLX3,WG26),(LLX12A,WG42)),LL43F))),(((WG22,WG21),(((LL18,WG43),WG481),WG74)),(((((((WG44,(WG49,WG59)),WG34B),(WG40,WG58B)),((LL12,LL8),LL41B)),((LL37,LL13),(LL14,((WG14,WG27),WG36)))),((WG56,(LL4,WG16)),(LL41A,(((LL5,WG23A),WG58A),LL24)))),WG28))),Methanosarcina);
((LLX12A,(((LL43F,((((((LL13,LL37),(((WG34B,((WG59,WG49),WG44)),(((LL12,LL8),LL41B),(WG40,WG58B))),(WG27,((WG36,LL14),WG14)))),((((WG58A,WG23A),(LL24,LL5)),LL41A),(WG56,(LL4,WG16)))),WG28),((WG74,(WG21,WG22)),(WG481,(WG43,LL18)))),((LLX17,LL46),LL9))),((LL1,LLX3),WG26)),WG42)),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),((WG56,(LL4,WG16)),(((((((((LLX3,WG26),WG42),LLX12A),LL43F),((LLX17,LL46),LL9)),LL1),WG28),((WG481,WG74),((WG21,WG22),(WG43,LL18)))),((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG59,WG49),WG44)))),((WG36,LL14),(WG14,WG27))))))),Methanosarcina);
((LLX12A,((LL1,(WG28,(((WG481,WG74),((WG21,WG22),(WG43,LL18))),((((WG36,LL14),(WG14,WG27)),((LL13,LL37),(WG44,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),(WG59,WG49))))),((LL41A,(((WG58A,WG23A),LL5),LL24)),(WG56,(LL4,WG16))))))),((LLX3,WG26),((((LLX17,LL46),LL9),LL43F),WG42)))),Methanosarcina);
((((LL41A,((WG58A,(WG23A,LL5)),LL24)),(WG56,(LL4,WG16))),(((((((LLX17,LL46),LL9),(((WG42,(LLX3,WG26)),LLX12A),LL43F)),LL1),WG28),(WG43,(LL18,((WG481,WG74),(WG21,WG22))))),((LL13,LL37),((WG36,LL14),(WG14,(WG27,(((LL12,LL8),LL41B),((WG40,WG58B),(WG49,(WG34B,(WG59,WG44))))))))))),Methanosarcina);
((((((LL13,LL37),((WG36,LL14),(WG14,WG27))),(((LL12,LL8),LL41B),((WG40,WG58B),(WG49,(WG34B,(WG59,WG44)))))),(((WG23A,(LL5,WG58A)),(LL24,LL41A)),(WG56,(LL4,WG16)))),(((LL1,(((LLX3,WG26),((LL43F,((LLX17,LL46),LL9)),WG42)),LLX12A)),WG28),(((WG43,LL18),(WG74,(WG21,WG22))),WG481))),Methanosarcina);
(((((WG21,WG22),(LL18,(WG481,WG74))),WG43),((WG56,(LL4,WG16)),(((((LL1,(LLX12A,(WG42,(WG26,LLX3)))),(LL43F,((LLX17,LL46),LL9))),WG28),((LL13,LL37),(((WG36,LL14),(WG14,WG27)),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG49,WG59),WG44))))))),(((WG23A,(LL24,LL5)),WG58A),LL41A)))),Methanosarcina);
(((((((WG21,WG22),(LL18,(WG481,WG74))),WG43),((LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3)))),((LL46,LLX17),LL9))),WG28),(((LL13,LL37),(((WG36,LL14),(WG14,WG27)),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG49,WG59),WG44)))))),((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(LL4,WG16))))),Methanosarcina);
((((LL41A,(LL5,(WG58A,WG23A))),LL24),((WG56,(LL4,WG16)),((((((WG21,WG22),(LL18,(WG481,WG74))),WG43),(((LLX12A,(WG42,(WG26,(LL1,LLX3)))),LL43F),((LL46,LLX17),LL9))),WG28),((LL13,LL37),((LL14,((WG14,WG27),WG36)),(((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG49,WG59),WG44))))))))),Methanosarcina);
(((((WG43,(LL18,(WG481,(WG74,(WG21,WG22))))),(LL1,((LL43F,(((LLX17,LL46),LL9),WG42)),((WG26,LLX3),LLX12A)))),WG28),(((((LL12,LL8),LL41B),(((WG49,WG40),WG58B),(WG34B,(WG59,WG44)))),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),((LL41A,(LL24,((WG58A,WG23A),LL5))),(WG56,(LL4,WG16))))),Methanosarcina);
(((((WG74,(((WG43,LL18),(WG21,WG22)),WG481)),(((LL46,LLX17),LL9),((((LL43F,WG42),(WG26,LLX3)),LLX12A),LL1))),WG28),(((((LL12,LL8),LL41B),((WG49,(WG34B,(WG59,WG44))),(WG58B,WG40))),((LL13,LL37),((WG14,WG27),(WG36,LL14)))),((LL41A,(LL24,((WG58A,WG23A),LL5))),(WG56,(LL4,WG16))))),Methanosarcina);
((WG28,(((LLX12A,(((WG26,LLX3),(LL43F,((LLX17,LL46),LL9))),WG42)),LL1),((WG74,(((WG43,LL18),(WG21,WG22)),WG481)),(((WG49,((WG40,WG58B),(((LL12,LL8),LL41B),(WG44,(WG59,WG34B))))),(((WG36,LL14),(WG14,WG27)),(LL37,LL13))),((LL41A,((WG58A,WG23A),(LL5,LL24))),((WG16,LL4),WG56)))))),Methanosarcina);
((((((LL12,LL8),LL41B),((WG40,WG58B),(WG49,(WG34B,(WG44,WG59))))),((LL14,((WG14,WG27),WG36)),(LL37,LL13))),(((LL41A,(((WG58A,WG23A),LL5),LL24)),((WG16,LL4),WG56)),((((LL43F,((LLX17,LL46),LL9)),(((WG42,(WG26,LLX3)),LLX12A),LL1)),(WG43,(LL18,((WG21,WG22),(WG481,WG74))))),WG28))),Methanosarcina);
((WG28,((((LL37,LL13),(((LL12,(LL8,LL41B)),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(WG27,((WG36,LL14),WG14)))),((LL41A,((WG58A,WG23A),(LL5,LL24))),((WG16,LL4),WG56))),((LLX12A,(LL43F,((LL1,((LLX17,LL46),LL9)),(LLX3,(WG42,WG26))))),(WG481,(WG74,((WG43,LL18),(WG21,WG22))))))),Methanosarcina);
(((((LLX12A,((LL1,(LL43F,((LL46,LLX17),LL9))),((LLX3,WG26),WG42))),WG28),((((LL41B,(LL12,LL8)),(((WG49,WG40),WG58B),(WG34B,(WG44,WG59)))),((LL14,((WG27,WG14),WG36)),(LL37,LL13))),((LL41A,((WG58A,WG23A),(LL5,LL24))),((WG16,LL4),WG56)))),(WG481,(WG74,(LL18,((WG21,WG22),WG43))))),Methanosarcina);
(((LL41A,(((WG58A,WG23A),LL5),LL24)),(((WG16,LL4),WG56),((((WG481,(WG74,(LL18,((WG21,WG22),WG43)))),(LLX12A,((LL1,((LLX17,LL46),LL9)),((LLX3,WG26),(LL43F,WG42))))),WG28),((WG49,(WG40,(WG58B,((WG34B,(WG44,WG59)),((LL12,LL8),LL41B))))),(((WG27,WG14),(WG36,LL14)),(LL37,LL13)))))),Methanosarcina);
(((LL41A,((WG58A,(WG23A,LL5)),LL24)),(((WG16,LL4),WG56),((((WG43,(((WG481,WG74),LL18),(WG21,WG22))),(LLX12A,((LL1,(LL43F,(((LLX17,LL46),LL9),WG42))),(LLX3,WG26)))),WG28),((WG49,(WG40,(WG58B,((WG34B,(WG44,WG59)),((LL12,LL8),LL41B))))),((WG36,LL14),((LL37,LL13),(WG27,WG14))))))),Methanosarcina);
((LLX12A,((LL1,(WG28,((((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),(((WG27,WG14),(WG36,LL14)),(LL37,LL13))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG16,LL4),WG56))),(WG481,((LL18,WG43),((WG21,WG22),WG74)))))),(((LL43F,((LL46,LLX17),LL9)),WG42),(LLX3,WG26)))),Methanosarcina);
((LLX12A,((LL1,(WG28,(((LL41A,((WG58A,(WG23A,LL5)),LL24)),((WG16,LL4),WG56)),(((((LL18,WG43),(WG21,WG22)),WG74),WG481),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((LL14,((WG27,WG14),WG36)),(LL37,LL13))))))),(((LL43F,((LLX17,LL46),LL9)),WG42),(LLX3,WG26)))),Methanosarcina);
((((LL41A,((LL5,(WG58A,WG23A)),LL24)),((WG16,LL4),WG56)),((((WG43,(((WG21,WG22),(WG74,WG481)),LL18)),(((((LL43F,WG42),(LLX3,WG26)),LLX12A),LL1),((LLX17,LL46),LL9))),WG28),((LL37,LL13),((WG49,(WG59,(((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44))),((WG27,WG14),(WG36,LL14)))))),Methanosarcina);
(((LL41A,((LL5,(WG58A,WG23A)),LL24)),(((WG16,LL4),WG56),((((WG43,(LL18,(((WG21,WG22),WG74),WG481))),(LL1,((((((LLX17,LL46),LL9),LL43F),WG42),(LLX3,WG26)),LLX12A))),WG28),((LL37,LL13),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG49,WG59))))),((WG27,WG14),(WG36,LL14))))))),Methanosarcina);
(((LL41A,((LL24,LL5),(WG23A,WG58A))),((WG56,(LL4,WG16)),(((((LL18,((WG74,WG481),(WG22,WG21))),WG43),(((LLX17,LL46),LL9),(LL1,(((WG42,(WG26,LLX3)),LLX12A),LL43F)))),WG28),((((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,(WG44,(WG59,WG49)))))),(LL13,LL37))))),Methanosarcina);
((LLX12A,(WG42,((LL43F,(((WG28,(((((WG59,WG49),(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),WG44)),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16)))),(WG43,((WG22,WG21),(LL18,(WG74,WG481)))))),((LL46,LLX17),LL9)),LL1)),(WG26,LLX3)))),Methanosarcina);
((LLX12A,(((WG28,((((WG49,(((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B),(WG59,WG44))),((LL13,LL37),(LL14,((WG27,WG14),WG36)))),((((LL5,(WG23A,WG58A)),LL24),LL41A),(WG56,(LL4,WG16)))),(WG74,(WG481,((WG22,WG21),(WG43,LL18)))))),LL1),((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42))))),Methanosarcina);
((((((LL5,WG23A),WG58A),LL24),LL41A),((WG56,(LL4,WG16)),(((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),((LL13,LL37),((WG27,WG14),(WG36,LL14)))),(((LL1,(((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42))),LLX12A)),(((WG43,LL18),(WG74,(WG22,WG21))),WG481)),WG28)))),Methanosarcina);
((LLX12A,((((((((WG22,WG21),WG43),LL18),WG74),WG481),(WG28,((((((LL24,LL5),WG23A),WG58A),LL41A),(WG56,(LL4,WG16))),((LL13,LL37),(((WG27,WG14),(WG36,LL14)),(((LL12,LL8),LL41B),((WG58B,WG40),((WG34B,(WG59,WG44)),WG49)))))))),LL1),(WG26,(LLX3,(LL43F,(((LL46,LLX17),LL9),WG42)))))),Methanosarcina);
(((((LL46,LLX17),LL9),WG42),(((LLX12A,(((WG43,(LL18,((WG74,WG481),(WG22,WG21)))),(WG28,(((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),((LL13,LL37),((WG27,WG14),(WG36,LL14))))))),LL1)),(LLX3,WG26)),LL43F)),Methanosarcina);
((LLX12A,(((((LL46,LLX17),LL9),(((WG43,((WG74,WG481),((WG22,WG21),LL18))),(WG28,(((LL41A,((WG58A,(LL5,WG23A)),LL24)),(WG56,(LL4,WG16))),((((LL12,LL8),LL41B),((WG58B,WG40),(WG34B,((WG49,WG59),WG44)))),((LL13,LL37),((WG27,WG14),(WG36,LL14))))))),LL1)),(WG42,(LLX3,WG26))),LL43F)),Methanosarcina);
((((LL41A,((LL24,LL5),(WG23A,WG58A))),(WG56,(LL4,WG16))),((((WG49,WG59),(WG44,((((LL12,LL8),LL41B),(WG58B,WG40)),WG34B))),((LL13,LL37),(WG27,(WG14,(WG36,LL14))))),(((LL1,(((WG42,(LLX3,WG26)),LLX12A),(LL43F,((LL46,LLX17),LL9)))),((WG43,LL18),(WG481,(WG74,(WG22,WG21))))),WG28))),Methanosarcina);
(((((((LL12,LL8),LL41B),(WG58B,WG40)),((WG34B,(WG59,WG44)),WG49)),((LL13,LL37),(WG27,(WG14,(WG36,LL14))))),((((((LL46,LLX17),LL9),(LL1,(((LL43F,WG42),(LLX3,WG26)),LLX12A))),(WG74,(((WG43,LL18),(WG22,WG21)),WG481))),WG28),(((LL24,LL41A),(WG58A,(LL5,WG23A))),(WG56,(LL4,WG16))))),Methanosarcina);
(((((((LL12,LL8),LL41B),((WG58B,(WG40,WG49)),(WG34B,(WG59,WG44)))),((LL13,LL37),((WG36,LL14),(WG27,WG14)))),(((LLX12A,(WG42,((LLX3,WG26),((LL43F,((LLX17,LL46),LL9)),LL1)))),(WG43,(LL18,((WG74,(WG22,WG21)),WG481)))),WG28)),((LL41A,((LL5,(WG23A,WG58A)),LL24)),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG28,((LLX12A,((WG42,(LL43F,((LLX17,LL46),LL9))),((LL1,LLX3),WG26))),(WG43,((WG21,WG22),((WG481,WG74),LL18))))),(((WG49,(((((LL41B,(LL12,LL8)),(WG40,WG58B)),WG34B),WG44),WG59)),(((WG36,LL14),(WG27,WG14)),(LL13,LL37))),((WG56,(LL4,WG16)),(LL41A,(((WG58A,WG23A),LL5),LL24))))),Methanosarcina);
((((WG43,((WG21,WG22),((WG481,WG74),LL18))),(WG28,(((LLX3,WG26),(LLX12A,(LL43F,(((LLX17,LL46),LL9),WG42)))),LL1))),(((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((WG36,LL14),(WG27,WG14)))),((WG56,(LL4,WG16)),(LL41A,(((WG58A,WG23A),LL5),LL24))))),Methanosarcina);
((LLX12A,(((WG42,LL43F),(LLX3,WG26)),(LL1,(((LLX17,LL46),LL9),((WG43,((WG21,WG22),((WG481,WG74),LL18))),((((LL13,LL37),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((WG36,LL14),(WG27,WG14)))),((WG56,(LL4,WG16)),(LL41A,((WG58A,(WG23A,LL5)),LL24)))),WG28)))))),Methanosarcina);
(((WG56,(LL4,WG16)),((LL41A,((LL24,LL5),(WG58A,WG23A))),((WG28,((LLX12A,((LL1,((LLX17,LL46),LL9)),((LLX3,WG26),(WG42,LL43F)))),(WG43,((WG481,WG74),(LL18,(WG21,WG22)))))),((LL13,LL37),((WG49,((((((LL12,LL8),LL41B),(WG40,WG58B)),WG34B),WG44),WG59)),((WG36,LL14),(WG27,WG14))))))),Methanosarcina);
((LLX12A,(((WG43,((WG21,WG22),((WG481,WG74),LL18))),((((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,((WG44,WG59),WG49)))),(((WG36,LL14),(WG27,WG14)),(LL13,LL37))),((WG56,(LL4,WG16)),((LL24,(WG58A,(WG23A,LL5))),LL41A))),WG28)),((((LLX17,LL46),LL9),(((WG26,WG42),LLX3),LL1)),LL43F))),Methanosarcina);
((LLX12A,((((LL1,((WG43,((WG21,WG22),((WG481,WG74),LL18))),((((WG49,(((((LL12,(LL8,LL41B)),(WG40,WG58B)),WG34B),WG44),WG59)),((LL14,((WG27,WG14),WG36)),(LL13,LL37))),((WG56,(LL4,WG16)),((LL24,(LL5,(WG58A,WG23A))),LL41A))),WG28))),((LLX17,LL46),LL9)),((WG26,WG42),LLX3)),LL43F)),Methanosarcina);
(((WG43,((WG21,WG22),((WG481,WG74),LL18))),(((((((((LL12,(LL8,LL41B)),(WG40,WG58B)),WG34B),WG44),(WG59,WG49)),(((WG27,WG14),(WG36,LL14)),(LL13,LL37))),((WG56,(LL4,WG16)),((LL24,(LL5,(WG58A,WG23A))),LL41A))),WG28),((LL43F,((LL46,LLX17),LL9)),(LL1,(LLX12A,((WG26,LLX3),WG42)))))),Methanosarcina);
((WG28,(((((LL46,LLX17),LL9),(LL1,(LL43F,(LLX12A,((WG26,LLX3),WG42))))),(WG43,((WG21,WG22),((WG481,WG74),LL18)))),(((LL13,LL37),((WG49,(((((LL41B,(LL12,LL8)),(WG40,WG58B)),WG34B),WG44),WG59)),((WG27,WG14),(WG36,LL14)))),((WG56,(LL4,WG16)),((LL24,(LL5,(WG58A,WG23A))),LL41A))))),Methanosarcina);
((((WG56,(LL4,WG16)),((LL24,(LL5,(WG58A,WG23A))),LL41A)),((WG28,((((LLX17,LL46),LL9),(LL1,(LLX12A,((WG26,(LL43F,LLX3)),WG42)))),(WG43,((WG21,WG22),((WG481,WG74),LL18))))),((LL13,LL37),(((LL41B,(LL12,LL8)),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((WG27,WG14),(WG36,LL14)))))),Methanosarcina);
((((LL24,(LL5,(WG58A,WG23A))),LL41A),(((WG28,((LL1,(LLX12A,((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42))))),(WG22,(((WG481,WG74),(WG43,LL18)),WG21)))),((((LL12,LL8),LL41B),((WG40,WG58B),(WG34B,(WG44,(WG59,WG49))))),((LL14,((WG27,WG14),WG36)),(LL13,LL37)))),(WG56,(LL4,WG16)))),Methanosarcina);
(((LL41A,((WG58A,WG23A),(LL24,LL5))),(((WG28,((WG74,(((WG43,LL18),(WG21,WG22)),WG481)),(LL1,(LLX12A,((WG26,LLX3),((WG42,(LL9,(LLX17,LL46))),LL43F)))))),((((WG34B,((WG59,WG49),WG44)),((WG58B,WG40),((LL8,LL12),LL41B))),((WG36,LL14),(WG14,WG27))),(LL13,LL37))),(WG56,(LL4,WG16)))),Methanosarcina);
(((WG74,((LL18,((WG21,WG22),WG43)),WG481)),((WG56,(LL4,WG16)),((LL41A,(((WG58A,WG23A),LL5),LL24)),(((LL1,((LLX12A,((WG26,LLX3),WG42)),(((LL46,LLX17),LL9),LL43F))),WG28),((((LL12,LL8),LL41B),((WG34B,((WG59,WG49),WG44)),(WG58B,WG40))),((WG27,((WG36,LL14),WG14)),(LL13,LL37))))))),Methanosarcina);
((((((LL18,WG43),((WG74,(WG21,WG22)),WG481)),(((LLX17,LL46),LL9),(LL1,(LLX12A,((WG26,LLX3),(LL43F,WG42)))))),WG28),(((LL13,LL37),((((((WG58B,WG40),((LL8,LL12),LL41B)),WG34B),WG44),(WG59,WG49)),((WG36,LL14),(WG14,WG27)))),((WG56,(LL4,WG16)),(LL41A,((WG58A,(WG23A,LL5)),LL24))))),Methanosarcina);
((((((WG43,((WG21,WG22),((WG481,WG74),LL18))),((((LL46,LLX17),LL9),(LL1,((LLX12A,LL43F),(WG42,(WG26,LLX3))))),WG28)),((((LL12,LL8),LL41B),((WG34B,((WG49,WG59),WG44)),(WG58B,WG40))),(((WG36,LL14),(WG14,WG27)),(LL13,LL37)))),(LL41A,(WG58A,(WG23A,(LL24,LL5))))),(WG56,(LL4,WG16))),Methanosarcina);
(((((LL24,LL41A),(LL5,(WG58A,WG23A))),(WG56,(LL4,WG16))),((WG28,((WG43,(LL18,((WG21,WG22),(WG481,WG74)))),(((LLX17,LL46),LL9),(LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3))))))),((LL13,LL37),((WG49,(WG59,(WG44,(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B)))),((WG36,LL14),(WG14,WG27)))))),Methanosarcina);
((LLX12A,(((LL43F,WG42),(WG26,LLX3)),((((LLX17,LL46),LL9),LL1),(WG28,((((((LL12,LL8),LL41B),((WG34B,((WG59,WG44),WG49)),(WG58B,WG40))),((LL14,((WG14,WG27),WG36)),(LL13,LL37))),((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(WG56,(LL4,WG16)))),(WG43,((WG21,WG22),((WG481,WG74),LL18)))))))),Methanosarcina);
((((LL41A,(LL24,(WG23A,(LL5,WG58A)))),(WG56,(LL4,WG16))),((((((LLX17,LL46),LL9),(((LLX12A,(WG42,(WG26,LLX3))),LL43F),LL1)),(WG481,(WG74,((WG43,LL18),(WG21,WG22))))),WG28),((LL13,LL37),((WG44,((WG49,WG59),(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B))),((WG14,WG27),(WG36,LL14)))))),Methanosarcina);
(((LL41A,(LL24,(LL5,(WG58A,WG23A)))),((WG56,(LL4,WG16)),(((WG22,((WG74,(WG481,(WG43,LL18))),WG21)),(WG28,(((LLX17,LL46),LL9),(((LLX12A,(WG42,(WG26,LLX3))),LL43F),LL1)))),((LL13,LL37),((WG49,(WG59,((((WG58B,WG40),((LL12,LL8),LL41B)),WG34B),WG44))),(LL14,((WG14,WG27),WG36))))))),Methanosarcina);
(((WG22,(((LL18,(WG74,WG481)),WG43),WG21)),((WG28,(((LLX17,LL46),LL9),((LLX12A,((LL43F,WG42),(WG26,LLX3))),LL1))),(((LL13,LL37),((WG44,((WG49,WG59),(((WG58B,WG40),((LL12,LL8),LL41B)),WG34B))),(LL14,((WG14,WG27),WG36)))),((LL41A,(LL24,(LL5,(WG58A,WG23A)))),(WG56,(LL4,WG16)))))),Methanosarcina);
((WG28,((LLX12A,(LL1,((WG26,LLX3),(LL43F,(((LLX17,LL46),LL9),WG42))))),((((((LL12,LL8),LL41B),((((WG34B,WG59),WG44),WG49),(WG58B,WG40))),((WG27,((WG36,LL14),WG14)),(LL13,LL37))),((LL41A,((WG23A,(LL5,LL24)),WG58A)),(WG56,(LL4,WG16)))),(WG481,((WG43,((WG21,WG22),LL18)),WG74))))),Methanosarcina);
((((((WG58A,WG23A),LL24),LL5),LL41A),((WG56,(LL4,WG16)),((WG28,((LLX12A,((WG42,(WG26,LLX3)),((LL1,((LL46,LLX17),LL9)),LL43F))),(WG43,((LL18,(WG74,WG481)),(WG22,WG21))))),((WG49,(WG59,(WG44,(WG34B,((WG40,WG58B),(LL41B,(LL12,LL8))))))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13)))))),Methanosarcina);
(((WG43,(LL18,((WG74,WG481),(WG22,WG21)))),(((((((LL12,LL8),LL41B),((((WG59,WG44),WG34B),WG49),(WG40,WG58B))),(((WG14,WG27),(WG36,LL14)),(LL37,LL13))),(((((WG58A,WG23A),LL5),LL24),LL41A),(WG56,(LL4,WG16)))),WG28),(((LL43F,WG42),(WG26,LLX3)),((LL1,((LLX17,LL46),LL9)),LLX12A)))),Methanosarcina);
(((WG43,((WG22,WG21),(LL18,(WG74,WG481)))),(((((LL37,LL13),((((LL12,LL8),LL41B),(((WG59,WG44),WG34B),((WG49,WG40),WG58B))),((WG14,WG27),(WG36,LL14)))),(((((WG58A,WG23A),LL5),LL24),LL41A),(WG56,(LL4,WG16)))),WG28),((LLX12A,((WG26,LLX3),((LL43F,((LLX17,LL46),LL9)),WG42))),LL1))),Methanosarcina);
((WG28,((((LLX12A,((WG26,LLX3),((LL43F,((LL46,LLX17),LL9)),WG42))),LL1),((WG74,WG481),(((WG22,WG21),LL18),WG43))),(((LL37,LL13),((WG49,(WG59,(WG44,(WG34B,((WG40,WG58B),((LL12,LL8),LL41B)))))),((WG14,WG27),(WG36,LL14)))),((LL24,(LL41A,(WG58A,(WG23A,LL5)))),(WG56,(LL4,WG16)))))),Methanosarcina);
((((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(LL4,WG16))),((WG28,(((LLX12A,((WG42,WG26),(LL43F,LLX3))),(((LL46,LLX17),LL9),LL1)),(WG43,((WG74,WG481),((WG22,WG21),LL18))))),((LL37,LL13),(((WG49,(WG59,(WG44,(((LL12,LL8),LL41B),(WG34B,(WG40,WG58B)))))),((WG14,WG27),WG36)),LL14)))),Methanosarcina);
(((WG28,((((LL46,LLX17),LL9),(LL1,(LLX12A,((LL43F,WG42),(WG26,LLX3))))),((WG481,(WG43,LL18)),(WG74,(WG22,WG21))))),(((((LL12,LL8),LL41B),((WG40,WG58B),((WG44,(WG49,WG59)),WG34B))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(LL4,WG16))))),Methanosarcina);
(((LL41A,((WG58A,(WG23A,LL5)),LL24)),((WG56,(LL4,WG16)),((WG28,((((LLX17,LL46),LL9),(LL1,((LLX12A,(WG42,(WG26,LLX3))),LL43F))),(((WG22,WG21),(LL18,(WG481,WG74))),WG43))),((WG49,(WG59,((WG34B,(((LL12,LL8),LL41B),(WG40,WG58B))),WG44))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))))),Methanosarcina);
(((LL41A,((WG23A,(LL5,WG58A)),LL24)),((WG56,(LL4,WG16)),((WG28,((LL1,((LLX12A,((LL43F,WG42),(WG26,LLX3))),((LLX17,LL46),LL9))),((WG481,WG74),((WG22,WG21),(WG43,LL18))))),((((WG40,WG58B),((LL12,LL8),LL41B)),((WG44,(WG49,WG59)),WG34B)),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))))),Methanosarcina);
((LLX12A,(((((LLX17,LL46),LL9),((WG43,(((WG481,WG74),LL18),(WG22,WG21))),((((((LL12,LL8),LL41B),(((WG44,WG59),WG34B),((WG49,WG40),WG58B))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))),((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(LL4,WG16)))),WG28))),LL1),((LL43F,WG42),(WG26,LLX3)))),Methanosarcina);
((((LL41A,((LL5,(WG58A,WG23A)),LL24)),(WG56,(LL4,WG16))),((WG28,(((LL1,(((LL43F,WG42),(WG26,LLX3)),LLX12A)),((LLX17,LL46),LL9)),(WG43,(((WG481,WG74),LL18),(WG22,WG21))))),((LL37,LL13),((WG49,(WG59,(WG34B,(((WG40,WG58B),((LL12,LL8),LL41B)),WG44)))),((LL14,WG36),(WG14,WG27)))))),Methanosarcina);
((((WG56,(WG16,LL4)),((((WG481,(WG74,((WG21,WG22),(WG43,LL18)))),(LLX12A,((WG42,(WG26,LLX3)),((LL1,((LL46,LLX17),LL9)),LL43F)))),WG28),((((LL12,LL8),LL41B),((WG58B,WG40),((WG49,(WG44,WG59)),WG34B))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))))),(LL41A,((LL24,LL5),(WG58A,WG23A)))),Methanosarcina);
(((WG74,(((WG21,WG22),(WG43,LL18)),WG481)),((LL1,(((LLX17,LL46),LL9),(LL43F,(LLX12A,(WG42,(WG26,LLX3)))))),(WG28,(((LL37,LL13),((((LL12,LL8),LL41B),(((WG49,WG58B),WG40),((WG44,WG59),WG34B))),((WG14,WG27),(LL14,WG36)))),((LL41A,((LL24,LL5),(WG58A,WG23A))),(WG56,(WG16,LL4))))))),Methanosarcina);
((((((LL41A,(LL5,(WG58A,WG23A))),LL24),(WG56,(WG16,LL4))),((WG49,(((WG44,WG59),WG34B),(((LL12,LL8),LL41B),(WG58B,WG40)))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))),(((WG43,(LL18,((WG481,WG74),(WG21,WG22)))),(LLX12A,((WG42,(WG26,LLX3)),((((LL46,LLX17),LL9),LL43F),LL1)))),WG28)),Methanosarcina);
(((WG43,(LL18,((WG481,WG74),(WG21,WG22)))),((LLX12A,((WG42,(WG26,LLX3)),((((LLX17,LL46),LL9),LL1),LL43F))),(WG28,((((LL41A,((LL5,WG23A),WG58A)),LL24),(WG56,(WG16,LL4))),((WG49,((WG44,WG59),(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40))))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13))))))),Methanosarcina);
(((LL41A,((LL5,(WG23A,WG58A)),LL24)),((WG56,(WG16,LL4)),(((LL37,LL13),((WG49,((WG44,(WG34B,(((LL12,LL8),LL41B),(WG58B,WG40)))),WG59)),((WG14,WG27),(LL14,WG36)))),(((WG74,(((WG21,WG22),(WG43,LL18)),WG481)),(((LL46,LLX17),LL9),(LL1,(LL43F,((LLX12A,WG42),(WG26,LLX3)))))),WG28)))),Methanosarcina);
(((LL41A,((WG23A,WG58A),(LL24,LL5))),((WG56,(WG16,LL4)),((((LL12,(LL8,LL41B)),((WG58B,WG40),(((WG59,WG49),WG44),WG34B))),((LL14,(WG36,(WG14,WG27))),(LL37,LL13))),((((LL18,(WG481,(WG74,(WG21,WG22)))),WG43),(LL1,(LLX12A,(((LL43F,((LL46,LLX17),LL9)),WG42),(WG26,LLX3))))),WG28)))),Methanosarcina);
((WG28,((((LL41A,(((WG23A,WG58A),LL5),LL24)),(WG56,(WG16,LL4))),(((LL12,(LL8,LL41B)),((WG58B,WG40),(((WG59,WG49),WG44),WG34B))),((WG27,((LL14,WG36),WG14)),(LL37,LL13)))),((WG481,(WG74,((WG43,LL18),(WG21,WG22)))),(LL1,((LLX12A,(WG42,(WG26,LLX3))),(LL43F,((LL46,LLX17),LL9))))))),Methanosarcina);
((((WG58A,(LL5,WG23A)),(LL24,LL41A)),((WG56,(WG16,LL4)),(((LL37,LL13),(((LL12,(LL8,LL41B)),((WG58B,WG40),(((WG59,WG49),WG44),WG34B))),((LL14,WG36),(WG14,WG27)))),(((WG43,((WG22,WG21),(WG74,(WG481,LL18)))),(LL1,(((LL43F,(WG42,((LL46,LLX17),LL9))),(WG26,LLX3)),LLX12A))),WG28)))),Methanosarcina);
(((((WG43,((WG22,WG21),((WG74,WG481),LL18))),((LL1,(((LL43F,WG42),(WG26,LLX3)),LLX12A)),((LL46,LLX17),LL9))),WG28),(((((LL24,LL5),(WG23A,WG58A)),LL41A),(WG56,(WG16,LL4))),((WG49,((WG44,(WG34B,((LL41B,(LL12,LL8)),(WG58B,WG40)))),WG59)),((LL14,(WG36,(WG14,WG27))),(LL37,LL13))))),Methanosarcina);
(((WG43,((WG22,WG21),((WG74,WG481),LL18))),(((((LL24,(LL5,(WG23A,WG58A))),LL41A),(WG56,(WG16,LL4))),((((LL12,LL8),LL41B),((WG58B,WG40),(((WG59,WG49),WG44),WG34B))),(((WG14,WG27),(LL14,WG36)),(LL37,LL13)))),((LL1,(((LL43F,(((LL46,LLX17),LL9),WG42)),(WG26,LLX3)),LLX12A)),WG28))),Methanosarcina);
